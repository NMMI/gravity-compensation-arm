C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMMAND_PROCESSING
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\command_processing.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\command_processing.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Kei
                    -l_951\Debug/command_processing.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\command_processing.obj)

line level    source

   1          // ----------------------------------------------------------------------------
   2          // Copyright (C)  qbrobotics. All rights reserved.
   3          // www.qbrobotics.com
   4          // ----------------------------------------------------------------------------
   5          
   6          
   7          /**
   8          * \file         command_processing.c
   9          *
  10          
  11          * \brief        Command processing functions.
  12          * \date         May 16, 2016
  13          * \author       qbrobotics
  14          * \copyright    (C)  qbrobotics. All rights reserved.
  15          */
  16          
  17          //=================================================================     includes
  18          #include <command_processing.h>
  19          #include <interruptions.h>
  20          #include <stdio.h>
  21          #include <utils.h>
  22          
  23          #include "commands.h"
  24          
  25          //================================================================     variables
  26          
  27          reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  28          
  29          //==============================================================================
  30          //                                                            RX DATA PROCESSING
  31          //==============================================================================
  32          //  This function checks for the availability of a data packet and process it:
  33          //      - Verify checksum;
  34          //      - Process commands;
  35          //==============================================================================
  36          
  37          void commProcess(void){
  38   1      
  39   1          uint8 CYDATA rx_cmd;
  40   1      
  41   1          rx_cmd = g_rx.buffer[0];
  42   1      
  43   1      //==========================================================     verify checksum
  44   1      
  45   1          if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  46   2              // Wrong checksum
  47   2              g_rx.ready = 0;
  48   2              return;
  49   2          }
  50   1      
  51   1      
  52   1          switch(rx_cmd) {
  53   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 2   

  54   2      //=============================================================     CMD_ACTIVATE
  55   2              case CMD_ACTIVATE:
  56   2                  cmd_activate();
  57   2                  break;
  58   2      
  59   2      //===========================================================     CMD_SET_INPUTS
  60   2      
  61   2              case CMD_SET_INPUTS:
  62   2                  cmd_set_inputs();
  63   2                  break;
  64   2      
  65   2      //=====================================================     CMD_GET_MEASUREMENTS
  66   2      
  67   2              case CMD_GET_MEASUREMENTS:
  68   2                  cmd_get_measurements();
  69   2                  break;
  70   2      
  71   2      //=========================================================     CMD_GET_CURRENTS
  72   2      
  73   2              case CMD_GET_CURRENTS:
  74   2                  cmd_get_currents();
  75   2                  break;
  76   2      
  77   2      
  78   2      //=========================================================     CMD_GET_EMG
  79   2      
  80   2              case CMD_GET_EMG:
  81   2                  cmd_get_emg();
  82   2                  break;
  83   2      
  84   2      //=============================================================     CMD_WATCHDOG
  85   2                  
  86   2              case CMD_SET_WATCHDOG:
  87   2                  cmd_set_watchdog();
  88   2                  break;
  89   2                  
  90   2      //=========================================================     CMD_GET_ACTIVATE
  91   2                  
  92   2              case CMD_GET_ACTIVATE:
  93   2                  cmd_get_activate();
  94   2                  break;
  95   2                  
  96   2      //=========================================================     CMD_SET_BAUDRATE
  97   2                  
  98   2              case CMD_SET_BAUDRATE:
  99   2                  cmd_set_baudrate();
 100   2                  break;  
 101   2                  
 102   2      //============================================================     CMD_GET_INPUT
 103   2      
 104   2              case CMD_GET_INPUTS:
 105   2                  cmd_get_inputs();
 106   2                  break;
 107   2      
 108   2      //=============================================================     CMD_GET_INFO
 109   2      
 110   2              case CMD_GET_INFO:
 111   2                  infoGet( *((uint16 *) &g_rx.buffer[1]));
 112   2                  break;
 113   2      
 114   2      //============================================================     CMD_SET_PARAM
 115   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 3   

 116   2              case CMD_SET_PARAM:
 117   2                  paramSet( *((uint16 *) &g_rx.buffer[1]) );
 118   2                  break;
 119   2      
 120   2      //============================================================     CMD_GET_PARAM
 121   2      
 122   2              case CMD_GET_PARAM:
 123   2                  paramGet( *((uint16 *) &g_rx.buffer[1]) );
 124   2                  break;
 125   2      
 126   2      //=================================================================     CMD_PING
 127   2                  
 128   2              case CMD_PING:
 129   2                  cmd_ping();
 130   2                  break;
 131   2      
 132   2      //=========================================================     CMD_STORE_PARAMS
 133   2                  
 134   2              case CMD_STORE_PARAMS:
 135   2                  cmd_store_params();
 136   2                  break;
 137   2      
 138   2      //=================================================     CMD_STORE_DEFAULT_PARAMS
 139   2      
 140   2              case CMD_STORE_DEFAULT_PARAMS:
 141   2                  if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 142   2                      sendAcknowledgment(ACK_OK);
 143   2                  else
 144   2                      sendAcknowledgment(ACK_ERROR);
 145   2                  break;
 146   2      
 147   2      //=======================================================     CMD_RESTORE_PARAMS
 148   2      
 149   2              case CMD_RESTORE_PARAMS:
 150   2                  if(memRestore())
 151   2                      sendAcknowledgment(ACK_OK);
 152   2                  else
 153   2                      sendAcknowledgment(ACK_ERROR);
 154   2                  break;
 155   2      
 156   2      //=============================================================     CMD_INIT_MEM
 157   2      
 158   2              case CMD_INIT_MEM:
 159   2                  if(memInit())
 160   2                      sendAcknowledgment(ACK_OK);
 161   2                  else
 162   2                      sendAcknowledgment(ACK_ERROR);
 163   2                  break;
 164   2      
 165   2      //===========================================================     CMD_BOOTLOADER
 166   2      
 167   2              case CMD_BOOTLOADER:
 168   2                  //Not sure if ACK_OK is correct, should check
 169   2                  sendAcknowledgment(ACK_OK);
 170   2                  CyDelay(1000);
 171   2                  FTDI_ENABLE_REG_Write(0x00);
 172   2                  CyDelay(1000);
 173   2                  Bootloadable_Load();
 174   2                  break;
 175   2      
 176   2      //============================================================     CMD_CALIBRATE
 177   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 4   

 178   2              case CMD_CALIBRATE:
 179   2                  calib.speed = *((int16 *) &g_rx.buffer[1]);
 180   2                  calib.repetitions = *((int16 *) &g_rx.buffer[3]);
 181   2                  
 182   2                  // Speed & repetitions saturations
 183   2                  if (calib.speed < 0) {
 184   3                      calib.speed = 0;
 185   3                  } else if (calib.speed > 200) {
 186   3                      calib.speed = 200;
 187   3                  }
 188   2                  if (calib.repetitions < 0) {
 189   3                      calib.repetitions = 0;
 190   3                  } else if (calib.repetitions > 32767) {
 191   3                      calib.repetitions = 32767;
 192   3                  }
 193   2                  
 194   2                  g_refNew.pos[0] = 0;
 195   2                  calib.enabled = TRUE;
 196   2                  break;
 197   2          }
 198   1      }
 199          
 200          
 201          //==============================================================================
 202          //                                                                     INFO SEND
 203          //==============================================================================
 204          
 205          void infoSend(void){
 206   1          unsigned char packet_string[1100];
 207   1          infoPrepare(packet_string);
 208   1          UART_RS485_PutString(packet_string);
 209   1      }
 210          
 211          
 212          //==============================================================================
 213          //                                                              COMMAND GET INFO
 214          //==============================================================================
 215          
 216          void infoGet(uint16 info_type) {
 217   1          static unsigned char packet_string[1100];
 218   1      
 219   1          //==================================     choose info type and prepare string
 220   1      
 221   1          switch (info_type) {
 222   2              case INFO_ALL:
 223   2                  infoPrepare(packet_string);
 224   2                  UART_RS485_PutString(packet_string);
 225   2                  break;
 226   2      
 227   2              default:
 228   2                  break;
 229   2          }
 230   1      }
 231          
 232          //==============================================================================
 233          //                                                        COMMAND SET PARAMETER
 234          //==============================================================================
 235          
 236          
 237          void paramSet(uint16 param_type)
 238          {
 239   1          uint8 CYDATA i;        // iterator
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 5   

 240   1          int32 aux_int;  // auxiliary variable
 241   1          uint8 aux_uchar;
 242   1      
 243   1          switch(param_type) {
 244   2      
 245   2      //===================================================================     set_id
 246   2      
 247   2              case PARAM_ID:
 248   2                  g_mem.id = g_rx.buffer[3];
 249   2                  break;
 250   2      
 251   2      //=======================================================     set_pid_parameters
 252   2      
 253   2              case PARAM_PID_CONTROL:
 254   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 255   3                      g_mem.k_p = *((double *) &g_rx.buffer[3]) * 65536;
 256   3                      g_mem.k_i = *((double *) &g_rx.buffer[3 + 4]) * 65536;
 257   3                      g_mem.k_d = *((double *) &g_rx.buffer[3 + 8]) * 65536;
 258   3                  }
 259   2                  else {
 260   3                      g_mem.k_p_dl = *((double *) &g_rx.buffer[3]) * 65536;
 261   3                      g_mem.k_i_dl = *((double *) &g_rx.buffer[3 + 4]) * 65536;
 262   3                      g_mem.k_d_dl = *((double *) &g_rx.buffer[3 + 8]) * 65536;
 263   3                  }
 264   2                  break;
 265   2      
 266   2      //==================================================     set_curr_pid_parameters
 267   2      
 268   2              case PARAM_PID_CURR_CONTROL:
 269   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL){
 270   3                      g_mem.k_p_c = *((double *) &g_rx.buffer[3]) * 65536;
 271   3                      g_mem.k_i_c = *((double *) &g_rx.buffer[3 + 4]) * 65536;
 272   3                      g_mem.k_d_c = *((double *) &g_rx.buffer[3 + 8]) * 65536;
 273   3                  }   
 274   2                  else {
 275   3                      g_mem.k_p_c_dl = *((double *) &g_rx.buffer[3]) * 65536;
 276   3                      g_mem.k_i_c_dl = *((double *) &g_rx.buffer[3 + 4]) * 65536;
 277   3                      g_mem.k_d_c_dl = *((double *) &g_rx.buffer[3 + 8]) * 65536; 
 278   3                  }
 279   2                  break;
 280   2      
 281   2      //===================================================     set_startup_activation
 282   2      
 283   2              case PARAM_STARTUP_ACTIVATION:
 284   2                  g_mem.activ = g_rx.buffer[3];
 285   2                  break;
 286   2      
 287   2      //===========================================================     set_input_mode
 288   2      
 289   2              case PARAM_INPUT_MODE:
 290   2                  g_mem.input_mode = g_rx.buffer[3];
 291   2                  break;
 292   2      
 293   2      //=========================================================     set_control_mode
 294   2      
 295   2              case PARAM_CONTROL_MODE:
 296   2                  g_mem.control_mode = g_rx.buffer[3];
 297   2                  break;
 298   2      
 299   2      //===========================================================     set_resolution
 300   2      
 301   2              case PARAM_POS_RESOLUTION:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 6   

 302   2                  for (i =0; i < NUM_OF_SENSORS; i++) {
 303   3                      g_mem.res[i] = g_rx.buffer[i+3];
 304   3                  }
 305   2                  break;
 306   2      
 307   2      //===============================================================     set_offset
 308   2      
 309   2              case PARAM_MEASUREMENT_OFFSET:
 310   2                  for(i = 0; i < NUM_OF_SENSORS; ++i) {
 311   3                      g_mem.m_off[i] = *((int16 *) &g_rx.buffer[3 + i * 2]);
 312   3                      g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 313   3      
 314   3                      g_meas.rot[i] = 0;
 315   3                  }
 316   2                  reset_last_value_flag = 1;
 317   2                  break;
 318   2      
 319   2      //===========================================================     set_multiplier
 320   2      
 321   2              case PARAM_MEASUREMENT_MULTIPLIER:
 322   2                  for(i = 0; i < NUM_OF_SENSORS; ++i) {
 323   3                      g_mem.m_mult[i] = *((double *) &g_rx.buffer[3 + i * 4]);
 324   3                  }
 325   2                  break;
 326   2      
 327   2      //=====================================================     set_pos_limit_enable
 328   2      
 329   2              case PARAM_POS_LIMIT_FLAG:
 330   2                  g_mem.pos_lim_flag = *((uint8 *) &g_rx.buffer[3]);
 331   2                  break;
 332   2      
 333   2      //============================================================     set_pos_limit
 334   2      
 335   2              case PARAM_POS_LIMIT:
 336   2                  for (i = 0; i < NUM_OF_MOTORS; i++) {
 337   3                      g_mem.pos_lim_inf[i] = *((int32 *) &g_rx.buffer[3 + (i * 2 * 4)]);
 338   3                      g_mem.pos_lim_sup[i] = *((int32 *) &g_rx.buffer[3 + (i * 2 * 4) + 4]);
 339   3      
 340   3                      g_mem.pos_lim_inf[i] = g_mem.pos_lim_inf[i] << g_mem.res[i];
 341   3                      g_mem.pos_lim_sup[i] = g_mem.pos_lim_sup[i] << g_mem.res[i];
 342   3      
 343   3                  }
 344   2                  break;
 345   2      
 346   2      //===============================================     set_max_step_pos_per_cycle
 347   2      
 348   2              case PARAM_MAX_STEP_POS:
 349   2                  aux_int = *((int32 *) &g_rx.buffer[3]);
 350   2                  if (aux_int >= 0) {
 351   3                      g_mem.max_step_pos = aux_int;
 352   3                  }
 353   2                  break;
 354   2      
 355   2      //===============================================     set_max_step_neg_per_cycle
 356   2      
 357   2              case PARAM_MAX_STEP_NEG:
 358   2                  aux_int = *((int32 *) &g_rx.buffer[3]);
 359   2                  if (aux_int <= 0) {
 360   3                      g_mem.max_step_neg = aux_int;
 361   3                  }
 362   2                  break;
 363   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 7   

 364   2      //========================================================     set_current_limit
 365   2      
 366   2              case PARAM_CURRENT_LIMIT:
 367   2                  g_mem.current_limit = *((int16*) &g_rx.buffer[3]);
 368   2                  break;
 369   2      
 370   2      //=======================================================     set_emg_calib_flag
 371   2      
 372   2              case PARAM_EMG_CALIB_FLAG:
 373   2                  g_mem.emg_calibration_flag = *((uint8*) &g_rx.buffer[3]);
 374   2                  break;
 375   2      
 376   2      //========================================================     set_emg_threshold
 377   2      
 378   2              case PARAM_EMG_THRESHOLD:
 379   2                  g_mem.emg_threshold[0] = *((uint16*) &g_rx.buffer[3]);
 380   2                  g_mem.emg_threshold[1] = *((uint16*) &g_rx.buffer[5]);
 381   2                  break;
 382   2      
 383   2      //========================================================     set_emg_max_value
 384   2      
 385   2              case PARAM_EMG_MAX_VALUE:
 386   2                  g_mem.emg_max_value[0] = *((uint32*) &g_rx.buffer[3]);
 387   2                  g_mem.emg_max_value[1] = *((uint32*) &g_rx.buffer[7]);
 388   2                  break;
 389   2      
 390   2      //============================================================     set_emg_speed
 391   2      
 392   2              case PARAM_EMG_SPEED:
 393   2                  g_mem.emg_speed = *((uint8*) &g_rx.buffer[3]);
 394   2                  break;
 395   2      
 396   2      //================================================     set_double_encoder_on_off
 397   2              case PARAM_DOUBLE_ENC_ON_OFF:
 398   2                  aux_uchar = *((uint8*) &g_rx.buffer[3]);
 399   2                  if (aux_uchar) {
 400   3                      g_mem.double_encoder_on_off = 1;
 401   3                  } else {
 402   3                      g_mem.double_encoder_on_off = 0;
 403   3                  }
 404   2                  break;
 405   2      
 406   2      //===================================================     set_motor_handle_ratio
 407   2              case PARAM_MOT_HANDLE_RATIO:
 408   2                  g_mem.motor_handle_ratio = *((int8*) &g_rx.buffer[3]);
 409   2                  break;
 410   2      
 411   2      //===================================================     set_motor_supply_type
 412   2              case PARAM_MOTOR_SUPPLY:
 413   2                  g_mem.activate_pwm_rescaling = g_rx.buffer[3];
 414   2                  break;
 415   2      
 416   2          }
 417   1          //Not sure if ACK_OK is correct, should check
 418   1          sendAcknowledgment(ACK_OK);
 419   1      }
 420          
 421          
 422          //==============================================================================
 423          //                                                         COMMAND GET PARAMETER
 424          //==============================================================================
 425          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 8   

 426          void paramGet(uint16 param_type)
 427          {
 428   1          uint8 packet_data[20];
 429   1          uint16 packet_lenght;
 430   1          uint8 i;                // iterator
 431   1      
 432   1          packet_data[0] = CMD_GET_PARAM;
 433   1      
 434   1          switch(param_type) {
 435   2      
 436   2      //===================================================================     get_id
 437   2      
 438   2              case PARAM_ID:
 439   2                  packet_data[1] = c_mem.id;
 440   2                  packet_lenght = 3;
 441   2                  break;
 442   2      
 443   2      //=======================================================     get_pid_parameters
 444   2      
 445   2              case PARAM_PID_CONTROL:
 446   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 447   3                      *((double *) (packet_data + 1)) = (double) c_mem.k_p / 65536;
 448   3                      *((double *) (packet_data + 5)) = (double) c_mem.k_i / 65536;
 449   3                      *((double *) (packet_data + 9)) = (double) c_mem.k_d / 65536;
 450   3                  }
 451   2                  else {
 452   3                      *((double *) (packet_data + 1)) = (double) c_mem.k_p_dl / 65536;
 453   3                      *((double *) (packet_data + 5)) = (double) c_mem.k_i_dl / 65536;
 454   3                      *((double *) (packet_data + 9)) = (double) c_mem.k_d_dl / 65536;
 455   3                  }
 456   2                  packet_lenght = 14;
 457   2                  break;
 458   2      
 459   2      //=======================================================     get_pid_parameters
 460   2      
 461   2              case PARAM_PID_CURR_CONTROL:
 462   2                  if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 463   3                      *((double *) (packet_data + 1)) = (double) c_mem.k_p_c / 65536;
 464   3                      *((double *) (packet_data + 5)) = (double) c_mem.k_i_c / 65536;
 465   3                      *((double *) (packet_data + 9)) = (double) c_mem.k_d_c / 65536;
 466   3                  }
 467   2                  else {
 468   3                      *((double *) (packet_data + 1)) = (double) c_mem.k_p_c_dl / 65536;
 469   3                      *((double *) (packet_data + 5)) = (double) c_mem.k_i_c_dl / 65536;
 470   3                      *((double *) (packet_data + 9)) = (double) c_mem.k_d_c_dl / 65536;
 471   3                  }    
 472   2                  packet_lenght = 14;
 473   2                  break;
 474   2      
 475   2      //===================================================     get_startup_activation
 476   2      
 477   2              case PARAM_STARTUP_ACTIVATION:
 478   2                  packet_data[1] = c_mem.activ;
 479   2                  packet_lenght = 3;
 480   2                  break;
 481   2      
 482   2      //===========================================================     get_input_mode
 483   2      
 484   2              case PARAM_INPUT_MODE:
 485   2                  packet_data[1] = c_mem.input_mode;
 486   2                  packet_lenght = 3;
 487   2                  break;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 9   

 488   2      
 489   2      //=========================================================     get_control_mode
 490   2      
 491   2              case PARAM_CONTROL_MODE:
 492   2                  packet_data[1] = c_mem.control_mode;
 493   2                  packet_lenght = 3;
 494   2                  break;
 495   2      
 496   2      //===========================================================     get_resolution
 497   2      
 498   2              case PARAM_POS_RESOLUTION:
 499   2                  for (i = 0; i < NUM_OF_SENSORS; i++) {
 500   3                      packet_data[i+1] = c_mem.res[i];
 501   3                  }
 502   2                  packet_lenght = NUM_OF_SENSORS + 2;
 503   2                  break;
 504   2      
 505   2      //===============================================================     get_offset
 506   2      
 507   2              case PARAM_MEASUREMENT_OFFSET:
 508   2                  for(i = 0; i < NUM_OF_SENSORS; ++i) {
 509   3                      *((int16 *) ( packet_data + 1 + (i * 2) )) = (int16) (c_mem.m_off[i] >> c_mem.res[i]);
 510   3                  }
 511   2      
 512   2                  packet_lenght = 2 + NUM_OF_SENSORS * 2;
 513   2                  break;
 514   2      
 515   2      //===========================================================     get_multiplier
 516   2      
 517   2              case PARAM_MEASUREMENT_MULTIPLIER:
 518   2                  for(i = 0; i < NUM_OF_SENSORS; ++i) {
 519   3                      *((double *) ( packet_data + 1 + (i * 4) )) = c_mem.m_mult[i];
 520   3                  }
 521   2      
 522   2                  packet_lenght = 2 + NUM_OF_SENSORS * 4;
 523   2                  break;
 524   2      
 525   2      //=====================================================     get_pos_limit_enable
 526   2      
 527   2              case PARAM_POS_LIMIT_FLAG:
 528   2                  packet_data[1] = c_mem.pos_lim_flag;
 529   2                  packet_lenght = 3;
 530   2                  break;
 531   2      
 532   2      //============================================================     get_pos_limit
 533   2      
 534   2              case PARAM_POS_LIMIT:
 535   2                  for (i = 0; i < NUM_OF_MOTORS; i++) {
 536   3                      *((int32 *)( packet_data + 1 + (i * 2 * 4) )) = c_mem.pos_lim_inf[i];
 537   3                      *((int32 *)( packet_data + 1 + (i * 2 * 4) + 4)) = c_mem.pos_lim_sup[i];
 538   3                  }
 539   2                  packet_lenght = 2 + (NUM_OF_MOTORS * 2 * 4);
 540   2                  break;
 541   2      
 542   2      //=========================================================     get_max_step_pos
 543   2      
 544   2              case PARAM_MAX_STEP_POS:
 545   2                  *((int32 *)(packet_data + 1)) = c_mem.max_step_pos;
 546   2                  packet_lenght = 6;
 547   2                  break;
 548   2      
 549   2      //=========================================================     get_max_step_neg
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 10  

 550   2      
 551   2              case PARAM_MAX_STEP_NEG:
 552   2                  *((int32 *)(packet_data + 1)) = c_mem.max_step_neg;
 553   2                  packet_lenght = 6;
 554   2                  break;
 555   2      
 556   2      //========================================================     get_current_limit
 557   2      
 558   2              case PARAM_CURRENT_LIMIT:
 559   2                  *((int16 *)(packet_data + 1)) = c_mem.current_limit;
 560   2                  packet_lenght = 4;
 561   2                  break;
 562   2      
 563   2      //=======================================================     get_emg_calib_flag
 564   2      
 565   2              case PARAM_EMG_CALIB_FLAG:
 566   2                  *((uint8 *)(packet_data + 1)) = c_mem.emg_calibration_flag;
 567   2                  packet_lenght = 3;
 568   2                  break;
 569   2      
 570   2      //========================================================     get_emg_threshold
 571   2      
 572   2              case PARAM_EMG_THRESHOLD:
 573   2                  *((uint16 *)(packet_data + 1)) = c_mem.emg_threshold[0];
 574   2                  *((uint16 *)(packet_data + 3)) = c_mem.emg_threshold[1];
 575   2                  packet_lenght = 6;
 576   2                  break;
 577   2      
 578   2      //========================================================     get_emg_max_value
 579   2      
 580   2              case PARAM_EMG_MAX_VALUE:
 581   2                  *((uint32 *)(packet_data + 1)) = c_mem.emg_max_value[0];
 582   2                  *((uint32 *)(packet_data + 5)) = c_mem.emg_max_value[1];
 583   2                  packet_lenght = 10;
 584   2                  break;
 585   2      
 586   2      //============================================================     get_emg_speed
 587   2      
 588   2              case PARAM_EMG_SPEED:
 589   2                  *((uint8 *)(packet_data + 1)) = c_mem.emg_speed;
 590   2                  packet_lenght = 3;
 591   2                  break;
 592   2      
 593   2      //================================================     get_double_encoder_on_off
 594   2              case PARAM_DOUBLE_ENC_ON_OFF:
 595   2                  *((uint8 *)(packet_data + 1)) = c_mem.double_encoder_on_off;
 596   2                  packet_lenght = 3;
 597   2                  break;
 598   2      
 599   2      //===================================================     get_motor_handle_ratio
 600   2              case PARAM_MOT_HANDLE_RATIO:
 601   2                  *((int8 *)(packet_data + 1)) = c_mem.motor_handle_ratio;
 602   2                  packet_lenght = 3;
 603   2                  break;
 604   2      
 605   2      //===================================================     get_motor_supply_type
 606   2              case PARAM_MOTOR_SUPPLY:
 607   2                  *((uint8 *)(packet_data + 1)) = c_mem.activate_pwm_rescaling;
 608   2                  packet_lenght = 3;
 609   2                  break;
 610   2      
 611   2      //===================================================     default
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 11  

 612   2              default:
 613   2                  break;
 614   2          }
 615   1      
 616   1          packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 617   1          commWrite(packet_data, packet_lenght);
 618   1      }
 619          
 620          //==============================================================================
 621          //                                                           PREPARE DEVICE INFO
 622          //==============================================================================
 623          
 624          void infoPrepare(unsigned char *info_string)
 625          {
 626   1          int i;
 627   1          if(c_mem.id != 250){                //To avoid dummy board ping
 628   2              unsigned char str[100];
 629   2              strcpy(info_string, "");
 630   2              strcat(info_string, "\r\n");
 631   2              strcat(info_string, "Firmware version: ");
 632   2              strcat(info_string, VERSION);
 633   2              strcat(info_string, ".\r\n\r\n");
 634   2      
 635   2              strcat(info_string, "DEVICE INFO\r\n");
 636   2              sprintf(str, "ID: %d\r\n", (int) c_mem.id);
 637   2              strcat(info_string, str);
 638   2              strcat(info_string, "PWM rescaling activation: ");
 639   2              if(c_mem.activate_pwm_rescaling == MAXON_12V)
 640   2                  strcat(info_string, "YES\n");
 641   2              else
 642   2                  strcat(info_string, "NO\n");
 643   2              
 644   2              sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit);
 645   2              strcat(info_string, str);
 646   2              strcat(info_string, "\r\n");
 647   2      
 648   2              strcat(info_string, "MOTOR INFO\r\n");
 649   2              strcat(info_string, "Motor reference");
 650   2              
 651   2              if(g_mem.control_mode == CONTROL_CURRENT)
 652   2                  strcat(info_string," - Currents: ");
 653   2              else {
 654   3                  if (g_mem.control_mode == CONTROL_PWM)
 655   3                      strcat(info_string," - Pwm: ");
 656   3                  else
 657   3                      strcat(info_string," - Position: ");
 658   3              }
 659   2          
 660   2              for (i = 0; i < NUM_OF_MOTORS; i++) {
 661   3                  if(g_mem.control_mode == CONTROL_CURRENT) {
 662   4                      sprintf(str, "%d ", (int)(g_ref.curr[i]));
 663   4                      strcat(info_string,str);
 664   4                  }
 665   3              else {
 666   4                  if(g_mem.control_mode == CONTROL_PWM) {
 667   5                      sprintf(str, "%d ", (int)(g_ref.pwm[i]));
 668   5                      strcat(info_string,str);
 669   5                  }
 670   4                  else {
 671   5                      sprintf(str, "%d ", (int)(g_ref.pos[i] >> c_mem.res[i]));
 672   5                      strcat(info_string,str);
 673   5                  }
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 12  

 674   4              }
 675   3          }
 676   2          strcat(info_string,"\r\n");
 677   2              strcat(info_string, "\r\n");
 678   2      
 679   2              sprintf(str, "Motor enabled: ");
 680   2              if (g_ref.onoff & 0x03) {
 681   3                  strcat(str, "YES\r\n");
 682   3              } else {
 683   3                  strcat(str, "NO\r\n");
 684   3              }
 685   2              strcat(info_string, str);
 686   2      
 687   2              strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 688   2              strcat(info_string, "Sensor value:\r\n");
 689   2              for (i = 0; i < NUM_OF_SENSORS; i++) {
 690   3                  sprintf(str, "%d -> %d", i+1,
 691   3                  (int)(g_meas.pos[i] >> c_mem.res[i]));
 692   3                  strcat(info_string, str);
 693   3                  strcat(info_string, "\r\n");
 694   3              }
 695   2      
 696   2              sprintf(str, "Voltage (mV): %ld", (int32) dev_tension );
 697   2              strcat(info_string, str);
 698   2              strcat(info_string, "\r\n");
 699   2      
 700   2              sprintf(str, "Current (mA): %ld", (int32) g_meas.curr[0] );
 701   2              strcat(info_string, str);
 702   2              strcat(info_string, "\r\n");
 703   2      
 704   2      
 705   2              strcat(info_string, "\r\nDEVICE PARAMETERS\r\n");
 706   2      
 707   2              strcat(info_string, "PID Controller:\r\n");
 708   2              sprintf(str, "P -> %f  ", ((double) c_mem.k_p / 65536));
 709   2              strcat(info_string, str);
 710   2              sprintf(str, "I -> %f  ", ((double) c_mem.k_i / 65536));
 711   2              strcat(info_string, str);
 712   2              sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d / 65536));
 713   2              strcat(info_string, str);
 714   2      
 715   2              strcat(info_string, "Current PID Controller:\r\n");
 716   2              sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c / 65536));
 717   2              strcat(info_string, str);
 718   2              sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c / 65536));
 719   2              strcat(info_string, str);
 720   2              sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c / 65536));
 721   2              strcat(info_string, str);
 722   2      
 723   2              strcat(info_string, "\r\n");
 724   2      
 725   2      
 726   2              if (c_mem.activ == 0x03) {
 727   3                  strcat(info_string, "Startup activation: YES\r\n");
 728   3              } else {
 729   3                  strcat(info_string, "Startup activation: NO\r\n");
 730   3              }
 731   2      
 732   2              switch(c_mem.input_mode) {
 733   3                  case INPUT_MODE_EXTERNAL:
 734   3                      strcat(info_string, "Input mode: USB\r\n");
 735   3                      break;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 13  

 736   3                  case INPUT_MODE_ENCODER3:
 737   3                      strcat(info_string, "Input mode: Handle\r\n");
 738   3                      break;
 739   3                  case INPUT_MODE_EMG_PROPORTIONAL:
 740   3                      strcat(info_string, "Input mode: EMG proportional\r\n");
 741   3                      break;
 742   3                  case INPUT_MODE_EMG_INTEGRAL:
 743   3                      strcat(info_string, "Input mode: EMG integral\r\n");
 744   3                      break;
 745   3                  case INPUT_MODE_EMG_FCFS:
 746   3                      strcat(info_string, "Input mode: EMG FCFS\r\n");
 747   3                      break;
 748   3                  case INPUT_MODE_EMG_FCFS_ADV:
 749   3                      strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 750   3                      break;
 751   3              }
 752   2      
 753   2              switch(c_mem.control_mode) {
 754   3                  case CONTROL_ANGLE:
 755   3                      strcat(info_string, "Control mode: Position\r\n");
 756   3                      break;
 757   3                  case CONTROL_PWM:
 758   3                      strcat(info_string, "Control mode: PWM\r\n");
 759   3                      break;
 760   3                  case CONTROL_CURRENT:
 761   3                      strcat(info_string, "Control mode: Current\r\n");
 762   3                      break;
 763   3                  case CURR_AND_POS_CONTROL:
 764   3                      strcat(info_string, "Control mode: Current and Position\r\n");
 765   3                      break;
 766   3                  default:
 767   3                      break;
 768   3              }
 769   2      
 770   2              if (c_mem.double_encoder_on_off) {
 771   3                  strcat(info_string, "Absolute encoder position: YES\r\n");
 772   3              } else {
 773   3                  strcat(info_string, "Absolute encoder position: NO\r\n");
 774   3              }
 775   2      
 776   2              sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)c_mem.motor_handle_ratio);
 777   2              strcat(info_string, str);
 778   2      
 779   2      
 780   2      
 781   2              strcat(info_string, "Sensor resolution:\r\n");
 782   2              for (i = 0; i < NUM_OF_SENSORS; ++i) {
 783   3                  sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 784   3                  strcat(info_string, str);
 785   3                  strcat(info_string, "\r\n");
 786   3              }
 787   2      
 788   2      
 789   2              strcat(info_string, "Measurement Offset:\r\n");
 790   2              for (i = 0; i < NUM_OF_SENSORS; ++i) {
 791   3                  sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 792   3                  strcat(info_string, str);
 793   3                  strcat(info_string, "\r\n");
 794   3              }
 795   2      
 796   2              strcat(info_string, "Measurement Multiplier:\r\n");
 797   2              for (i = 0; i < NUM_OF_SENSORS; ++i) {
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 14  

 798   3                  sprintf(str,"%d -> %f", (int)(i + 1), (double) c_mem.m_mult[i]);
 799   3                  strcat(info_string, str);
 800   3                  strcat(info_string,"\r\n");
 801   3              }
 802   2      
 803   2              sprintf(str, "Position limit active: %d", (int)g_mem.pos_lim_flag);
 804   2              strcat(info_string, str);
 805   2              strcat(info_string, "\r\n");
 806   2      
 807   2              for (i = 0; i < NUM_OF_MOTORS - 1; i++) {
 808   3                  sprintf(str, "Position limit motor %d: inf -> %ld  ", (int)(i + 1),
 809   3                  (int32)g_mem.pos_lim_inf[i] >> g_mem.res[i]);
 810   3                  strcat(info_string, str);
 811   3      
 812   3                  sprintf(str, "sup -> %ld\r\n",
 813   3                  (int32)g_mem.pos_lim_sup[i] >> g_mem.res[i]);
 814   3                  strcat(info_string, str);
 815   3              }
 816   2      
 817   2              sprintf(str, "Max step pos and neg: %d %d", (int)g_mem.max_step_pos, (int)g_mem.max_step_neg);
 818   2              strcat(info_string, str);
 819   2              strcat(info_string, "\r\n");
 820   2      
 821   2              sprintf(str, "Current limit: %d", (int)g_mem.current_limit);
 822   2              strcat(info_string, str);
 823   2              strcat(info_string, "\r\n");
 824   2      
 825   2              sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", g_mem.emg_threshold[0], g_mem.emg_threshold[1]);
 826   2              strcat(info_string, str);
 827   2              strcat(info_string, "\r\n");
 828   2      
 829   2              sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", g_mem.emg_max_value[0], g_mem.emg_max_value[1]
             -);
 830   2              strcat(info_string, str);
 831   2              strcat(info_string, "\r\n");
 832   2      
 833   2              if (g_mem.emg_calibration_flag) {
 834   3                  strcat(info_string, "Calibration enabled: YES\r\n");
 835   3              } else {
 836   3                  strcat(info_string, "Calibration enabled: NO\r\n");
 837   3              }
 838   2      
 839   2              sprintf(str, "EMG max speed: %d", (int)g_mem.emg_speed);
 840   2              strcat(info_string, str);
 841   2              strcat(info_string, "\r\n");
 842   2      
 843   2              sprintf(str, "debug: %ld", 5000001 - (uint32)timer_value);
 844   2              strcat(info_string, str);
 845   2              strcat(info_string, "\r\n");
 846   2          }
 847   1      }
 848          
 849          //==============================================================================
 850          //                                                      WRITE FUNCTION FOR RS485
 851          //==============================================================================
 852          
 853          void commWrite(uint8 *packet_data, uint16 packet_lenght)
 854          {
 855   1          static uint16 i;    // iterator
 856   1      
 857   1          // frame - start
 858   1          UART_RS485_PutChar(':');
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 15  

 859   1          UART_RS485_PutChar(':');
 860   1          // frame - ID
 861   1          UART_RS485_PutChar(g_mem.id);
 862   1          // frame - length
 863   1          UART_RS485_PutChar((uint8)packet_lenght);
 864   1          // frame - packet data
 865   1          for(i = 0; i < packet_lenght; ++i) {
 866   2              UART_RS485_PutChar(packet_data[i]);
 867   2          }
 868   1      
 869   1          i = 0;
 870   1      
 871   1          while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 872   1      
 873   1          RS485_CTS_Write(1);
 874   1          RS485_CTS_Write(0);
 875   1      }
 876          
 877          //==============================================================================
 878          //                                                             CHECKSUM FUNCTION
 879          //==============================================================================
 880          
 881          
 882          // Performs a XOR byte by byte on the entire vector
 883          
 884          uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 885   1          
 886   1          uint8 CYDATA i;
 887   1          uint8 CYDATA checksum = 0x00;
 888   1          
 889   1          for(i = 0; i < data_length; ++i)
 890   1             checksum ^= data_array[i];
 891   1        
 892   1          return checksum;
 893   1      }
 894          
 895          
 896          //==============================================================================
 897          //                                                       ACKNOWLEDGMENT FUNCTION
 898          //==============================================================================
 899          
 900          void sendAcknowledgment(uint8 value) {
 901   1          int packet_lenght = 2;
 902   1          uint8 packet_data[2];
 903   1      
 904   1          packet_data[0] = value;
 905   1          packet_data[1] = value;
 906   1      
 907   1          commWrite(packet_data, packet_lenght);
 908   1      }
 909          
 910          //==============================================================================
 911          //                                                                  STORE MEMORY
 912          //==============================================================================
 913          
 914          /**
 915          * This function stores current memory settings on the eeprom with the specified
 916          * displacement
 917          **/
 918          
 919          uint8 memStore(int displacement)
 920          {
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 16  

 921   1          int i;  // iterator
 922   1          uint8 writeStatus;
 923   1          int pages;
 924   1          uint8 ret_val = 1;
 925   1      
 926   1          // Disable Interrupt
 927   1          ISR_RS485_RX_Disable();
 928   1      
 929   1          // Stop motors
 930   1          PWM_MOTORS_WriteCompare1(0);
 931   1          PWM_MOTORS_WriteCompare2(0);
 932   1      
 933   1          // Retrieve temperature for better writing performance
 934   1          CySetTemp();
 935   1      
 936   1          memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 937   1      
 938   1          pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 939   1      
 940   1          for(i = 0; i < pages; ++i) {
 941   2              writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 942   2              if(writeStatus != CYRET_SUCCESS) {
 943   3                  ret_val = 0;
 944   3                  break;
 945   3              }
 946   2          }
 947   1      
 948   1          memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 949   1      
 950   1          // Re-Enable Interrupt
 951   1          ISR_RS485_RX_Enable();
 952   1      
 953   1          return ret_val;
 954   1      }
 955          
 956          
 957          //==============================================================================
 958          //                                                                 RECALL MEMORY
 959          //==============================================================================
 960          
 961          /**
 962          * This function loads user settings from the eeprom.
 963          **/
 964          
 965          void memRecall(void)
 966          {
 967   1          uint16 i;
 968   1      
 969   1          for (i = 0; i < sizeof(g_mem); i++) {
 970   2              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 971   2          }
 972   1      
 973   1          //check for initialization
 974   1          if (g_mem.flag == FALSE) {
 975   2              memRestore();
 976   2          } else {
 977   2              memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 978   2          }
 979   1      }
 980          
 981          
 982          //==============================================================================
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 17  

 983          //                                                                RESTORE MEMORY
 984          //==============================================================================
 985          
 986          /**
 987          * This function loads default settings from the eeprom.
 988          **/
 989          
 990          uint8 memRestore(void) {
 991   1          uint16 i;
 992   1      
 993   1          for (i = 0; i < sizeof(g_mem); i++) {
 994   2              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 995   2          }
 996   1      
 997   1          //check for initialization
 998   1          if (g_mem.flag == FALSE) {
 999   2              return memInit();
1000   2          } else {
1001   2              return memStore(0);
1002   2          }
1003   1      }
1004          
1005          //==============================================================================
1006          //                                                                   MEMORY INIT
1007          //==============================================================================
1008          
1009          /**
1010          * This function initialize memory when eeprom is compromised.
1011          **/
1012          
1013          uint8 memInit(void)
1014          {
1015   1          uint8 i;
1016   1      
1017   1          //initialize memory settings
1018   1          g_mem.id            = 1;
1019   1      
1020   1          g_mem.k_p           = 0.015 * 65536;
1021   1          g_mem.k_i           =  0.02 * 65536;
1022   1          g_mem.k_d           = 0.007 * 65536;  //Changed in order to avoid metallic clatter previous value 0.2
1023   1          g_mem.k_p_c         =     1 * 65536;
1024   1          g_mem.k_i_c         = 0.001 * 65536;
1025   1          g_mem.k_d_c         =     0 * 65536;
1026   1      
1027   1          g_mem.activ         = 0;
1028   1          g_mem.input_mode    = INPUT_MODE_EXTERNAL;
1029   1          g_mem.control_mode  = CONTROL_ANGLE;
1030   1      
1031   1          g_mem.pos_lim_flag = 1;
1032   1      
1033   1          g_mem.activate_pwm_rescaling = MAXON_24V;           //rescaling active for 12V motors
1034   1      
1035   1          g_mem.res[0] = 3;
1036   1          g_mem.res[1] = 3;
1037   1          g_mem.res[2] = 3;
1038   1      
1039   1          for (i = 0; i < NUM_OF_MOTORS; i++) {
1040   2              g_mem.pos_lim_inf[i] = 0;
1041   2              g_mem.pos_lim_sup[i] = (int32)19000 << g_mem.res[0];
1042   2          }
1043   1      
1044   1          for(i = 0; i < NUM_OF_SENSORS; ++i)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 18  

1045   1          {
1046   2              g_mem.m_mult[i] = 1;
1047   2              g_mem.m_off[i] = (int32)0 << g_mem.res[i];
1048   2          }
1049   1      
1050   1          g_mem.max_step_pos = 0;
1051   1          g_mem.max_step_neg = 0;
1052   1      
1053   1          g_mem.current_limit = DEFAULT_CURRENT_LIMIT;
1054   1      
1055   1          // EMG calibration enabled by default
1056   1          g_mem.emg_calibration_flag = 0;
1057   1      
1058   1          g_mem.emg_max_value[0] = 0;
1059   1          g_mem.emg_max_value[1] = 0;
1060   1      
1061   1          g_mem.emg_threshold[0] = 100;
1062   1          g_mem.emg_threshold[1] = 100;
1063   1      
1064   1          g_mem.emg_speed = 100;
1065   1      
1066   1          g_mem.double_encoder_on_off = 1;
1067   1          g_mem.motor_handle_ratio = 22;
1068   1      
1069   1          // set the initialized flag to show EEPROM has been populated
1070   1          g_mem.flag = TRUE;
1071   1          
1072   1          //write that configuration to EEPROM
1073   1          return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
1074   1      }
1075          
1076          //==============================================================================
1077          //                                                    ROUTINE INTERRUPT FUNCTION
1078          //==============================================================================
1079          /**
1080          * Bunch of functions used on request from UART communication
1081          **/
1082          
1083          void cmd_get_measurements(){
1084   1       
1085   1          uint8 CYDATA index;
1086   1         
1087   1          // Packet: header + measure(int16) + crc
1088   1          
1089   1          uint8 packet_data[8]; 
1090   1          
1091   1          //Header package
1092   1          packet_data[0] = CMD_GET_MEASUREMENTS;   
1093   1          
1094   1          for (index = NUM_OF_SENSORS; index--;) 
1095   1              *((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
1096   1                  
1097   1          // Calculate Checksum and send message to UART 
1098   1      
1099   1          packet_data[7] = LCRChecksum (packet_data, 7);
1100   1      
1101   1          commWrite(packet_data, 8);
1102   1         
1103   1      }
1104          
1105          void cmd_set_inputs(){
1106   1          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 19  

1107   1          // Store position setted in right variables
1108   1      
1109   1          if(g_mem.control_mode == CONTROL_CURRENT) {
1110   2              g_refNew.curr[0] = *((int16 *) &g_rx.buffer[1]);
1111   2              g_refNew.curr[1] = *((int16 *) &g_rx.buffer[3]);
1112   2          }
1113   1          else {
1114   2              if(g_mem.control_mode == CONTROL_PWM) {
1115   3                  g_refNew.pwm[0] = *((int16 *) &g_rx.buffer[1]);
1116   3                  g_refNew.pwm[1] = *((int16 *) &g_rx.buffer[3]);
1117   3              }
1118   2              else {
1119   3                  g_refNew.pos[0] = *((int16 *) &g_rx.buffer[1]);   // motor 1
1120   3                  g_refNew.pos[0] = g_refNew.pos[0] << g_mem.res[0];
1121   3      
1122   3                  g_refNew.pos[1] = *((int16 *) &g_rx.buffer[3]);   // motor 2
1123   3                  g_refNew.pos[1] = g_refNew.pos[1] << g_mem.res[1];
1124   3              }
1125   2          }
1126   1      
1127   1          // Check Position Limit cmd
1128   1      
1129   1          if (c_mem.pos_lim_flag && 
1130   1              (g_mem.control_mode == CURR_AND_POS_CONTROL
1131   1              || g_mem.control_mode == CONTROL_ANGLE)) {                      // pos limiting
1132   2              
1133   2              if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) 
1134   2                  g_refNew.pos[0] = c_mem.pos_lim_inf[0];
1135   2              if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) 
1136   2                  g_refNew.pos[1] = c_mem.pos_lim_inf[1];
1137   2      
1138   2              if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) 
1139   2                  g_refNew.pos[0] = c_mem.pos_lim_sup[0];
1140   2              if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) 
1141   2                  g_refNew.pos[1] = c_mem.pos_lim_sup[1];
1142   2          }
1143   1      }
1144          
1145          void cmd_activate(){
1146   1          
1147   1          // Store new value reads
1148   1          g_refNew.onoff = g_rx.buffer[1];
1149   1          
1150   1          // Check type of control mode enabled
1151   1          if ((g_mem.control_mode == CONTROL_ANGLE) || (g_mem.control_mode == CURR_AND_POS_CONTROL)) {
1152   2              g_refNew.pos[0] = g_meas.pos[0];
1153   2              g_refNew.pos[1] = g_meas.pos[1];
1154   2          }
1155   1      
1156   1          // Activate/Disactivate motors
1157   1          MOTOR_ON_OFF_Write(g_refNew.onoff);
1158   1      }
1159          
1160          void cmd_get_activate(){
1161   1          
1162   1          uint8 packet_data[3];
1163   1      
1164   1          // Header        
1165   1          packet_data[0] = CMD_GET_ACTIVATE;
1166   1          
1167   1          // Fill payload
1168   1          packet_data[1] = g_ref.onoff;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 20  

1169   1          
1170   1          // Calculate checksum
1171   1          packet_data[2] = LCRChecksum(packet_data, 2);
1172   1          
1173   1          // Send package to UART
1174   1          commWrite(packet_data, 3);
1175   1      
1176   1      }
1177          
1178          void cmd_get_curr_and_meas(){
1179   1          
1180   1          uint8 CYDATA index;
1181   1         
1182   1          //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
1183   1          
1184   1          uint8 packet_data[12]; 
1185   1      
1186   1          //Header package
1187   1          packet_data[0] = CMD_GET_CURR_AND_MEAS;
1188   1          
1189   1          // Currents
1190   1          *((int16 *) &packet_data[1]) = (int16) g_measOld.curr[0];
1191   1          *((int16 *) &packet_data[3]) = (int16) g_measOld.curr[1];
1192   1      
1193   1          // Positions
1194   1          for (index = NUM_OF_SENSORS; index--;) 
1195   1              *((int16 *) &packet_data[(index << 2) + 5]) = (int16) (g_measOld.pos[index] >> g_mem.res[index]);
1196   1              
1197   1          // Calculate Checksum and send message to UART 
1198   1              
1199   1          packet_data[11] = LCRChecksum (packet_data, 11);
1200   1          commWrite(packet_data, 12);
1201   1         
1202   1      }
1203          
1204          void cmd_get_currents(){
1205   1          
1206   1          // Packet: header + motor_measure(int16) + crc
1207   1          
1208   1          uint8 packet_data[6]; 
1209   1          
1210   1          //Header package
1211   1      
1212   1          packet_data[0] = CMD_GET_CURRENTS;
1213   1      
1214   1          *((int16 *) &packet_data[1]) = (int16) g_measOld.curr[0];
1215   1          *((int16 *) &packet_data[3]) = (int16) g_measOld.curr[1];
1216   1      
1217   1          // Calculate Checksum and send message to UART 
1218   1      
1219   1          packet_data[5] = LCRChecksum (packet_data, 5);
1220   1      
1221   1          commWrite(packet_data, 6);
1222   1      }
1223          
1224          void cmd_set_baudrate(){
1225   1          
1226   1          // Set BaudRate
1227   1          c_mem.baud_rate = g_rx.buffer[1];
1228   1          
1229   1          switch(g_rx.buffer[1]){
1230   2              case 13:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 21  

1231   2                  CLOCK_UART_SetDividerValue(13);
1232   2                  break;
1233   2              default:
1234   2                  CLOCK_UART_SetDividerValue(3);
1235   2          }
1236   1      }
1237          
1238          void cmd_ping(){
1239   1      
1240   1          uint8 packet_data[2];
1241   1      
1242   1          // Header
1243   1          packet_data[0] = CMD_PING;
1244   1          
1245   1          // Load Payload
1246   1          packet_data[1] = CMD_PING;
1247   1      
1248   1          // Send Package to uart
1249   1          commWrite(packet_data, 2);
1250   1      }
1251          
1252          void cmd_set_watchdog(){
1253   1            
1254   1          if (g_rx.buffer[1] <= 0){
1255   2              // Deactivate Watchdog
1256   2              WATCHDOG_ENABLER_Write(1); 
1257   2              g_mem.watchdog_period = 0;   
1258   2          }
1259   1          else{
1260   2              // Activate Watchdog        
1261   2              if (g_rx.buffer[1] > MAX_WATCHDOG_TIMER)
1262   2                  g_rx.buffer[1] = MAX_WATCHDOG_TIMER;
1263   2                  
1264   2              // Period * Time_CLK = WDT
1265   2              // Period = WTD / Time_CLK =     (WTD    )  / ( ( 1 / Freq_CLK ) )
1266   2              // Set request watchdog period - (WTD * 2)  * (250 / 1024        )
1267   2              g_mem.watchdog_period = (uint8) (((uint32) g_rx.buffer[1] * 2 * 250 ) >> 10);   
1268   2              WATCHDOG_COUNTER_WritePeriod(g_mem.watchdog_period); 
1269   2              WATCHDOG_ENABLER_Write(0); 
1270   2          }
1271   1      }
1272          
1273          void cmd_get_inputs(){
1274   1      
1275   1          // Packet: header + motor_measure(int16) + crc
1276   1      
1277   1          uint8 packet_data[6]; 
1278   1          
1279   1          //Header package
1280   1      
1281   1          packet_data[0] = CMD_GET_INPUTS;
1282   1          
1283   1          *((int16 *) &packet_data[1]) = (int16) (g_refOld.pos[0]  >> g_mem.res[0]);
1284   1          *((int16 *) &packet_data[3]) = (int16) (g_refOld.pos[1]  >> g_mem.res[1]);
1285   1          
1286   1          // Calculate Checksum and send message to UART 
1287   1      
1288   1          packet_data[5] = LCRChecksum(packet_data, 5);
1289   1      
1290   1          commWrite(packet_data, 6);
1291   1      }
1292          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 22  

1293          void cmd_store_params(){
1294   1          
1295   1          // Check input mode enabled
1296   1          uint32 off_1, off_2;
1297   1          float mult_1, mult_2;
1298   1          
1299   1          if( c_mem.input_mode == INPUT_MODE_EXTERNAL ) {
1300   2              off_1 = c_mem.m_off[0];
1301   2              off_2 = c_mem.m_off[1];
1302   2              mult_1 = c_mem.m_mult[0];
1303   2              mult_2 = c_mem.m_mult[1];
1304   2      
1305   2              g_refNew.pos[0] = (int32)((float)g_refNew.pos[0] / mult_1);
1306   2              g_refNew.pos[1] = (int32)((float)g_refNew.pos[1] / mult_2);
1307   2      
1308   2              g_refNew.pos[0] = (int32)((float)g_refNew.pos[0] * g_mem.m_mult[0]);
1309   2              g_refNew.pos[1] = (int32)((float)g_refNew.pos[1] * g_mem.m_mult[1]);
1310   2      
1311   2              g_refNew.pos[0] += (g_mem.m_off[0] - off_1);
1312   2              g_refNew.pos[1] += (g_mem.m_off[1] - off_2);
1313   2              
1314   2              // Check position Limits
1315   2      
1316   2              if (c_mem.pos_lim_flag) {                   // position limiting
1317   3                  if (g_refNew.pos[0] < c_mem.pos_lim_inf[0]) 
1318   3                      g_refNew.pos[0] = c_mem.pos_lim_inf[0];
1319   3                  if (g_refNew.pos[1] < c_mem.pos_lim_inf[1]) 
1320   3                      g_refNew.pos[1] = c_mem.pos_lim_inf[1];
1321   3      
1322   3                  if (g_refNew.pos[0] > c_mem.pos_lim_sup[0]) 
1323   3                      g_refNew.pos[0] = c_mem.pos_lim_sup[0];
1324   3                  if (g_refNew.pos[1] > c_mem.pos_lim_sup[1]) 
1325   3                      g_refNew.pos[1] = c_mem.pos_lim_sup[1];
1326   3              }
1327   2          }
1328   1          // Store params 
1329   1      
1330   1          if(memStore(0))
1331   1              sendAcknowledgment(ACK_OK);
1332   1          else
1333   1              sendAcknowledgment(ACK_ERROR);
1334   1      }
1335          
1336          void cmd_get_emg(){
1337   1          
1338   1          uint8 packet_data[6];
1339   1      
1340   1          // Header        
1341   1          packet_data[0] = CMD_GET_EMG;
1342   1          
1343   1          *((int16 *) &packet_data[1]) = (int16) g_measOld.emg[0];
1344   1          *((int16 *) &packet_data[3]) = (int16) g_measOld.emg[1];
1345   1      
1346   1          packet_data[5] = LCRChecksum (packet_data, 5);
1347   1      
1348   1          commWrite(packet_data, 6);
1349   1      
1350   1      }
1351          
1352          /* [] END OF FILE */
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 23  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION commProcess (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 41
0000 900000      E     MOV     DPTR,#g_rx
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 8F00        R     MOV     rx_cmd,R7
                                           ; SOURCE LINE # 45
0007 7B01              MOV     R3,#01H
0009 7A00        E     MOV     R2,#HIGH g_rx
000B 7900        E     MOV     R1,#LOW g_rx
000D 900000      E     MOV     DPTR,#g_rx+080H
0010 E0                MOVX    A,@DPTR
0011 FE                MOV     R6,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 14                DEC     A
0017 FD                MOV     R5,A
0018 120000      R     LCALL   _LCRChecksum
001B 900000      E     MOV     DPTR,#g_rx+080H
001E E0                MOVX    A,@DPTR
001F FC                MOV     R4,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FD                MOV     R5,A
0023 7400        E     MOV     A,#LOW g_rx+0FFFFH
0025 2D                ADD     A,R5
0026 F582              MOV     DPL,A
0028 7400        E     MOV     A,#HIGH g_rx+0FFFFH
002A 3C                ADDC    A,R4
002B F583              MOV     DPH,A
002D E0                MOVX    A,@DPTR
002E FE                MOV     R6,A
002F EF                MOV     A,R7
0030 B50603            CJNE    A,AR6,?C0002
0033 D3                SETB    C
0034 8001              SJMP    ?C0003
0036         ?C0002:
0036 C3                CLR     C
0037         ?C0003:
0037 4006              JC      ?C0001
                                           ; SOURCE LINE # 47
0039 900000      E     MOV     DPTR,#g_rx+084H
003C E4                CLR     A
003D F0                MOVX    @DPTR,A
003E 22                RET     
                                           ; SOURCE LINE # 49
003F         ?C0001:
                                           ; SOURCE LINE # 52
003F E500        R     MOV     A,rx_cmd
0041 120000      E     LCALL   ?C?CCASE
0044 0000        R     DW      ?C0018
0046 00                DB      00H
0047 0000        R     DW      ?C0016
0049 01                DB      01H
004A 0000        R     DW      ?C0017
004C 02                DB      02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 24  

004D 0000        R     DW      ?C0019
004F 03                DB      03H
0050 0000        R     DW      ?C0020
0052 04                DB      04H
0053 0000        R     DW      ?C0023
0055 05                DB      05H
0056 0000        R     DW      ?C0015
0058 06                DB      06H
0059 0000        R     DW      ?C0029
005B 09                DB      09H
005C 0000        R     DW      ?C0026
005E 0A                DB      0AH
005F 0000        R     DW      ?C0030
0061 0B                DB      0BH
0062 0000        R     DW      ?C0006
0064 80                DB      080H
0065 0000        R     DW      ?C0012
0067 81                DB      081H
0068 0000        R     DW      ?C0007
006A 82                DB      082H
006B 0000        R     DW      ?C0014
006D 83                DB      083H
006E 0000        R     DW      ?C0008
0070 84                DB      084H
0071 0000        R     DW      ?C0009
0073 85                DB      085H
0074 0000        R     DW      ?C0010
0076 88                DB      088H
0077 0000        R     DW      ?C0011
0079 8A                DB      08AH
007A 0000        R     DW      ?C0013
007C 8B                DB      08BH
007D 0000              DW      00H
007F 0000        R     DW      ?C0004
                                           ; SOURCE LINE # 55
0081         ?C0006:
                                           ; SOURCE LINE # 56
0081 120000      R     LCALL   cmd_activate
                                           ; SOURCE LINE # 57
0084 22                RET     
                                           ; SOURCE LINE # 61
0085         ?C0007:
                                           ; SOURCE LINE # 62
0085 120000      R     LCALL   cmd_set_inputs
                                           ; SOURCE LINE # 63
0088 22                RET     
                                           ; SOURCE LINE # 67
0089         ?C0008:
                                           ; SOURCE LINE # 68
0089 120000      R     LCALL   cmd_get_measurements
                                           ; SOURCE LINE # 69
008C 22                RET     
                                           ; SOURCE LINE # 73
008D         ?C0009:
                                           ; SOURCE LINE # 74
008D 120000      R     LCALL   cmd_get_currents
                                           ; SOURCE LINE # 75
0090 22                RET     
                                           ; SOURCE LINE # 80
0091         ?C0010:
                                           ; SOURCE LINE # 81
0091 120000      R     LCALL   cmd_get_emg
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 25  

                                           ; SOURCE LINE # 82
0094 22                RET     
                                           ; SOURCE LINE # 86
0095         ?C0011:
                                           ; SOURCE LINE # 87
0095 120000      R     LCALL   cmd_set_watchdog
                                           ; SOURCE LINE # 88
0098 22                RET     
                                           ; SOURCE LINE # 92
0099         ?C0012:
                                           ; SOURCE LINE # 93
0099 120000      R     LCALL   cmd_get_activate
                                           ; SOURCE LINE # 94
009C 22                RET     
                                           ; SOURCE LINE # 98
009D         ?C0013:
                                           ; SOURCE LINE # 99
009D 120000      R     LCALL   cmd_set_baudrate
                                           ; SOURCE LINE # 100
00A0 22                RET     
                                           ; SOURCE LINE # 104
00A1         ?C0014:
                                           ; SOURCE LINE # 105
00A1 120000      R     LCALL   cmd_get_inputs
                                           ; SOURCE LINE # 106
00A4 22                RET     
                                           ; SOURCE LINE # 110
00A5         ?C0015:
                                           ; SOURCE LINE # 111
00A5 900000      E     MOV     DPTR,#g_rx+01H
00A8 E0                MOVX    A,@DPTR
00A9 FE                MOV     R6,A
00AA A3                INC     DPTR
00AB E0                MOVX    A,@DPTR
00AC FF                MOV     R7,A
00AD 120000      R     LCALL   _infoGet
                                           ; SOURCE LINE # 112
00B0 22                RET     
                                           ; SOURCE LINE # 116
00B1         ?C0016:
                                           ; SOURCE LINE # 117
00B1 900000      E     MOV     DPTR,#g_rx+01H
00B4 E0                MOVX    A,@DPTR
00B5 FE                MOV     R6,A
00B6 A3                INC     DPTR
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 120000      R     LCALL   _paramSet
                                           ; SOURCE LINE # 118
00BC 22                RET     
                                           ; SOURCE LINE # 122
00BD         ?C0017:
                                           ; SOURCE LINE # 123
00BD 900000      E     MOV     DPTR,#g_rx+01H
00C0 E0                MOVX    A,@DPTR
00C1 FE                MOV     R6,A
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 120000      R     LCALL   _paramGet
                                           ; SOURCE LINE # 124
00C8 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 26  

                                           ; SOURCE LINE # 128
00C9         ?C0018:
                                           ; SOURCE LINE # 129
00C9 120000      R     LCALL   cmd_ping
                                           ; SOURCE LINE # 130
00CC 22                RET     
                                           ; SOURCE LINE # 134
00CD         ?C0019:
                                           ; SOURCE LINE # 135
00CD 120000      R     LCALL   cmd_store_params
                                           ; SOURCE LINE # 136
00D0 22                RET     
                                           ; SOURCE LINE # 140
00D1         ?C0020:
                                           ; SOURCE LINE # 141
00D1 7F08              MOV     R7,#08H
00D3 7E00              MOV     R6,#00H
00D5 120000      R     LCALL   _memStore
00D8 EF                MOV     A,R7
00D9 6006              JZ      ?C0021
                                           ; SOURCE LINE # 142
00DB 7F01              MOV     R7,#01H
00DD 120000      R     LCALL   _sendAcknowledgment
00E0 22                RET     
00E1         ?C0021:
                                           ; SOURCE LINE # 144
00E1 7F00              MOV     R7,#00H
00E3 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 145
00E6 22                RET     
                                           ; SOURCE LINE # 149
00E7         ?C0023:
                                           ; SOURCE LINE # 150
00E7 120000      R     LCALL   memRestore
00EA EF                MOV     A,R7
00EB 6006              JZ      ?C0024
                                           ; SOURCE LINE # 151
00ED 7F01              MOV     R7,#01H
00EF 120000      R     LCALL   _sendAcknowledgment
00F2 22                RET     
00F3         ?C0024:
                                           ; SOURCE LINE # 153
00F3 7F00              MOV     R7,#00H
00F5 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 154
00F8 22                RET     
                                           ; SOURCE LINE # 158
00F9         ?C0026:
                                           ; SOURCE LINE # 159
00F9 120000      R     LCALL   memInit
00FC EF                MOV     A,R7
00FD 6006              JZ      ?C0027
                                           ; SOURCE LINE # 160
00FF 7F01              MOV     R7,#01H
0101 120000      R     LCALL   _sendAcknowledgment
0104 22                RET     
0105         ?C0027:
                                           ; SOURCE LINE # 162
0105 7F00              MOV     R7,#00H
0107 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 163
010A 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 27  

                                           ; SOURCE LINE # 167
010B         ?C0029:
                                           ; SOURCE LINE # 169
010B 7F01              MOV     R7,#01H
010D 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 170
0110 7FE8              MOV     R7,#0E8H
0112 7E03              MOV     R6,#03H
0114 7D00              MOV     R5,#00H
0116 7C00              MOV     R4,#00H
0118 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 171
011B 7F00              MOV     R7,#00H
011D 120000      E     LCALL   _FTDI_ENABLE_REG_Write
                                           ; SOURCE LINE # 172
0120 7FE8              MOV     R7,#0E8H
0122 7E03              MOV     R6,#03H
0124 7D00              MOV     R5,#00H
0126 7C00              MOV     R4,#00H
0128 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 173
012B 120000      E     LCALL   Bootloadable_Load
                                           ; SOURCE LINE # 174
012E 22                RET     
                                           ; SOURCE LINE # 178
012F         ?C0030:
                                           ; SOURCE LINE # 179
012F 900000      E     MOV     DPTR,#g_rx+01H
0132 E0                MOVX    A,@DPTR
0133 FE                MOV     R6,A
0134 A3                INC     DPTR
0135 E0                MOVX    A,@DPTR
0136 FF                MOV     R7,A
0137 900000      E     MOV     DPTR,#calib+02H
013A EE                MOV     A,R6
013B F0                MOVX    @DPTR,A
013C A3                INC     DPTR
013D EF                MOV     A,R7
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
013F 900000      E     MOV     DPTR,#g_rx+03H
0142 E0                MOVX    A,@DPTR
0143 FE                MOV     R6,A
0144 A3                INC     DPTR
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 900000      E     MOV     DPTR,#calib+04H
014A EE                MOV     A,R6
014B F0                MOVX    @DPTR,A
014C A3                INC     DPTR
014D EF                MOV     A,R7
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
014F 900000      E     MOV     DPTR,#calib+02H
0152 E0                MOVX    A,@DPTR
0153 FE                MOV     R6,A
0154 A3                INC     DPTR
0155 E0                MOVX    A,@DPTR
0156 FF                MOV     R7,A
0157 C3                CLR     C
0158 EE                MOV     A,R6
0159 6480              XRL     A,#080H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 28  

015B 9480              SUBB    A,#080H
015D 500A              JNC     ?C0031
                                           ; SOURCE LINE # 184
015F 900000      E     MOV     DPTR,#calib+02H
0162 E4                CLR     A
0163 F0                MOVX    @DPTR,A
0164 A3                INC     DPTR
0165 E4                CLR     A
0166 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
0167 801C              SJMP    ?C0032
0169         ?C0031:
0169 900000      E     MOV     DPTR,#calib+02H
016C E0                MOVX    A,@DPTR
016D FE                MOV     R6,A
016E A3                INC     DPTR
016F E0                MOVX    A,@DPTR
0170 FF                MOV     R7,A
0171 D3                SETB    C
0172 EF                MOV     A,R7
0173 94C8              SUBB    A,#0C8H
0175 EE                MOV     A,R6
0176 6480              XRL     A,#080H
0178 9480              SUBB    A,#080H
017A 4009              JC      ?C0032
                                           ; SOURCE LINE # 186
017C 900000      E     MOV     DPTR,#calib+02H
017F E4                CLR     A
0180 F0                MOVX    @DPTR,A
0181 A3                INC     DPTR
0182 74C8              MOV     A,#0C8H
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0185         ?C0032:
                                           ; SOURCE LINE # 188
0185 900000      E     MOV     DPTR,#calib+04H
0188 E0                MOVX    A,@DPTR
0189 FE                MOV     R6,A
018A A3                INC     DPTR
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D C3                CLR     C
018E EE                MOV     A,R6
018F 6480              XRL     A,#080H
0191 9480              SUBB    A,#080H
0193 500A              JNC     ?C0034
                                           ; SOURCE LINE # 189
0195 900000      E     MOV     DPTR,#calib+04H
0198 E4                CLR     A
0199 F0                MOVX    @DPTR,A
019A A3                INC     DPTR
019B E4                CLR     A
019C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
019D 801D              SJMP    ?C0035
019F         ?C0034:
019F 900000      E     MOV     DPTR,#calib+04H
01A2 E0                MOVX    A,@DPTR
01A3 FE                MOV     R6,A
01A4 A3                INC     DPTR
01A5 E0                MOVX    A,@DPTR
01A6 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 29  

01A7 D3                SETB    C
01A8 EF                MOV     A,R7
01A9 94FF              SUBB    A,#0FFH
01AB EE                MOV     A,R6
01AC 6480              XRL     A,#080H
01AE 94FF              SUBB    A,#0FFH
01B0 400A              JC      ?C0035
                                           ; SOURCE LINE # 191
01B2 900000      E     MOV     DPTR,#calib+04H
01B5 747F              MOV     A,#07FH
01B7 F0                MOVX    @DPTR,A
01B8 A3                INC     DPTR
01B9 74FF              MOV     A,#0FFH
01BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
01BC         ?C0035:
                                           ; SOURCE LINE # 194
01BC 7F00              MOV     R7,#00H
01BE 7E00              MOV     R6,#00H
01C0 7D00              MOV     R5,#00H
01C2 7C00              MOV     R4,#00H
01C4 900000      E     MOV     DPTR,#g_refNew
01C7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 195
01CA 900000      E     MOV     DPTR,#calib
01CD 7401              MOV     A,#01H
01CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
01D0         ?C0004:
01D0 22                RET     
             ; FUNCTION commProcess (END)

             ; FUNCTION infoSend (BEGIN)
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 207
0000 7B01              MOV     R3,#01H
0002 7A00        R     MOV     R2,#HIGH packet_string
0004 7900        R     MOV     R1,#LOW packet_string
0006 120000      R     LCALL   _infoPrepare
                                           ; SOURCE LINE # 208
0009 7B01              MOV     R3,#01H
000B 7A00        R     MOV     R2,#HIGH packet_string
000D 7900        R     MOV     R1,#LOW packet_string
000F 120000      E     LCALL   _UART_RS485_PutString
                                           ; SOURCE LINE # 209
0012 22                RET     
             ; FUNCTION infoSend (END)

             ; FUNCTION _infoGet (BEGIN)
                                           ; SOURCE LINE # 216
0000 900000      R     MOV     DPTR,#info_type
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0008 900000      R     MOV     DPTR,#info_type
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 30  

000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 8EF0              MOV     B,R6
0013 120000      E     LCALL   ?C?ICASE
0016 0000        R     DW      ?C0039
0018 0000              DW      00H
001A 0000              DW      00H
001C 0000        R     DW      ?C0041
                                           ; SOURCE LINE # 222
001E         ?C0039:
                                           ; SOURCE LINE # 223
001E 7B01              MOV     R3,#01H
0020 7A00        R     MOV     R2,#HIGH packet_string
0022 7900        R     MOV     R1,#LOW packet_string
0024 120000      R     LCALL   _infoPrepare
                                           ; SOURCE LINE # 224
0027 7B01              MOV     R3,#01H
0029 7A00        R     MOV     R2,#HIGH packet_string
002B 7900        R     MOV     R1,#LOW packet_string
002D 120000      E     LCALL   _UART_RS485_PutString
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0030         ?C0041:
0030 22                RET     
             ; FUNCTION _infoGet (END)

             ; FUNCTION _paramSet (BEGIN)
                                           ; SOURCE LINE # 237
0000 900000      R     MOV     DPTR,#param_type
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 243
0008 900000      R     MOV     DPTR,#param_type
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 8EF0              MOV     B,R6
0013 120000      E     LCALL   ?C?ICASE
0016 0000        R     DW      ?C0043
0018 0000              DW      00H
001A 0000        R     DW      ?C0044
001C 0001              DW      01H
001E 0000        R     DW      ?C0050
0020 0002              DW      02H
0022 0000        R     DW      ?C0051
0024 0003              DW      03H
0026 0000        R     DW      ?C0052
0028 0004              DW      04H
002A 0000        R     DW      ?C0057
002C 0005              DW      05H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 31  

002E 0000        R     DW      ?C0061
0030 0006              DW      06H
0032 0000        R     DW      ?C0065
0034 0007              DW      07H
0036 0000        R     DW      ?C0066
0038 0008              DW      08H
003A 0000        R     DW      ?C0070
003C 0009              DW      09H
003E 0000        R     DW      ?C0072
0040 000A              DW      0AH
0042 0000        R     DW      ?C0053
0044 000B              DW      0BH
0046 0000        R     DW      ?C0074
0048 000C              DW      0CH
004A 0000        R     DW      ?C0075
004C 000D              DW      0DH
004E 0000        R     DW      ?C0076
0050 000E              DW      0EH
0052 0000        R     DW      ?C0077
0054 000F              DW      0FH
0056 0000        R     DW      ?C0078
0058 0010              DW      010H
005A 0000        R     DW      ?C0047
005C 0012              DW      012H
005E 0000        R     DW      ?C0079
0060 0013              DW      013H
0062 0000        R     DW      ?C0082
0064 0014              DW      014H
0066 0000        R     DW      ?C0083
0068 0015              DW      015H
006A 0000              DW      00H
006C 0000        R     DW      ?C0042
                                           ; SOURCE LINE # 247
006E         ?C0043:
                                           ; SOURCE LINE # 248
006E 900000      E     MOV     DPTR,#g_rx+03H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      E     MOV     DPTR,#g_mem+01H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
0078 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 253
007B         ?C0044:
                                           ; SOURCE LINE # 254
007B 900000      E     MOV     DPTR,#c_mem+034H
007E E0                MOVX    A,@DPTR
007F FF                MOV     R7,A
0080 EF                MOV     A,R7
0081 6403              XRL     A,#03H
0083 6051              JZ      ?C0045
                                           ; SOURCE LINE # 255
0085 7F00              MOV     R7,#00H
0087 7E00              MOV     R6,#00H
0089 7D80              MOV     R5,#080H
008B 7C47              MOV     R4,#047H
008D 900000      E     MOV     DPTR,#g_rx+03H
0090 120000      E     LCALL   ?C?LLDXDATA0
0093 120000      E     LCALL   ?C?FPMUL
0096 120000      E     LCALL   ?C?CASTF
0099 900000      E     MOV     DPTR,#g_mem+02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 32  

009C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 256
009F 7F00              MOV     R7,#00H
00A1 7E00              MOV     R6,#00H
00A3 7D80              MOV     R5,#080H
00A5 7C47              MOV     R4,#047H
00A7 900000      E     MOV     DPTR,#g_rx+07H
00AA 120000      E     LCALL   ?C?LLDXDATA0
00AD 120000      E     LCALL   ?C?FPMUL
00B0 120000      E     LCALL   ?C?CASTF
00B3 900000      E     MOV     DPTR,#g_mem+06H
00B6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 257
00B9 7F00              MOV     R7,#00H
00BB 7E00              MOV     R6,#00H
00BD 7D80              MOV     R5,#080H
00BF 7C47              MOV     R4,#047H
00C1 900000      E     MOV     DPTR,#g_rx+0BH
00C4 120000      E     LCALL   ?C?LLDXDATA0
00C7 120000      E     LCALL   ?C?FPMUL
00CA 120000      E     LCALL   ?C?CASTF
00CD 900000      E     MOV     DPTR,#g_mem+0AH
00D0 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 258
00D3 020000      R     LJMP    ?C0042
00D6         ?C0045:
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
00D6 7F00              MOV     R7,#00H
00D8 7E00              MOV     R6,#00H
00DA 7D80              MOV     R5,#080H
00DC 7C47              MOV     R4,#047H
00DE 900000      E     MOV     DPTR,#g_rx+03H
00E1 120000      E     LCALL   ?C?LLDXDATA0
00E4 120000      E     LCALL   ?C?FPMUL
00E7 120000      E     LCALL   ?C?CASTF
00EA 900000      E     MOV     DPTR,#g_mem+01AH
00ED 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 261
00F0 7F00              MOV     R7,#00H
00F2 7E00              MOV     R6,#00H
00F4 7D80              MOV     R5,#080H
00F6 7C47              MOV     R4,#047H
00F8 900000      E     MOV     DPTR,#g_rx+07H
00FB 120000      E     LCALL   ?C?LLDXDATA0
00FE 120000      E     LCALL   ?C?FPMUL
0101 120000      E     LCALL   ?C?CASTF
0104 900000      E     MOV     DPTR,#g_mem+01EH
0107 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 262
010A 7F00              MOV     R7,#00H
010C 7E00              MOV     R6,#00H
010E 7D80              MOV     R5,#080H
0110 7C47              MOV     R4,#047H
0112 900000      E     MOV     DPTR,#g_rx+0BH
0115 120000      E     LCALL   ?C?LLDXDATA0
0118 120000      E     LCALL   ?C?FPMUL
011B 120000      E     LCALL   ?C?CASTF
011E 900000      E     MOV     DPTR,#g_mem+022H
0121 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 33  

0124 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 268
0127         ?C0047:
                                           ; SOURCE LINE # 269
0127 900000      E     MOV     DPTR,#c_mem+034H
012A E0                MOVX    A,@DPTR
012B FF                MOV     R7,A
012C EF                MOV     A,R7
012D 6403              XRL     A,#03H
012F 6051              JZ      ?C0048
                                           ; SOURCE LINE # 270
0131 7F00              MOV     R7,#00H
0133 7E00              MOV     R6,#00H
0135 7D80              MOV     R5,#080H
0137 7C47              MOV     R4,#047H
0139 900000      E     MOV     DPTR,#g_rx+03H
013C 120000      E     LCALL   ?C?LLDXDATA0
013F 120000      E     LCALL   ?C?FPMUL
0142 120000      E     LCALL   ?C?CASTF
0145 900000      E     MOV     DPTR,#g_mem+0EH
0148 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 271
014B 7F00              MOV     R7,#00H
014D 7E00              MOV     R6,#00H
014F 7D80              MOV     R5,#080H
0151 7C47              MOV     R4,#047H
0153 900000      E     MOV     DPTR,#g_rx+07H
0156 120000      E     LCALL   ?C?LLDXDATA0
0159 120000      E     LCALL   ?C?FPMUL
015C 120000      E     LCALL   ?C?CASTF
015F 900000      E     MOV     DPTR,#g_mem+012H
0162 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 272
0165 7F00              MOV     R7,#00H
0167 7E00              MOV     R6,#00H
0169 7D80              MOV     R5,#080H
016B 7C47              MOV     R4,#047H
016D 900000      E     MOV     DPTR,#g_rx+0BH
0170 120000      E     LCALL   ?C?LLDXDATA0
0173 120000      E     LCALL   ?C?FPMUL
0176 120000      E     LCALL   ?C?CASTF
0179 900000      E     MOV     DPTR,#g_mem+016H
017C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 273
017F 020000      R     LJMP    ?C0042
0182         ?C0048:
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
0182 7F00              MOV     R7,#00H
0184 7E00              MOV     R6,#00H
0186 7D80              MOV     R5,#080H
0188 7C47              MOV     R4,#047H
018A 900000      E     MOV     DPTR,#g_rx+03H
018D 120000      E     LCALL   ?C?LLDXDATA0
0190 120000      E     LCALL   ?C?FPMUL
0193 120000      E     LCALL   ?C?CASTF
0196 900000      E     MOV     DPTR,#g_mem+026H
0199 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 276
019C 7F00              MOV     R7,#00H
019E 7E00              MOV     R6,#00H
01A0 7D80              MOV     R5,#080H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 34  

01A2 7C47              MOV     R4,#047H
01A4 900000      E     MOV     DPTR,#g_rx+07H
01A7 120000      E     LCALL   ?C?LLDXDATA0
01AA 120000      E     LCALL   ?C?FPMUL
01AD 120000      E     LCALL   ?C?CASTF
01B0 900000      E     MOV     DPTR,#g_mem+02AH
01B3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 277
01B6 7F00              MOV     R7,#00H
01B8 7E00              MOV     R6,#00H
01BA 7D80              MOV     R5,#080H
01BC 7C47              MOV     R4,#047H
01BE 900000      E     MOV     DPTR,#g_rx+0BH
01C1 120000      E     LCALL   ?C?LLDXDATA0
01C4 120000      E     LCALL   ?C?FPMUL
01C7 120000      E     LCALL   ?C?CASTF
01CA 900000      E     MOV     DPTR,#g_mem+02EH
01CD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
01D0 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 283
01D3         ?C0050:
                                           ; SOURCE LINE # 284
01D3 900000      E     MOV     DPTR,#g_rx+03H
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 900000      E     MOV     DPTR,#g_mem+032H
01DB EF                MOV     A,R7
01DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 285
01DD 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 289
01E0         ?C0051:
                                           ; SOURCE LINE # 290
01E0 900000      E     MOV     DPTR,#g_rx+03H
01E3 E0                MOVX    A,@DPTR
01E4 FF                MOV     R7,A
01E5 900000      E     MOV     DPTR,#g_mem+033H
01E8 EF                MOV     A,R7
01E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
01EA 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 295
01ED         ?C0052:
                                           ; SOURCE LINE # 296
01ED 900000      E     MOV     DPTR,#g_rx+03H
01F0 E0                MOVX    A,@DPTR
01F1 FF                MOV     R7,A
01F2 900000      E     MOV     DPTR,#g_mem+034H
01F5 EF                MOV     A,R7
01F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
01F7 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 301
01FA         ?C0053:
                                           ; SOURCE LINE # 302
01FA 750000      R     MOV     i,#00H
01FD         ?C0054:
01FD E500        R     MOV     A,i
01FF C3                CLR     C
0200 9403              SUBB    A,#03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 35  

0202 4003              JC      $ + 5H
0204 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 303
0207 AF00        R     MOV     R7,i
0209 7400        E     MOV     A,#LOW g_rx+03H
020B 2F                ADD     A,R7
020C F582              MOV     DPL,A
020E E4                CLR     A
020F 3400        E     ADDC    A,#HIGH g_rx+03H
0211 F583              MOV     DPH,A
0213 E0                MOVX    A,@DPTR
0214 FF                MOV     R7,A
0215 AE00        R     MOV     R6,i
0217 7400        E     MOV     A,#LOW g_mem+035H
0219 2E                ADD     A,R6
021A F582              MOV     DPL,A
021C E4                CLR     A
021D 3400        E     ADDC    A,#HIGH g_mem+035H
021F F583              MOV     DPH,A
0221 EF                MOV     A,R7
0222 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
0223 0500        R     INC     i
0225 80D6              SJMP    ?C0054
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 309
0227         ?C0057:
                                           ; SOURCE LINE # 310
0227 750000      R     MOV     i,#00H
022A         ?C0058:
022A E500        R     MOV     A,i
022C C3                CLR     C
022D 9403              SUBB    A,#03H
022F 506F              JNC     ?C0059
                                           ; SOURCE LINE # 311
0231 AF00        R     MOV     R7,i
0233 EF                MOV     A,R7
0234 25E0              ADD     A,ACC
0236 2400        E     ADD     A,#LOW g_rx+03H
0238 F582              MOV     DPL,A
023A E4                CLR     A
023B 3400        E     ADDC    A,#HIGH g_rx+03H
023D F583              MOV     DPH,A
023F E0                MOVX    A,@DPTR
0240 FE                MOV     R6,A
0241 A3                INC     DPTR
0242 E0                MOVX    A,@DPTR
0243 FF                MOV     R7,A
0244 EE                MOV     A,R6
0245 33                RLC     A
0246 95E0              SUBB    A,ACC
0248 FD                MOV     R5,A
0249 FC                MOV     R4,A
024A AB00        R     MOV     R3,i
024C EB                MOV     A,R3
024D 25E0              ADD     A,ACC
024F 25E0              ADD     A,ACC
0251 2400        E     ADD     A,#LOW g_mem+038H
0253 F582              MOV     DPL,A
0255 E4                CLR     A
0256 3400        E     ADDC    A,#HIGH g_mem+038H
0258 F583              MOV     DPH,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 36  

025A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 312
025D AF00        R     MOV     R7,i
025F EF                MOV     A,R7
0260 25E0              ADD     A,ACC
0262 25E0              ADD     A,ACC
0264 2400        E     ADD     A,#LOW g_mem+038H
0266 F582              MOV     DPL,A
0268 E4                CLR     A
0269 3400        E     ADDC    A,#HIGH g_mem+038H
026B F583              MOV     DPH,A
026D C083              PUSH    DPH
026F C082              PUSH    DPL
0271 120000      E     LCALL   ?C?LLDXDATA
0274 AB00        R     MOV     R3,i
0276 7400        E     MOV     A,#LOW g_mem+035H
0278 2B                ADD     A,R3
0279 F582              MOV     DPL,A
027B E4                CLR     A
027C 3400        E     ADDC    A,#HIGH g_mem+035H
027E F583              MOV     DPH,A
0280 E0                MOVX    A,@DPTR
0281 F9                MOV     R1,A
0282 A801              MOV     R0,AR1
0284 120000      E     LCALL   ?C?LSHL
0287 D082              POP     DPL
0289 D083              POP     DPH
028B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 314
028E AF00        R     MOV     R7,i
0290 7400        E     MOV     A,#LOW g_meas+014H
0292 2F                ADD     A,R7
0293 F582              MOV     DPL,A
0295 E4                CLR     A
0296 3400        E     ADDC    A,#HIGH g_meas+014H
0298 F583              MOV     DPH,A
029A E4                CLR     A
029B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
029C 0500        R     INC     i
029E 808A              SJMP    ?C0058
02A0         ?C0059:
                                           ; SOURCE LINE # 316
02A0 D200        E     SETB    reset_last_value_flag
                                           ; SOURCE LINE # 317
02A2 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 321
02A5         ?C0061:
                                           ; SOURCE LINE # 322
02A5 750000      R     MOV     i,#00H
02A8         ?C0062:
02A8 E500        R     MOV     A,i
02AA C3                CLR     C
02AB 9403              SUBB    A,#03H
02AD 4003              JC      $ + 5H
02AF 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 323
02B2 AF00        R     MOV     R7,i
02B4 EF                MOV     A,R7
02B5 25E0              ADD     A,ACC
02B7 25E0              ADD     A,ACC
02B9 2400        E     ADD     A,#LOW g_rx+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 37  

02BB F582              MOV     DPL,A
02BD E4                CLR     A
02BE 3400        E     ADDC    A,#HIGH g_rx+03H
02C0 F583              MOV     DPH,A
02C2 120000      E     LCALL   ?C?LLDXDATA
02C5 AB00        R     MOV     R3,i
02C7 EB                MOV     A,R3
02C8 25E0              ADD     A,ACC
02CA 25E0              ADD     A,ACC
02CC 2400        E     ADD     A,#LOW g_mem+044H
02CE F582              MOV     DPL,A
02D0 E4                CLR     A
02D1 3400        E     ADDC    A,#HIGH g_mem+044H
02D3 F583              MOV     DPH,A
02D5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 324
02D8 0500        R     INC     i
02DA 80CC              SJMP    ?C0062
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 329
02DC         ?C0065:
                                           ; SOURCE LINE # 330
02DC 900000      E     MOV     DPTR,#g_rx+03H
02DF E0                MOVX    A,@DPTR
02E0 FF                MOV     R7,A
02E1 900000      E     MOV     DPTR,#g_mem+050H
02E4 EF                MOV     A,R7
02E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
02E6 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 335
02E9         ?C0066:
                                           ; SOURCE LINE # 336
02E9 750000      R     MOV     i,#00H
02EC         ?C0067:
02EC E500        R     MOV     A,i
02EE C3                CLR     C
02EF 9402              SUBB    A,#02H
02F1 4003              JC      $ + 5H
02F3 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 337
02F6 AF00        R     MOV     R7,i
02F8 EF                MOV     A,R7
02F9 75F008            MOV     B,#08H
02FC A4                MUL     AB
02FD 2400        E     ADD     A,#LOW g_rx+03H
02FF F582              MOV     DPL,A
0301 E4                CLR     A
0302 3400        E     ADDC    A,#HIGH g_rx+03H
0304 F583              MOV     DPH,A
0306 120000      E     LCALL   ?C?LLDXDATA
0309 AB00        R     MOV     R3,i
030B EB                MOV     A,R3
030C 25E0              ADD     A,ACC
030E 25E0              ADD     A,ACC
0310 2400        E     ADD     A,#LOW g_mem+051H
0312 F582              MOV     DPL,A
0314 E4                CLR     A
0315 3400        E     ADDC    A,#HIGH g_mem+051H
0317 F583              MOV     DPH,A
0319 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 338
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 38  

031C AF00        R     MOV     R7,i
031E EF                MOV     A,R7
031F 75F008            MOV     B,#08H
0322 A4                MUL     AB
0323 2400        E     ADD     A,#LOW g_rx+07H
0325 F582              MOV     DPL,A
0327 E4                CLR     A
0328 3400        E     ADDC    A,#HIGH g_rx+07H
032A F583              MOV     DPH,A
032C 120000      E     LCALL   ?C?LLDXDATA
032F AB00        R     MOV     R3,i
0331 EB                MOV     A,R3
0332 25E0              ADD     A,ACC
0334 25E0              ADD     A,ACC
0336 2400        E     ADD     A,#LOW g_mem+059H
0338 F582              MOV     DPL,A
033A E4                CLR     A
033B 3400        E     ADDC    A,#HIGH g_mem+059H
033D F583              MOV     DPH,A
033F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 340
0342 AF00        R     MOV     R7,i
0344 EF                MOV     A,R7
0345 25E0              ADD     A,ACC
0347 25E0              ADD     A,ACC
0349 2400        E     ADD     A,#LOW g_mem+051H
034B F582              MOV     DPL,A
034D E4                CLR     A
034E 3400        E     ADDC    A,#HIGH g_mem+051H
0350 F583              MOV     DPH,A
0352 C083              PUSH    DPH
0354 C082              PUSH    DPL
0356 120000      E     LCALL   ?C?LLDXDATA
0359 AB00        R     MOV     R3,i
035B 7400        E     MOV     A,#LOW g_mem+035H
035D 2B                ADD     A,R3
035E F582              MOV     DPL,A
0360 E4                CLR     A
0361 3400        E     ADDC    A,#HIGH g_mem+035H
0363 F583              MOV     DPH,A
0365 E0                MOVX    A,@DPTR
0366 F9                MOV     R1,A
0367 A801              MOV     R0,AR1
0369 120000      E     LCALL   ?C?LSHL
036C D082              POP     DPL
036E D083              POP     DPH
0370 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 341
0373 AF00        R     MOV     R7,i
0375 EF                MOV     A,R7
0376 25E0              ADD     A,ACC
0378 25E0              ADD     A,ACC
037A 2400        E     ADD     A,#LOW g_mem+059H
037C F582              MOV     DPL,A
037E E4                CLR     A
037F 3400        E     ADDC    A,#HIGH g_mem+059H
0381 F583              MOV     DPH,A
0383 C083              PUSH    DPH
0385 C082              PUSH    DPL
0387 120000      E     LCALL   ?C?LLDXDATA
038A AB00        R     MOV     R3,i
038C 7400        E     MOV     A,#LOW g_mem+035H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 39  

038E 2B                ADD     A,R3
038F F582              MOV     DPL,A
0391 E4                CLR     A
0392 3400        E     ADDC    A,#HIGH g_mem+035H
0394 F583              MOV     DPH,A
0396 E0                MOVX    A,@DPTR
0397 F9                MOV     R1,A
0398 A801              MOV     R0,AR1
039A 120000      E     LCALL   ?C?LSHL
039D D082              POP     DPL
039F D083              POP     DPH
03A1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 343
03A4 0500        R     INC     i
03A6 020000      R     LJMP    ?C0067
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 348
03A9         ?C0070:
                                           ; SOURCE LINE # 349
03A9 900000      E     MOV     DPTR,#g_rx+03H
03AC 120000      E     LCALL   ?C?LLDXDATA
03AF 900000      R     MOV     DPTR,#aux_int
03B2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 350
03B5 7F00              MOV     R7,#00H
03B7 7E00              MOV     R6,#00H
03B9 7D00              MOV     R5,#00H
03BB 7C00              MOV     R4,#00H
03BD 900000      R     MOV     DPTR,#aux_int
03C0 120000      E     LCALL   ?C?LLDXDATA0
03C3 C3                CLR     C
03C4 120000      E     LCALL   ?C?SLCMP
03C7 5003              JNC     $ + 5H
03C9 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 351
03CC 900000      R     MOV     DPTR,#aux_int
03CF 120000      E     LCALL   ?C?LLDXDATA
03D2 900000      E     MOV     DPTR,#g_mem+061H
03D5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
03D8 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 357
03DB         ?C0072:
                                           ; SOURCE LINE # 358
03DB 900000      E     MOV     DPTR,#g_rx+03H
03DE 120000      E     LCALL   ?C?LLDXDATA
03E1 900000      R     MOV     DPTR,#aux_int
03E4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 359
03E7 7F00              MOV     R7,#00H
03E9 7E00              MOV     R6,#00H
03EB 7D00              MOV     R5,#00H
03ED 7C00              MOV     R4,#00H
03EF 900000      R     MOV     DPTR,#aux_int
03F2 120000      E     LCALL   ?C?LLDXDATA0
03F5 D3                SETB    C
03F6 120000      E     LCALL   ?C?SLCMP
03F9 4003              JC      $ + 5H
03FB 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 360
03FE 900000      R     MOV     DPTR,#aux_int
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 40  

0401 120000      E     LCALL   ?C?LLDXDATA
0404 900000      E     MOV     DPTR,#g_mem+065H
0407 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
040A 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 366
040D         ?C0074:
                                           ; SOURCE LINE # 367
040D 900000      E     MOV     DPTR,#g_rx+03H
0410 E0                MOVX    A,@DPTR
0411 FE                MOV     R6,A
0412 A3                INC     DPTR
0413 E0                MOVX    A,@DPTR
0414 FF                MOV     R7,A
0415 900000      E     MOV     DPTR,#g_mem+069H
0418 EE                MOV     A,R6
0419 F0                MOVX    @DPTR,A
041A A3                INC     DPTR
041B EF                MOV     A,R7
041C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 368
041D 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 372
0420         ?C0075:
                                           ; SOURCE LINE # 373
0420 900000      E     MOV     DPTR,#g_rx+03H
0423 E0                MOVX    A,@DPTR
0424 FF                MOV     R7,A
0425 900000      E     MOV     DPTR,#g_mem+06FH
0428 EF                MOV     A,R7
0429 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 374
042A 807F              SJMP    ?C0042
                                           ; SOURCE LINE # 378
042C         ?C0076:
                                           ; SOURCE LINE # 379
042C 900000      E     MOV     DPTR,#g_rx+03H
042F E0                MOVX    A,@DPTR
0430 FE                MOV     R6,A
0431 A3                INC     DPTR
0432 E0                MOVX    A,@DPTR
0433 FF                MOV     R7,A
0434 900000      E     MOV     DPTR,#g_mem+06BH
0437 EE                MOV     A,R6
0438 F0                MOVX    @DPTR,A
0439 A3                INC     DPTR
043A EF                MOV     A,R7
043B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 380
043C 900000      E     MOV     DPTR,#g_rx+05H
043F E0                MOVX    A,@DPTR
0440 FE                MOV     R6,A
0441 A3                INC     DPTR
0442 E0                MOVX    A,@DPTR
0443 FF                MOV     R7,A
0444 900000      E     MOV     DPTR,#g_mem+06DH
0447 EE                MOV     A,R6
0448 F0                MOVX    @DPTR,A
0449 A3                INC     DPTR
044A EF                MOV     A,R7
044B F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 41  

                                           ; SOURCE LINE # 381
044C 805D              SJMP    ?C0042
                                           ; SOURCE LINE # 385
044E         ?C0077:
                                           ; SOURCE LINE # 386
044E 900000      E     MOV     DPTR,#g_rx+03H
0451 120000      E     LCALL   ?C?LLDXDATA
0454 900000      E     MOV     DPTR,#g_mem+070H
0457 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 387
045A 900000      E     MOV     DPTR,#g_rx+07H
045D 120000      E     LCALL   ?C?LLDXDATA
0460 900000      E     MOV     DPTR,#g_mem+074H
0463 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 388
0466 8043              SJMP    ?C0042
                                           ; SOURCE LINE # 392
0468         ?C0078:
                                           ; SOURCE LINE # 393
0468 900000      E     MOV     DPTR,#g_rx+03H
046B E0                MOVX    A,@DPTR
046C FF                MOV     R7,A
046D 900000      E     MOV     DPTR,#g_mem+078H
0470 EF                MOV     A,R7
0471 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 394
0472 8037              SJMP    ?C0042
                                           ; SOURCE LINE # 397
0474         ?C0079:
                                           ; SOURCE LINE # 398
0474 900000      E     MOV     DPTR,#g_rx+03H
0477 E0                MOVX    A,@DPTR
0478 FF                MOV     R7,A
0479 900000      R     MOV     DPTR,#aux_uchar
047C EF                MOV     A,R7
047D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 399
047E 900000      R     MOV     DPTR,#aux_uchar
0481 E0                MOVX    A,@DPTR
0482 FF                MOV     R7,A
0483 EF                MOV     A,R7
0484 6008              JZ      ?C0080
                                           ; SOURCE LINE # 400
0486 900000      E     MOV     DPTR,#g_mem+079H
0489 7401              MOV     A,#01H
048B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 401
048C 801D              SJMP    ?C0042
048E         ?C0080:
                                           ; SOURCE LINE # 402
048E 900000      E     MOV     DPTR,#g_mem+079H
0491 E4                CLR     A
0492 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 403
                                           ; SOURCE LINE # 404
0493 8016              SJMP    ?C0042
                                           ; SOURCE LINE # 407
0495         ?C0082:
                                           ; SOURCE LINE # 408
0495 900000      E     MOV     DPTR,#g_rx+03H
0498 E0                MOVX    A,@DPTR
0499 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 42  

049A 900000      E     MOV     DPTR,#g_mem+07AH
049D EF                MOV     A,R7
049E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 409
049F 800A              SJMP    ?C0042
                                           ; SOURCE LINE # 412
04A1         ?C0083:
                                           ; SOURCE LINE # 413
04A1 900000      E     MOV     DPTR,#g_rx+03H
04A4 E0                MOVX    A,@DPTR
04A5 FF                MOV     R7,A
04A6 900000      E     MOV     DPTR,#g_mem+07BH
04A9 EF                MOV     A,R7
04AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 416
04AB         ?C0042:
                                           ; SOURCE LINE # 418
04AB 7F01              MOV     R7,#01H
04AD 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 419
04B0 22                RET     
             ; FUNCTION _paramSet (END)

             ; FUNCTION _paramGet (BEGIN)
                                           ; SOURCE LINE # 426
0000 900000      R     MOV     DPTR,#param_type
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 432
0008 900000      R     MOV     DPTR,#packet_data
000B 7402              MOV     A,#02H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 434
000E 900000      R     MOV     DPTR,#param_type
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 8EF0              MOV     B,R6
0019 120000      E     LCALL   ?C?ICASE
001C 0000        R     DW      ?C0086
001E 0000              DW      00H
0020 0000        R     DW      ?C0087
0022 0001              DW      01H
0024 0000        R     DW      ?C0093
0026 0002              DW      02H
0028 0000        R     DW      ?C0094
002A 0003              DW      03H
002C 0000        R     DW      ?C0095
002E 0004              DW      04H
0030 0000        R     DW      ?C0100
0032 0005              DW      05H
0034 0000        R     DW      ?C0104
0036 0006              DW      06H
0038 0000        R     DW      ?C0108
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 43  

003A 0007              DW      07H
003C 0000        R     DW      ?C0109
003E 0008              DW      08H
0040 0000        R     DW      ?C0113
0042 0009              DW      09H
0044 0000        R     DW      ?C0114
0046 000A              DW      0AH
0048 0000        R     DW      ?C0096
004A 000B              DW      0BH
004C 0000        R     DW      ?C0115
004E 000C              DW      0CH
0050 0000        R     DW      ?C0116
0052 000D              DW      0DH
0054 0000        R     DW      ?C0117
0056 000E              DW      0EH
0058 0000        R     DW      ?C0118
005A 000F              DW      0FH
005C 0000        R     DW      ?C0119
005E 0010              DW      010H
0060 0000        R     DW      ?C0090
0062 0012              DW      012H
0064 0000        R     DW      ?C0120
0066 0013              DW      013H
0068 0000        R     DW      ?C0121
006A 0014              DW      014H
006C 0000        R     DW      ?C0122
006E 0015              DW      015H
0070 0000              DW      00H
0072 0000        R     DW      ?C0085
                                           ; SOURCE LINE # 438
0074         ?C0086:
                                           ; SOURCE LINE # 439
0074 900000      E     MOV     DPTR,#c_mem+01H
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 900000      R     MOV     DPTR,#packet_data+01H
007C EF                MOV     A,R7
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 440
007E 900000      R     MOV     DPTR,#packet_lenght
0081 E4                CLR     A
0082 F0                MOVX    @DPTR,A
0083 A3                INC     DPTR
0084 7403              MOV     A,#03H
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
0087 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 445
008A         ?C0087:
                                           ; SOURCE LINE # 446
008A 900000      E     MOV     DPTR,#c_mem+034H
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F EF                MOV     A,R7
0090 6403              XRL     A,#03H
0092 6053              JZ      ?C0088
                                           ; SOURCE LINE # 447
0094 900000      E     MOV     DPTR,#c_mem+02H
0097 120000      E     LCALL   ?C?LLDXDATA
009A EC                MOV     A,R4
009B 120000      E     LCALL   ?C?FCASTL
009E 7B00              MOV     R3,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 44  

00A0 7A00              MOV     R2,#00H
00A2 7980              MOV     R1,#080H
00A4 7847              MOV     R0,#047H
00A6 120000      E     LCALL   ?C?FPDIV
00A9 900000      R     MOV     DPTR,#packet_data+01H
00AC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 448
00AF 900000      E     MOV     DPTR,#c_mem+06H
00B2 120000      E     LCALL   ?C?LLDXDATA
00B5 EC                MOV     A,R4
00B6 120000      E     LCALL   ?C?FCASTL
00B9 7B00              MOV     R3,#00H
00BB 7A00              MOV     R2,#00H
00BD 7980              MOV     R1,#080H
00BF 7847              MOV     R0,#047H
00C1 120000      E     LCALL   ?C?FPDIV
00C4 900000      R     MOV     DPTR,#packet_data+05H
00C7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 449
00CA 900000      E     MOV     DPTR,#c_mem+0AH
00CD 120000      E     LCALL   ?C?LLDXDATA
00D0 EC                MOV     A,R4
00D1 120000      E     LCALL   ?C?FCASTL
00D4 7B00              MOV     R3,#00H
00D6 7A00              MOV     R2,#00H
00D8 7980              MOV     R1,#080H
00DA 7847              MOV     R0,#047H
00DC 120000      E     LCALL   ?C?FPDIV
00DF 900000      R     MOV     DPTR,#packet_data+09H
00E2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 450
00E5 8051              SJMP    ?C0089
00E7         ?C0088:
                                           ; SOURCE LINE # 451
                                           ; SOURCE LINE # 452
00E7 900000      E     MOV     DPTR,#c_mem+01AH
00EA 120000      E     LCALL   ?C?LLDXDATA
00ED EC                MOV     A,R4
00EE 120000      E     LCALL   ?C?FCASTL
00F1 7B00              MOV     R3,#00H
00F3 7A00              MOV     R2,#00H
00F5 7980              MOV     R1,#080H
00F7 7847              MOV     R0,#047H
00F9 120000      E     LCALL   ?C?FPDIV
00FC 900000      R     MOV     DPTR,#packet_data+01H
00FF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 453
0102 900000      E     MOV     DPTR,#c_mem+01EH
0105 120000      E     LCALL   ?C?LLDXDATA
0108 EC                MOV     A,R4
0109 120000      E     LCALL   ?C?FCASTL
010C 7B00              MOV     R3,#00H
010E 7A00              MOV     R2,#00H
0110 7980              MOV     R1,#080H
0112 7847              MOV     R0,#047H
0114 120000      E     LCALL   ?C?FPDIV
0117 900000      R     MOV     DPTR,#packet_data+05H
011A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 454
011D 900000      E     MOV     DPTR,#c_mem+022H
0120 120000      E     LCALL   ?C?LLDXDATA
0123 EC                MOV     A,R4
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 45  

0124 120000      E     LCALL   ?C?FCASTL
0127 7B00              MOV     R3,#00H
0129 7A00              MOV     R2,#00H
012B 7980              MOV     R1,#080H
012D 7847              MOV     R0,#047H
012F 120000      E     LCALL   ?C?FPDIV
0132 900000      R     MOV     DPTR,#packet_data+09H
0135 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 455
0138         ?C0089:
                                           ; SOURCE LINE # 456
0138 900000      R     MOV     DPTR,#packet_lenght
013B E4                CLR     A
013C F0                MOVX    @DPTR,A
013D A3                INC     DPTR
013E 740E              MOV     A,#0EH
0140 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 457
0141 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 461
0144         ?C0090:
                                           ; SOURCE LINE # 462
0144 900000      E     MOV     DPTR,#c_mem+034H
0147 E0                MOVX    A,@DPTR
0148 FF                MOV     R7,A
0149 EF                MOV     A,R7
014A 6403              XRL     A,#03H
014C 6053              JZ      ?C0091
                                           ; SOURCE LINE # 463
014E 900000      E     MOV     DPTR,#c_mem+0EH
0151 120000      E     LCALL   ?C?LLDXDATA
0154 EC                MOV     A,R4
0155 120000      E     LCALL   ?C?FCASTL
0158 7B00              MOV     R3,#00H
015A 7A00              MOV     R2,#00H
015C 7980              MOV     R1,#080H
015E 7847              MOV     R0,#047H
0160 120000      E     LCALL   ?C?FPDIV
0163 900000      R     MOV     DPTR,#packet_data+01H
0166 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 464
0169 900000      E     MOV     DPTR,#c_mem+012H
016C 120000      E     LCALL   ?C?LLDXDATA
016F EC                MOV     A,R4
0170 120000      E     LCALL   ?C?FCASTL
0173 7B00              MOV     R3,#00H
0175 7A00              MOV     R2,#00H
0177 7980              MOV     R1,#080H
0179 7847              MOV     R0,#047H
017B 120000      E     LCALL   ?C?FPDIV
017E 900000      R     MOV     DPTR,#packet_data+05H
0181 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 465
0184 900000      E     MOV     DPTR,#c_mem+016H
0187 120000      E     LCALL   ?C?LLDXDATA
018A EC                MOV     A,R4
018B 120000      E     LCALL   ?C?FCASTL
018E 7B00              MOV     R3,#00H
0190 7A00              MOV     R2,#00H
0192 7980              MOV     R1,#080H
0194 7847              MOV     R0,#047H
0196 120000      E     LCALL   ?C?FPDIV
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 46  

0199 900000      R     MOV     DPTR,#packet_data+09H
019C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 466
019F 8051              SJMP    ?C0092
01A1         ?C0091:
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 468
01A1 900000      E     MOV     DPTR,#c_mem+026H
01A4 120000      E     LCALL   ?C?LLDXDATA
01A7 EC                MOV     A,R4
01A8 120000      E     LCALL   ?C?FCASTL
01AB 7B00              MOV     R3,#00H
01AD 7A00              MOV     R2,#00H
01AF 7980              MOV     R1,#080H
01B1 7847              MOV     R0,#047H
01B3 120000      E     LCALL   ?C?FPDIV
01B6 900000      R     MOV     DPTR,#packet_data+01H
01B9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 469
01BC 900000      E     MOV     DPTR,#c_mem+02AH
01BF 120000      E     LCALL   ?C?LLDXDATA
01C2 EC                MOV     A,R4
01C3 120000      E     LCALL   ?C?FCASTL
01C6 7B00              MOV     R3,#00H
01C8 7A00              MOV     R2,#00H
01CA 7980              MOV     R1,#080H
01CC 7847              MOV     R0,#047H
01CE 120000      E     LCALL   ?C?FPDIV
01D1 900000      R     MOV     DPTR,#packet_data+05H
01D4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 470
01D7 900000      E     MOV     DPTR,#c_mem+02EH
01DA 120000      E     LCALL   ?C?LLDXDATA
01DD EC                MOV     A,R4
01DE 120000      E     LCALL   ?C?FCASTL
01E1 7B00              MOV     R3,#00H
01E3 7A00              MOV     R2,#00H
01E5 7980              MOV     R1,#080H
01E7 7847              MOV     R0,#047H
01E9 120000      E     LCALL   ?C?FPDIV
01EC 900000      R     MOV     DPTR,#packet_data+09H
01EF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 471
01F2         ?C0092:
                                           ; SOURCE LINE # 472
01F2 900000      R     MOV     DPTR,#packet_lenght
01F5 E4                CLR     A
01F6 F0                MOVX    @DPTR,A
01F7 A3                INC     DPTR
01F8 740E              MOV     A,#0EH
01FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 473
01FB 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 477
01FE         ?C0093:
                                           ; SOURCE LINE # 478
01FE 900000      E     MOV     DPTR,#c_mem+032H
0201 E0                MOVX    A,@DPTR
0202 FF                MOV     R7,A
0203 900000      R     MOV     DPTR,#packet_data+01H
0206 EF                MOV     A,R7
0207 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 47  

                                           ; SOURCE LINE # 479
0208 900000      R     MOV     DPTR,#packet_lenght
020B E4                CLR     A
020C F0                MOVX    @DPTR,A
020D A3                INC     DPTR
020E 7403              MOV     A,#03H
0210 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
0211 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 484
0214         ?C0094:
                                           ; SOURCE LINE # 485
0214 900000      E     MOV     DPTR,#c_mem+033H
0217 E0                MOVX    A,@DPTR
0218 FF                MOV     R7,A
0219 900000      R     MOV     DPTR,#packet_data+01H
021C EF                MOV     A,R7
021D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 486
021E 900000      R     MOV     DPTR,#packet_lenght
0221 E4                CLR     A
0222 F0                MOVX    @DPTR,A
0223 A3                INC     DPTR
0224 7403              MOV     A,#03H
0226 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
0227 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 491
022A         ?C0095:
                                           ; SOURCE LINE # 492
022A 900000      E     MOV     DPTR,#c_mem+034H
022D E0                MOVX    A,@DPTR
022E FF                MOV     R7,A
022F 900000      R     MOV     DPTR,#packet_data+01H
0232 EF                MOV     A,R7
0233 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
0234 900000      R     MOV     DPTR,#packet_lenght
0237 E4                CLR     A
0238 F0                MOVX    @DPTR,A
0239 A3                INC     DPTR
023A 7403              MOV     A,#03H
023C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
023D 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 498
0240         ?C0096:
                                           ; SOURCE LINE # 499
0240 900000      R     MOV     DPTR,#i
0243 E4                CLR     A
0244 F0                MOVX    @DPTR,A
0245         ?C0097:
0245 900000      R     MOV     DPTR,#i
0248 E0                MOVX    A,@DPTR
0249 FF                MOV     R7,A
024A EF                MOV     A,R7
024B C3                CLR     C
024C 9403              SUBB    A,#03H
024E 502A              JNC     ?C0098
                                           ; SOURCE LINE # 500
0250 900000      R     MOV     DPTR,#i
0253 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 48  

0254 FF                MOV     R7,A
0255 7400        E     MOV     A,#LOW c_mem+035H
0257 2F                ADD     A,R7
0258 F582              MOV     DPL,A
025A E4                CLR     A
025B 3400        E     ADDC    A,#HIGH c_mem+035H
025D F583              MOV     DPH,A
025F E0                MOVX    A,@DPTR
0260 FF                MOV     R7,A
0261 900000      R     MOV     DPTR,#i
0264 E0                MOVX    A,@DPTR
0265 FE                MOV     R6,A
0266 7400        R     MOV     A,#LOW packet_data+01H
0268 2E                ADD     A,R6
0269 F582              MOV     DPL,A
026B E4                CLR     A
026C 3400        R     ADDC    A,#HIGH packet_data+01H
026E F583              MOV     DPH,A
0270 EF                MOV     A,R7
0271 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 501
0272 900000      R     MOV     DPTR,#i
0275 E0                MOVX    A,@DPTR
0276 04                INC     A
0277 F0                MOVX    @DPTR,A
0278 80CB              SJMP    ?C0097
027A         ?C0098:
                                           ; SOURCE LINE # 502
027A 900000      R     MOV     DPTR,#packet_lenght
027D E4                CLR     A
027E F0                MOVX    @DPTR,A
027F A3                INC     DPTR
0280 7405              MOV     A,#05H
0282 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
0283 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 507
0286         ?C0100:
                                           ; SOURCE LINE # 508
0286 900000      R     MOV     DPTR,#i
0289 E4                CLR     A
028A F0                MOVX    @DPTR,A
028B         ?C0101:
028B 900000      R     MOV     DPTR,#i
028E E0                MOVX    A,@DPTR
028F FF                MOV     R7,A
0290 EF                MOV     A,R7
0291 C3                CLR     C
0292 9403              SUBB    A,#03H
0294 504A              JNC     ?C0102
                                           ; SOURCE LINE # 509
0296 900000      R     MOV     DPTR,#i
0299 E0                MOVX    A,@DPTR
029A FF                MOV     R7,A
029B EF                MOV     A,R7
029C 25E0              ADD     A,ACC
029E 25E0              ADD     A,ACC
02A0 2400        E     ADD     A,#LOW c_mem+038H
02A2 F582              MOV     DPL,A
02A4 E4                CLR     A
02A5 3400        E     ADDC    A,#HIGH c_mem+038H
02A7 F583              MOV     DPH,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 49  

02A9 120000      E     LCALL   ?C?LLDXDATA
02AC 900000      R     MOV     DPTR,#i
02AF E0                MOVX    A,@DPTR
02B0 FB                MOV     R3,A
02B1 7400        E     MOV     A,#LOW c_mem+035H
02B3 2B                ADD     A,R3
02B4 F582              MOV     DPL,A
02B6 E4                CLR     A
02B7 3400        E     ADDC    A,#HIGH c_mem+035H
02B9 F583              MOV     DPH,A
02BB E0                MOVX    A,@DPTR
02BC F9                MOV     R1,A
02BD A801              MOV     R0,AR1
02BF 120000      E     LCALL   ?C?SLSHR
02C2 900000      R     MOV     DPTR,#i
02C5 E0                MOVX    A,@DPTR
02C6 FD                MOV     R5,A
02C7 ED                MOV     A,R5
02C8 25E0              ADD     A,ACC
02CA 2400        R     ADD     A,#LOW packet_data+01H
02CC F582              MOV     DPL,A
02CE E4                CLR     A
02CF 3400        R     ADDC    A,#HIGH packet_data+01H
02D1 F583              MOV     DPH,A
02D3 EE                MOV     A,R6
02D4 F0                MOVX    @DPTR,A
02D5 A3                INC     DPTR
02D6 EF                MOV     A,R7
02D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
02D8 900000      R     MOV     DPTR,#i
02DB E0                MOVX    A,@DPTR
02DC 04                INC     A
02DD F0                MOVX    @DPTR,A
02DE 80AB              SJMP    ?C0101
02E0         ?C0102:
                                           ; SOURCE LINE # 512
02E0 900000      R     MOV     DPTR,#packet_lenght
02E3 E4                CLR     A
02E4 F0                MOVX    @DPTR,A
02E5 A3                INC     DPTR
02E6 7408              MOV     A,#08H
02E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
02E9 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 517
02EC         ?C0104:
                                           ; SOURCE LINE # 518
02EC 900000      R     MOV     DPTR,#i
02EF E4                CLR     A
02F0 F0                MOVX    @DPTR,A
02F1         ?C0105:
02F1 900000      R     MOV     DPTR,#i
02F4 E0                MOVX    A,@DPTR
02F5 FF                MOV     R7,A
02F6 EF                MOV     A,R7
02F7 C3                CLR     C
02F8 9403              SUBB    A,#03H
02FA 5034              JNC     ?C0106
                                           ; SOURCE LINE # 519
02FC 900000      R     MOV     DPTR,#i
02FF E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 50  

0300 FF                MOV     R7,A
0301 EF                MOV     A,R7
0302 25E0              ADD     A,ACC
0304 25E0              ADD     A,ACC
0306 2400        E     ADD     A,#LOW c_mem+044H
0308 F582              MOV     DPL,A
030A E4                CLR     A
030B 3400        E     ADDC    A,#HIGH c_mem+044H
030D F583              MOV     DPH,A
030F 120000      E     LCALL   ?C?LLDXDATA
0312 900000      R     MOV     DPTR,#i
0315 E0                MOVX    A,@DPTR
0316 FB                MOV     R3,A
0317 EB                MOV     A,R3
0318 25E0              ADD     A,ACC
031A 25E0              ADD     A,ACC
031C 2400        R     ADD     A,#LOW packet_data+01H
031E F582              MOV     DPL,A
0320 E4                CLR     A
0321 3400        R     ADDC    A,#HIGH packet_data+01H
0323 F583              MOV     DPH,A
0325 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 520
0328 900000      R     MOV     DPTR,#i
032B E0                MOVX    A,@DPTR
032C 04                INC     A
032D F0                MOVX    @DPTR,A
032E 80C1              SJMP    ?C0105
0330         ?C0106:
                                           ; SOURCE LINE # 522
0330 900000      R     MOV     DPTR,#packet_lenght
0333 E4                CLR     A
0334 F0                MOVX    @DPTR,A
0335 A3                INC     DPTR
0336 740E              MOV     A,#0EH
0338 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 523
0339 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 527
033C         ?C0108:
                                           ; SOURCE LINE # 528
033C 900000      E     MOV     DPTR,#c_mem+050H
033F E0                MOVX    A,@DPTR
0340 FF                MOV     R7,A
0341 900000      R     MOV     DPTR,#packet_data+01H
0344 EF                MOV     A,R7
0345 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 529
0346 900000      R     MOV     DPTR,#packet_lenght
0349 E4                CLR     A
034A F0                MOVX    @DPTR,A
034B A3                INC     DPTR
034C 7403              MOV     A,#03H
034E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 530
034F 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 534
0352         ?C0109:
                                           ; SOURCE LINE # 535
0352 900000      R     MOV     DPTR,#i
0355 E4                CLR     A
0356 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 51  

0357         ?C0110:
0357 900000      R     MOV     DPTR,#i
035A E0                MOVX    A,@DPTR
035B FF                MOV     R7,A
035C EF                MOV     A,R7
035D C3                CLR     C
035E 9402              SUBB    A,#02H
0360 5060              JNC     ?C0111
                                           ; SOURCE LINE # 536
0362 900000      R     MOV     DPTR,#i
0365 E0                MOVX    A,@DPTR
0366 FF                MOV     R7,A
0367 EF                MOV     A,R7
0368 25E0              ADD     A,ACC
036A 25E0              ADD     A,ACC
036C 2400        E     ADD     A,#LOW c_mem+051H
036E F582              MOV     DPL,A
0370 E4                CLR     A
0371 3400        E     ADDC    A,#HIGH c_mem+051H
0373 F583              MOV     DPH,A
0375 120000      E     LCALL   ?C?LLDXDATA
0378 900000      R     MOV     DPTR,#i
037B E0                MOVX    A,@DPTR
037C FB                MOV     R3,A
037D EB                MOV     A,R3
037E 75F008            MOV     B,#08H
0381 A4                MUL     AB
0382 2400        R     ADD     A,#LOW packet_data+01H
0384 F582              MOV     DPL,A
0386 E4                CLR     A
0387 3400        R     ADDC    A,#HIGH packet_data+01H
0389 F583              MOV     DPH,A
038B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 537
038E 900000      R     MOV     DPTR,#i
0391 E0                MOVX    A,@DPTR
0392 FF                MOV     R7,A
0393 EF                MOV     A,R7
0394 25E0              ADD     A,ACC
0396 25E0              ADD     A,ACC
0398 2400        E     ADD     A,#LOW c_mem+059H
039A F582              MOV     DPL,A
039C E4                CLR     A
039D 3400        E     ADDC    A,#HIGH c_mem+059H
039F F583              MOV     DPH,A
03A1 120000      E     LCALL   ?C?LLDXDATA
03A4 900000      R     MOV     DPTR,#i
03A7 E0                MOVX    A,@DPTR
03A8 FB                MOV     R3,A
03A9 EB                MOV     A,R3
03AA 75F008            MOV     B,#08H
03AD A4                MUL     AB
03AE 2400        R     ADD     A,#LOW packet_data+05H
03B0 F582              MOV     DPL,A
03B2 E4                CLR     A
03B3 3400        R     ADDC    A,#HIGH packet_data+05H
03B5 F583              MOV     DPH,A
03B7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 538
03BA 900000      R     MOV     DPTR,#i
03BD E0                MOVX    A,@DPTR
03BE 04                INC     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 52  

03BF F0                MOVX    @DPTR,A
03C0 8095              SJMP    ?C0110
03C2         ?C0111:
                                           ; SOURCE LINE # 539
03C2 900000      R     MOV     DPTR,#packet_lenght
03C5 E4                CLR     A
03C6 F0                MOVX    @DPTR,A
03C7 A3                INC     DPTR
03C8 7412              MOV     A,#012H
03CA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 540
03CB 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 544
03CE         ?C0113:
                                           ; SOURCE LINE # 545
03CE 900000      E     MOV     DPTR,#c_mem+061H
03D1 120000      E     LCALL   ?C?LLDXDATA
03D4 900000      R     MOV     DPTR,#packet_data+01H
03D7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 546
03DA 900000      R     MOV     DPTR,#packet_lenght
03DD E4                CLR     A
03DE F0                MOVX    @DPTR,A
03DF A3                INC     DPTR
03E0 7406              MOV     A,#06H
03E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 547
03E3 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 551
03E6         ?C0114:
                                           ; SOURCE LINE # 552
03E6 900000      E     MOV     DPTR,#c_mem+065H
03E9 120000      E     LCALL   ?C?LLDXDATA
03EC 900000      R     MOV     DPTR,#packet_data+01H
03EF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 553
03F2 900000      R     MOV     DPTR,#packet_lenght
03F5 E4                CLR     A
03F6 F0                MOVX    @DPTR,A
03F7 A3                INC     DPTR
03F8 7406              MOV     A,#06H
03FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 554
03FB 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 558
03FE         ?C0115:
                                           ; SOURCE LINE # 559
03FE 900000      E     MOV     DPTR,#c_mem+069H
0401 E0                MOVX    A,@DPTR
0402 FE                MOV     R6,A
0403 A3                INC     DPTR
0404 E0                MOVX    A,@DPTR
0405 FF                MOV     R7,A
0406 900000      R     MOV     DPTR,#packet_data+01H
0409 EE                MOV     A,R6
040A F0                MOVX    @DPTR,A
040B A3                INC     DPTR
040C EF                MOV     A,R7
040D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 560
040E 900000      R     MOV     DPTR,#packet_lenght
0411 E4                CLR     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 53  

0412 F0                MOVX    @DPTR,A
0413 A3                INC     DPTR
0414 7404              MOV     A,#04H
0416 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 561
0417 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 565
041A         ?C0116:
                                           ; SOURCE LINE # 566
041A 900000      E     MOV     DPTR,#c_mem+06FH
041D E0                MOVX    A,@DPTR
041E FF                MOV     R7,A
041F 900000      R     MOV     DPTR,#packet_data+01H
0422 EF                MOV     A,R7
0423 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 567
0424 900000      R     MOV     DPTR,#packet_lenght
0427 E4                CLR     A
0428 F0                MOVX    @DPTR,A
0429 A3                INC     DPTR
042A 7403              MOV     A,#03H
042C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 568
042D 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 572
0430         ?C0117:
                                           ; SOURCE LINE # 573
0430 900000      E     MOV     DPTR,#c_mem+06BH
0433 E0                MOVX    A,@DPTR
0434 FE                MOV     R6,A
0435 A3                INC     DPTR
0436 E0                MOVX    A,@DPTR
0437 FF                MOV     R7,A
0438 900000      R     MOV     DPTR,#packet_data+01H
043B EE                MOV     A,R6
043C F0                MOVX    @DPTR,A
043D A3                INC     DPTR
043E EF                MOV     A,R7
043F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 574
0440 900000      E     MOV     DPTR,#c_mem+06DH
0443 E0                MOVX    A,@DPTR
0444 FE                MOV     R6,A
0445 A3                INC     DPTR
0446 E0                MOVX    A,@DPTR
0447 FF                MOV     R7,A
0448 900000      R     MOV     DPTR,#packet_data+03H
044B EE                MOV     A,R6
044C F0                MOVX    @DPTR,A
044D A3                INC     DPTR
044E EF                MOV     A,R7
044F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 575
0450 900000      R     MOV     DPTR,#packet_lenght
0453 E4                CLR     A
0454 F0                MOVX    @DPTR,A
0455 A3                INC     DPTR
0456 7406              MOV     A,#06H
0458 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 576
0459 8075              SJMP    ?C0085
                                           ; SOURCE LINE # 580
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 54  

045B         ?C0118:
                                           ; SOURCE LINE # 581
045B 900000      E     MOV     DPTR,#c_mem+070H
045E 120000      E     LCALL   ?C?LLDXDATA
0461 900000      R     MOV     DPTR,#packet_data+01H
0464 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 582
0467 900000      E     MOV     DPTR,#c_mem+074H
046A 120000      E     LCALL   ?C?LLDXDATA
046D 900000      R     MOV     DPTR,#packet_data+05H
0470 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 583
0473 900000      R     MOV     DPTR,#packet_lenght
0476 E4                CLR     A
0477 F0                MOVX    @DPTR,A
0478 A3                INC     DPTR
0479 740A              MOV     A,#0AH
047B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 584
047C 8052              SJMP    ?C0085
                                           ; SOURCE LINE # 588
047E         ?C0119:
                                           ; SOURCE LINE # 589
047E 900000      E     MOV     DPTR,#c_mem+078H
0481 E0                MOVX    A,@DPTR
0482 FF                MOV     R7,A
0483 900000      R     MOV     DPTR,#packet_data+01H
0486 EF                MOV     A,R7
0487 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 590
0488 900000      R     MOV     DPTR,#packet_lenght
048B E4                CLR     A
048C F0                MOVX    @DPTR,A
048D A3                INC     DPTR
048E 7403              MOV     A,#03H
0490 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
0491 803D              SJMP    ?C0085
                                           ; SOURCE LINE # 594
0493         ?C0120:
                                           ; SOURCE LINE # 595
0493 900000      E     MOV     DPTR,#c_mem+079H
0496 E0                MOVX    A,@DPTR
0497 FF                MOV     R7,A
0498 900000      R     MOV     DPTR,#packet_data+01H
049B EF                MOV     A,R7
049C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 596
049D 900000      R     MOV     DPTR,#packet_lenght
04A0 E4                CLR     A
04A1 F0                MOVX    @DPTR,A
04A2 A3                INC     DPTR
04A3 7403              MOV     A,#03H
04A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 597
04A6 8028              SJMP    ?C0085
                                           ; SOURCE LINE # 600
04A8         ?C0121:
                                           ; SOURCE LINE # 601
04A8 900000      E     MOV     DPTR,#c_mem+07AH
04AB E0                MOVX    A,@DPTR
04AC FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 55  

04AD 900000      R     MOV     DPTR,#packet_data+01H
04B0 EF                MOV     A,R7
04B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 602
04B2 900000      R     MOV     DPTR,#packet_lenght
04B5 E4                CLR     A
04B6 F0                MOVX    @DPTR,A
04B7 A3                INC     DPTR
04B8 7403              MOV     A,#03H
04BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 603
04BB 8013              SJMP    ?C0085
                                           ; SOURCE LINE # 606
04BD         ?C0122:
                                           ; SOURCE LINE # 607
04BD 900000      E     MOV     DPTR,#c_mem+07BH
04C0 E0                MOVX    A,@DPTR
04C1 FF                MOV     R7,A
04C2 900000      R     MOV     DPTR,#packet_data+01H
04C5 EF                MOV     A,R7
04C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 608
04C7 900000      R     MOV     DPTR,#packet_lenght
04CA E4                CLR     A
04CB F0                MOVX    @DPTR,A
04CC A3                INC     DPTR
04CD 7403              MOV     A,#03H
04CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
04D0         ?C0085:
                                           ; SOURCE LINE # 616
04D0 7B01              MOV     R3,#01H
04D2 7A00        R     MOV     R2,#HIGH packet_data
04D4 7900        R     MOV     R1,#LOW packet_data
04D6 900000      R     MOV     DPTR,#packet_lenght
04D9 E0                MOVX    A,@DPTR
04DA FE                MOV     R6,A
04DB A3                INC     DPTR
04DC E0                MOVX    A,@DPTR
04DD FF                MOV     R7,A
04DE EF                MOV     A,R7
04DF 14                DEC     A
04E0 FD                MOV     R5,A
04E1 120000      R     LCALL   _LCRChecksum
04E4 900000      R     MOV     DPTR,#packet_lenght
04E7 E0                MOVX    A,@DPTR
04E8 FC                MOV     R4,A
04E9 A3                INC     DPTR
04EA E0                MOVX    A,@DPTR
04EB FD                MOV     R5,A
04EC 7400        R     MOV     A,#LOW packet_data+0FFFFH
04EE 2D                ADD     A,R5
04EF F582              MOV     DPL,A
04F1 7400        R     MOV     A,#HIGH packet_data+0FFFFH
04F3 3C                ADDC    A,R4
04F4 F583              MOV     DPH,A
04F6 EF                MOV     A,R7
04F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 56  

04F8 7B01              MOV     R3,#01H
04FA 7A00        R     MOV     R2,#HIGH packet_data
04FC 7900        R     MOV     R1,#LOW packet_data
04FE 900000      R     MOV     DPTR,#packet_lenght
0501 E0                MOVX    A,@DPTR
0502 FC                MOV     R4,A
0503 A3                INC     DPTR
0504 E0                MOVX    A,@DPTR
0505 FD                MOV     R5,A
0506 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 618
0509 22                RET     
             ; FUNCTION _paramGet (END)

             ; FUNCTION _infoPrepare (BEGIN)
                                           ; SOURCE LINE # 624
0000 900000      R     MOV     DPTR,#info_string
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 627
0006 900000      E     MOV     DPTR,#c_mem+01H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C 64FA              XRL     A,#0FAH
000E 7003              JNZ     $ + 5H
0010 020000      R     LJMP    ?C0175
                                           ; SOURCE LINE # 629
0013 7BFF              MOV     R3,#0FFH
0015 7A00        R     MOV     R2,#HIGH ?SC_0
0017 7900        R     MOV     R1,#LOW ?SC_0
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 900000      R     MOV     DPTR,#info_string
0022 120000      E     LCALL   ?C?PLDXDATA
0025 A801              MOV     R0,AR1
0027 AC02              MOV     R4,AR2
0029 AD03              MOV     R5,AR3
002B D001              POP     AR1
002D D002              POP     AR2
002F D003              POP     AR3
0031 120000      E     LCALL   ?C?STRCPYAMD
                                           ; SOURCE LINE # 630
0034 900000      R     MOV     DPTR,#info_string
0037 120000      E     LCALL   ?C?PLDXDATA
003A C003              PUSH    AR3
003C C002              PUSH    AR2
003E C001              PUSH    AR1
0040 7BFF              MOV     R3,#0FFH
0042 7A00        R     MOV     R2,#HIGH ?SC_1
0044 7900        R     MOV     R1,#LOW ?SC_1
0046 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0049 120000      E     LCALL   ?C?PSTXDATA
004C D001              POP     AR1
004E D002              POP     AR2
0050 D003              POP     AR3
0052 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 631
0055 900000      R     MOV     DPTR,#info_string
0058 120000      E     LCALL   ?C?PLDXDATA
005B C003              PUSH    AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 57  

005D C002              PUSH    AR2
005F C001              PUSH    AR1
0061 7BFF              MOV     R3,#0FFH
0063 7A00        R     MOV     R2,#HIGH ?SC_4
0065 7900        R     MOV     R1,#LOW ?SC_4
0067 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
006A 120000      E     LCALL   ?C?PSTXDATA
006D D001              POP     AR1
006F D002              POP     AR2
0071 D003              POP     AR3
0073 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 632
0076 900000      R     MOV     DPTR,#info_string
0079 120000      E     LCALL   ?C?PLDXDATA
007C C003              PUSH    AR3
007E C002              PUSH    AR2
0080 C001              PUSH    AR1
0082 7BFF              MOV     R3,#0FFH
0084 7A00        R     MOV     R2,#HIGH ?SC_23
0086 7900        R     MOV     R1,#LOW ?SC_23
0088 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
008B 120000      E     LCALL   ?C?PSTXDATA
008E D001              POP     AR1
0090 D002              POP     AR2
0092 D003              POP     AR3
0094 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 633
0097 900000      R     MOV     DPTR,#info_string
009A 120000      E     LCALL   ?C?PLDXDATA
009D C003              PUSH    AR3
009F C002              PUSH    AR2
00A1 C001              PUSH    AR1
00A3 7BFF              MOV     R3,#0FFH
00A5 7A00        R     MOV     R2,#HIGH ?SC_37
00A7 7900        R     MOV     R1,#LOW ?SC_37
00A9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
00AC 120000      E     LCALL   ?C?PSTXDATA
00AF D001              POP     AR1
00B1 D002              POP     AR2
00B3 D003              POP     AR3
00B5 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 635
00B8 900000      R     MOV     DPTR,#info_string
00BB 120000      E     LCALL   ?C?PLDXDATA
00BE C003              PUSH    AR3
00C0 C002              PUSH    AR2
00C2 C001              PUSH    AR1
00C4 7BFF              MOV     R3,#0FFH
00C6 7A00        R     MOV     R2,#HIGH ?SC_43
00C8 7900        R     MOV     R1,#LOW ?SC_43
00CA 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
00CD 120000      E     LCALL   ?C?PSTXDATA
00D0 D001              POP     AR1
00D2 D002              POP     AR2
00D4 D003              POP     AR3
00D6 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 636
00D9 7B01              MOV     R3,#01H
00DB 7A00        R     MOV     R2,#HIGH str
00DD 7900        R     MOV     R1,#LOW str
00DF C003              PUSH    AR3
00E1 C002              PUSH    AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 58  

00E3 C001              PUSH    AR1
00E5 7BFF              MOV     R3,#0FFH
00E7 7A00        R     MOV     R2,#HIGH ?SC_57
00E9 7900        R     MOV     R1,#LOW ?SC_57
00EB 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
00EE 120000      E     LCALL   ?C?PSTXDATA
00F1 900000      E     MOV     DPTR,#c_mem+01H
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
00F6 7E00              MOV     R6,#00H
00F8 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
00FB EE                MOV     A,R6
00FC F0                MOVX    @DPTR,A
00FD A3                INC     DPTR
00FE EF                MOV     A,R7
00FF F0                MOVX    @DPTR,A
0100 D001              POP     AR1
0102 D002              POP     AR2
0104 D003              POP     AR3
0106 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 637
0109 900000      R     MOV     DPTR,#info_string
010C 120000      E     LCALL   ?C?PLDXDATA
010F C003              PUSH    AR3
0111 C002              PUSH    AR2
0113 C001              PUSH    AR1
0115 7B01              MOV     R3,#01H
0117 7A00        R     MOV     R2,#HIGH str
0119 7900        R     MOV     R1,#LOW str
011B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
011E 120000      E     LCALL   ?C?PSTXDATA
0121 D001              POP     AR1
0123 D002              POP     AR2
0125 D003              POP     AR3
0127 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 638
012A 900000      R     MOV     DPTR,#info_string
012D 120000      E     LCALL   ?C?PLDXDATA
0130 C003              PUSH    AR3
0132 C002              PUSH    AR2
0134 C001              PUSH    AR1
0136 7BFF              MOV     R3,#0FFH
0138 7A00        R     MOV     R2,#HIGH ?SC_66
013A 7900        R     MOV     R1,#LOW ?SC_66
013C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
013F 120000      E     LCALL   ?C?PSTXDATA
0142 D001              POP     AR1
0144 D002              POP     AR2
0146 D003              POP     AR3
0148 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 639
014B 900000      E     MOV     DPTR,#c_mem+07BH
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 EF                MOV     A,R7
0151 B40123            CJNE    A,#01H,?C0126
                                           ; SOURCE LINE # 640
0154 900000      R     MOV     DPTR,#info_string
0157 120000      E     LCALL   ?C?PLDXDATA
015A C003              PUSH    AR3
015C C002              PUSH    AR2
015E C001              PUSH    AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 59  

0160 7BFF              MOV     R3,#0FFH
0162 7A00        R     MOV     R2,#HIGH ?SC_93
0164 7900        R     MOV     R1,#LOW ?SC_93
0166 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0169 120000      E     LCALL   ?C?PSTXDATA
016C D001              POP     AR1
016E D002              POP     AR2
0170 D003              POP     AR3
0172 120000      E     LCALL   _strcat
0175 8021              SJMP    ?C0127
0177         ?C0126:
                                           ; SOURCE LINE # 642
0177 900000      R     MOV     DPTR,#info_string
017A 120000      E     LCALL   ?C?PLDXDATA
017D C003              PUSH    AR3
017F C002              PUSH    AR2
0181 C001              PUSH    AR1
0183 7BFF              MOV     R3,#0FFH
0185 7A00        R     MOV     R2,#HIGH ?SC_98
0187 7900        R     MOV     R1,#LOW ?SC_98
0189 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
018C 120000      E     LCALL   ?C?PSTXDATA
018F D001              POP     AR1
0191 D002              POP     AR2
0193 D003              POP     AR3
0195 120000      E     LCALL   _strcat
0198         ?C0127:
                                           ; SOURCE LINE # 644
0198 7B01              MOV     R3,#01H
019A 7A00        R     MOV     R2,#HIGH str
019C 7900        R     MOV     R1,#LOW str
019E C003              PUSH    AR3
01A0 C002              PUSH    AR2
01A2 C001              PUSH    AR1
01A4 7BFF              MOV     R3,#0FFH
01A6 7A00        R     MOV     R2,#HIGH ?SC_102
01A8 7900        R     MOV     R1,#LOW ?SC_102
01AA 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
01AD 120000      E     LCALL   ?C?PSTXDATA
01B0 900000      E     MOV     DPTR,#dev_pwm_limit
01B3 E0                MOVX    A,@DPTR
01B4 FF                MOV     R7,A
01B5 7E00              MOV     R6,#00H
01B7 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
01BA EE                MOV     A,R6
01BB F0                MOVX    @DPTR,A
01BC A3                INC     DPTR
01BD EF                MOV     A,R7
01BE F0                MOVX    @DPTR,A
01BF D001              POP     AR1
01C1 D002              POP     AR2
01C3 D003              POP     AR3
01C5 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 645
01C8 900000      R     MOV     DPTR,#info_string
01CB 120000      E     LCALL   ?C?PLDXDATA
01CE C003              PUSH    AR3
01D0 C002              PUSH    AR2
01D2 C001              PUSH    AR1
01D4 7B01              MOV     R3,#01H
01D6 7A00        R     MOV     R2,#HIGH str
01D8 7900        R     MOV     R1,#LOW str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 60  

01DA 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01DD 120000      E     LCALL   ?C?PSTXDATA
01E0 D001              POP     AR1
01E2 D002              POP     AR2
01E4 D003              POP     AR3
01E6 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 646
01E9 900000      R     MOV     DPTR,#info_string
01EC 120000      E     LCALL   ?C?PLDXDATA
01EF C003              PUSH    AR3
01F1 C002              PUSH    AR2
01F3 C001              PUSH    AR1
01F5 7BFF              MOV     R3,#0FFH
01F7 7A00        R     MOV     R2,#HIGH ?SC_1
01F9 7900        R     MOV     R1,#LOW ?SC_1
01FB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01FE 120000      E     LCALL   ?C?PSTXDATA
0201 D001              POP     AR1
0203 D002              POP     AR2
0205 D003              POP     AR3
0207 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 648
020A 900000      R     MOV     DPTR,#info_string
020D 120000      E     LCALL   ?C?PLDXDATA
0210 C003              PUSH    AR3
0212 C002              PUSH    AR2
0214 C001              PUSH    AR1
0216 7BFF              MOV     R3,#0FFH
0218 7A00        R     MOV     R2,#HIGH ?SC_118
021A 7900        R     MOV     R1,#LOW ?SC_118
021C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
021F 120000      E     LCALL   ?C?PSTXDATA
0222 D001              POP     AR1
0224 D002              POP     AR2
0226 D003              POP     AR3
0228 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 649
022B 900000      R     MOV     DPTR,#info_string
022E 120000      E     LCALL   ?C?PLDXDATA
0231 C003              PUSH    AR3
0233 C002              PUSH    AR2
0235 C001              PUSH    AR1
0237 7BFF              MOV     R3,#0FFH
0239 7A00        R     MOV     R2,#HIGH ?SC_131
023B 7900        R     MOV     R1,#LOW ?SC_131
023D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0240 120000      E     LCALL   ?C?PSTXDATA
0243 D001              POP     AR1
0245 D002              POP     AR2
0247 D003              POP     AR3
0249 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 651
024C 900000      E     MOV     DPTR,#g_mem+034H
024F E0                MOVX    A,@DPTR
0250 FF                MOV     R7,A
0251 EF                MOV     A,R7
0252 B40223            CJNE    A,#02H,?C0128
                                           ; SOURCE LINE # 652
0255 900000      R     MOV     DPTR,#info_string
0258 120000      E     LCALL   ?C?PLDXDATA
025B C003              PUSH    AR3
025D C002              PUSH    AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 61  

025F C001              PUSH    AR1
0261 7BFF              MOV     R3,#0FFH
0263 7A00        R     MOV     R2,#HIGH ?SC_147
0265 7900        R     MOV     R1,#LOW ?SC_147
0267 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
026A 120000      E     LCALL   ?C?PSTXDATA
026D D001              POP     AR1
026F D002              POP     AR2
0271 D003              POP     AR3
0273 120000      E     LCALL   _strcat
0276 804D              SJMP    ?C0129
0278         ?C0128:
                                           ; SOURCE LINE # 653
                                           ; SOURCE LINE # 654
0278 900000      E     MOV     DPTR,#g_mem+034H
027B E0                MOVX    A,@DPTR
027C FF                MOV     R7,A
027D EF                MOV     A,R7
027E B40123            CJNE    A,#01H,?C0130
                                           ; SOURCE LINE # 655
0281 900000      R     MOV     DPTR,#info_string
0284 120000      E     LCALL   ?C?PLDXDATA
0287 C003              PUSH    AR3
0289 C002              PUSH    AR2
028B C001              PUSH    AR1
028D 7BFF              MOV     R3,#0FFH
028F 7A00        R     MOV     R2,#HIGH ?SC_161
0291 7900        R     MOV     R1,#LOW ?SC_161
0293 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0296 120000      E     LCALL   ?C?PSTXDATA
0299 D001              POP     AR1
029B D002              POP     AR2
029D D003              POP     AR3
029F 120000      E     LCALL   _strcat
02A2 8021              SJMP    ?C0129
02A4         ?C0130:
                                           ; SOURCE LINE # 657
02A4 900000      R     MOV     DPTR,#info_string
02A7 120000      E     LCALL   ?C?PLDXDATA
02AA C003              PUSH    AR3
02AC C002              PUSH    AR2
02AE C001              PUSH    AR1
02B0 7BFF              MOV     R3,#0FFH
02B2 7A00        R     MOV     R2,#HIGH ?SC_170
02B4 7900        R     MOV     R1,#LOW ?SC_170
02B6 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02B9 120000      E     LCALL   ?C?PSTXDATA
02BC D001              POP     AR1
02BE D002              POP     AR2
02C0 D003              POP     AR3
02C2 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 658
02C5         ?C0129:
                                           ; SOURCE LINE # 660
02C5 900000      R     MOV     DPTR,#i
02C8 E4                CLR     A
02C9 F0                MOVX    @DPTR,A
02CA A3                INC     DPTR
02CB E4                CLR     A
02CC F0                MOVX    @DPTR,A
02CD         ?C0132:
02CD 900000      R     MOV     DPTR,#i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 62  

02D0 E0                MOVX    A,@DPTR
02D1 FE                MOV     R6,A
02D2 A3                INC     DPTR
02D3 E0                MOVX    A,@DPTR
02D4 FF                MOV     R7,A
02D5 C3                CLR     C
02D6 EF                MOV     A,R7
02D7 9402              SUBB    A,#02H
02D9 EE                MOV     A,R6
02DA 6480              XRL     A,#080H
02DC 9480              SUBB    A,#080H
02DE 4003              JC      $ + 5H
02E0 020000      R     LJMP    ?C0133
                                           ; SOURCE LINE # 661
02E3 900000      E     MOV     DPTR,#g_mem+034H
02E6 E0                MOVX    A,@DPTR
02E7 FF                MOV     R7,A
02E8 EF                MOV     A,R7
02E9 6402              XRL     A,#02H
02EB 706D              JNZ     ?C0135
                                           ; SOURCE LINE # 662
02ED 7B01              MOV     R3,#01H
02EF 7A00        R     MOV     R2,#HIGH str
02F1 7900        R     MOV     R1,#LOW str
02F3 C003              PUSH    AR3
02F5 C002              PUSH    AR2
02F7 C001              PUSH    AR1
02F9 7BFF              MOV     R3,#0FFH
02FB 7A00        R     MOV     R2,#HIGH ?SC_184
02FD 7900        R     MOV     R1,#LOW ?SC_184
02FF 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0302 120000      E     LCALL   ?C?PSTXDATA
0305 900000      R     MOV     DPTR,#i
0308 E0                MOVX    A,@DPTR
0309 FE                MOV     R6,A
030A A3                INC     DPTR
030B E0                MOVX    A,@DPTR
030C FF                MOV     R7,A
030D EF                MOV     A,R7
030E 7802              MOV     R0,#02H
0310         ?C0255:
0310 C3                CLR     C
0311 33                RLC     A
0312 CE                XCH     A,R6
0313 33                RLC     A
0314 CE                XCH     A,R6
0315 D8F9              DJNZ    R0,?C0255
0317 FF                MOV     R7,A
0318 7400        E     MOV     A,#LOW g_ref+08H
031A 2F                ADD     A,R7
031B F582              MOV     DPL,A
031D 7400        E     MOV     A,#HIGH g_ref+08H
031F 3E                ADDC    A,R6
0320 F583              MOV     DPH,A
0322 120000      E     LCALL   ?C?LLDXDATA
0325 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0328 EE                MOV     A,R6
0329 F0                MOVX    @DPTR,A
032A A3                INC     DPTR
032B EF                MOV     A,R7
032C F0                MOVX    @DPTR,A
032D D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 63  

032F D002              POP     AR2
0331 D003              POP     AR3
0333 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 663
0336 900000      R     MOV     DPTR,#info_string
0339 120000      E     LCALL   ?C?PLDXDATA
033C C003              PUSH    AR3
033E C002              PUSH    AR2
0340 C001              PUSH    AR1
0342 7B01              MOV     R3,#01H
0344 7A00        R     MOV     R2,#HIGH str
0346 7900        R     MOV     R1,#LOW str
0348 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
034B 120000      E     LCALL   ?C?PSTXDATA
034E D001              POP     AR1
0350 D002              POP     AR2
0352 D003              POP     AR3
0354 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 664
0357 020000      R     LJMP    ?C0134
035A         ?C0135:
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 666
035A 900000      E     MOV     DPTR,#g_mem+034H
035D E0                MOVX    A,@DPTR
035E FF                MOV     R7,A
035F EF                MOV     A,R7
0360 6401              XRL     A,#01H
0362 706D              JNZ     ?C0137
                                           ; SOURCE LINE # 667
0364 7B01              MOV     R3,#01H
0366 7A00        R     MOV     R2,#HIGH str
0368 7900        R     MOV     R1,#LOW str
036A C003              PUSH    AR3
036C C002              PUSH    AR2
036E C001              PUSH    AR1
0370 7BFF              MOV     R3,#0FFH
0372 7A00        R     MOV     R2,#HIGH ?SC_184
0374 7900        R     MOV     R1,#LOW ?SC_184
0376 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0379 120000      E     LCALL   ?C?PSTXDATA
037C 900000      R     MOV     DPTR,#i
037F E0                MOVX    A,@DPTR
0380 FE                MOV     R6,A
0381 A3                INC     DPTR
0382 E0                MOVX    A,@DPTR
0383 FF                MOV     R7,A
0384 EF                MOV     A,R7
0385 7802              MOV     R0,#02H
0387         ?C0256:
0387 C3                CLR     C
0388 33                RLC     A
0389 CE                XCH     A,R6
038A 33                RLC     A
038B CE                XCH     A,R6
038C D8F9              DJNZ    R0,?C0256
038E FF                MOV     R7,A
038F 7400        E     MOV     A,#LOW g_ref+010H
0391 2F                ADD     A,R7
0392 F582              MOV     DPL,A
0394 7400        E     MOV     A,#HIGH g_ref+010H
0396 3E                ADDC    A,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 64  

0397 F583              MOV     DPH,A
0399 120000      E     LCALL   ?C?LLDXDATA
039C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
039F EE                MOV     A,R6
03A0 F0                MOVX    @DPTR,A
03A1 A3                INC     DPTR
03A2 EF                MOV     A,R7
03A3 F0                MOVX    @DPTR,A
03A4 D001              POP     AR1
03A6 D002              POP     AR2
03A8 D003              POP     AR3
03AA 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 668
03AD 900000      R     MOV     DPTR,#info_string
03B0 120000      E     LCALL   ?C?PLDXDATA
03B3 C003              PUSH    AR3
03B5 C002              PUSH    AR2
03B7 C001              PUSH    AR1
03B9 7B01              MOV     R3,#01H
03BB 7A00        R     MOV     R2,#HIGH str
03BD 7900        R     MOV     R1,#LOW str
03BF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03C2 120000      E     LCALL   ?C?PSTXDATA
03C5 D001              POP     AR1
03C7 D002              POP     AR2
03C9 D003              POP     AR3
03CB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 669
03CE 020000      R     LJMP    ?C0134
03D1         ?C0137:
                                           ; SOURCE LINE # 670
                                           ; SOURCE LINE # 671
03D1 7B01              MOV     R3,#01H
03D3 7A00        R     MOV     R2,#HIGH str
03D5 7900        R     MOV     R1,#LOW str
03D7 C003              PUSH    AR3
03D9 C002              PUSH    AR2
03DB C001              PUSH    AR1
03DD 7BFF              MOV     R3,#0FFH
03DF 7A00        R     MOV     R2,#HIGH ?SC_184
03E1 7900        R     MOV     R1,#LOW ?SC_184
03E3 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
03E6 120000      E     LCALL   ?C?PSTXDATA
03E9 900000      R     MOV     DPTR,#i
03EC E0                MOVX    A,@DPTR
03ED FE                MOV     R6,A
03EE A3                INC     DPTR
03EF E0                MOVX    A,@DPTR
03F0 FF                MOV     R7,A
03F1 EF                MOV     A,R7
03F2 7802              MOV     R0,#02H
03F4         ?C0257:
03F4 C3                CLR     C
03F5 33                RLC     A
03F6 CE                XCH     A,R6
03F7 33                RLC     A
03F8 CE                XCH     A,R6
03F9 D8F9              DJNZ    R0,?C0257
03FB FF                MOV     R7,A
03FC 7400        E     MOV     A,#LOW g_ref
03FE 2F                ADD     A,R7
03FF F582              MOV     DPL,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 65  

0401 7400        E     MOV     A,#HIGH g_ref
0403 3E                ADDC    A,R6
0404 F583              MOV     DPH,A
0406 120000      E     LCALL   ?C?LLDXDATA
0409 900000      R     MOV     DPTR,#i
040C E0                MOVX    A,@DPTR
040D FA                MOV     R2,A
040E A3                INC     DPTR
040F E0                MOVX    A,@DPTR
0410 FB                MOV     R3,A
0411 7400        E     MOV     A,#LOW c_mem+035H
0413 2B                ADD     A,R3
0414 F582              MOV     DPL,A
0416 7400        E     MOV     A,#HIGH c_mem+035H
0418 3A                ADDC    A,R2
0419 F583              MOV     DPH,A
041B E0                MOVX    A,@DPTR
041C F9                MOV     R1,A
041D A801              MOV     R0,AR1
041F 120000      E     LCALL   ?C?SLSHR
0422 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0425 EE                MOV     A,R6
0426 F0                MOVX    @DPTR,A
0427 A3                INC     DPTR
0428 EF                MOV     A,R7
0429 F0                MOVX    @DPTR,A
042A D001              POP     AR1
042C D002              POP     AR2
042E D003              POP     AR3
0430 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 672
0433 900000      R     MOV     DPTR,#info_string
0436 120000      E     LCALL   ?C?PLDXDATA
0439 C003              PUSH    AR3
043B C002              PUSH    AR2
043D C001              PUSH    AR1
043F 7B01              MOV     R3,#01H
0441 7A00        R     MOV     R2,#HIGH str
0443 7900        R     MOV     R1,#LOW str
0445 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0448 120000      E     LCALL   ?C?PSTXDATA
044B D001              POP     AR1
044D D002              POP     AR2
044F D003              POP     AR3
0451 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 673
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
0454         ?C0134:
0454 900000      R     MOV     DPTR,#i
0457 E4                CLR     A
0458 75F001            MOV     B,#01H
045B 120000      E     LCALL   ?C?IILDX
045E 020000      R     LJMP    ?C0132
0461         ?C0133:
                                           ; SOURCE LINE # 676
0461 900000      R     MOV     DPTR,#info_string
0464 120000      E     LCALL   ?C?PLDXDATA
0467 C003              PUSH    AR3
0469 C002              PUSH    AR2
046B C001              PUSH    AR1
046D 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 66  

046F 7A00        R     MOV     R2,#HIGH ?SC_1
0471 7900        R     MOV     R1,#LOW ?SC_1
0473 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0476 120000      E     LCALL   ?C?PSTXDATA
0479 D001              POP     AR1
047B D002              POP     AR2
047D D003              POP     AR3
047F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 677
0482 900000      R     MOV     DPTR,#info_string
0485 120000      E     LCALL   ?C?PLDXDATA
0488 C003              PUSH    AR3
048A C002              PUSH    AR2
048C C001              PUSH    AR1
048E 7BFF              MOV     R3,#0FFH
0490 7A00        R     MOV     R2,#HIGH ?SC_1
0492 7900        R     MOV     R1,#LOW ?SC_1
0494 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0497 120000      E     LCALL   ?C?PSTXDATA
049A D001              POP     AR1
049C D002              POP     AR2
049E D003              POP     AR3
04A0 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 679
04A3 7B01              MOV     R3,#01H
04A5 7A00        R     MOV     R2,#HIGH str
04A7 7900        R     MOV     R1,#LOW str
04A9 C003              PUSH    AR3
04AB C002              PUSH    AR2
04AD C001              PUSH    AR1
04AF 7BFF              MOV     R3,#0FFH
04B1 7A00        R     MOV     R2,#HIGH ?SC_188
04B3 7900        R     MOV     R1,#LOW ?SC_188
04B5 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
04B8 120000      E     LCALL   ?C?PSTXDATA
04BB D001              POP     AR1
04BD D002              POP     AR2
04BF D003              POP     AR3
04C1 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 680
04C4 900000      E     MOV     DPTR,#g_ref+018H
04C7 E0                MOVX    A,@DPTR
04C8 FF                MOV     R7,A
04C9 EF                MOV     A,R7
04CA 5403              ANL     A,#03H
04CC FF                MOV     R7,A
04CD EF                MOV     A,R7
04CE 6023              JZ      ?C0139
                                           ; SOURCE LINE # 681
04D0 7B01              MOV     R3,#01H
04D2 7A00        R     MOV     R2,#HIGH str
04D4 7900        R     MOV     R1,#LOW str
04D6 C003              PUSH    AR3
04D8 C002              PUSH    AR2
04DA C001              PUSH    AR1
04DC 7BFF              MOV     R3,#0FFH
04DE 7A00        R     MOV     R2,#HIGH ?SC_204
04E0 7900        R     MOV     R1,#LOW ?SC_204
04E2 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
04E5 120000      E     LCALL   ?C?PSTXDATA
04E8 D001              POP     AR1
04EA D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 67  

04EC D003              POP     AR3
04EE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 682
04F1 8021              SJMP    ?C0140
04F3         ?C0139:
                                           ; SOURCE LINE # 683
04F3 7B01              MOV     R3,#01H
04F5 7A00        R     MOV     R2,#HIGH str
04F7 7900        R     MOV     R1,#LOW str
04F9 C003              PUSH    AR3
04FB C002              PUSH    AR2
04FD C001              PUSH    AR1
04FF 7BFF              MOV     R3,#0FFH
0501 7A00        R     MOV     R2,#HIGH ?SC_210
0503 7900        R     MOV     R1,#LOW ?SC_210
0505 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0508 120000      E     LCALL   ?C?PSTXDATA
050B D001              POP     AR1
050D D002              POP     AR2
050F D003              POP     AR3
0511 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 684
0514         ?C0140:
                                           ; SOURCE LINE # 685
0514 900000      R     MOV     DPTR,#info_string
0517 120000      E     LCALL   ?C?PLDXDATA
051A C003              PUSH    AR3
051C C002              PUSH    AR2
051E C001              PUSH    AR1
0520 7B01              MOV     R3,#01H
0522 7A00        R     MOV     R2,#HIGH str
0524 7900        R     MOV     R1,#LOW str
0526 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0529 120000      E     LCALL   ?C?PSTXDATA
052C D001              POP     AR1
052E D002              POP     AR2
0530 D003              POP     AR3
0532 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 687
0535 900000      R     MOV     DPTR,#info_string
0538 120000      E     LCALL   ?C?PLDXDATA
053B C003              PUSH    AR3
053D C002              PUSH    AR2
053F C001              PUSH    AR1
0541 7BFF              MOV     R3,#0FFH
0543 7A00        R     MOV     R2,#HIGH ?SC_215
0545 7900        R     MOV     R1,#LOW ?SC_215
0547 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
054A 120000      E     LCALL   ?C?PSTXDATA
054D D001              POP     AR1
054F D002              POP     AR2
0551 D003              POP     AR3
0553 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 688
0556 900000      R     MOV     DPTR,#info_string
0559 120000      E     LCALL   ?C?PLDXDATA
055C C003              PUSH    AR3
055E C002              PUSH    AR2
0560 C001              PUSH    AR1
0562 7BFF              MOV     R3,#0FFH
0564 7A00        R     MOV     R2,#HIGH ?SC_237
0566 7900        R     MOV     R1,#LOW ?SC_237
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 68  

0568 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
056B 120000      E     LCALL   ?C?PSTXDATA
056E D001              POP     AR1
0570 D002              POP     AR2
0572 D003              POP     AR3
0574 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 689
0577 900000      R     MOV     DPTR,#i
057A E4                CLR     A
057B F0                MOVX    @DPTR,A
057C A3                INC     DPTR
057D E4                CLR     A
057E F0                MOVX    @DPTR,A
057F         ?C0141:
057F 900000      R     MOV     DPTR,#i
0582 E0                MOVX    A,@DPTR
0583 FE                MOV     R6,A
0584 A3                INC     DPTR
0585 E0                MOVX    A,@DPTR
0586 FF                MOV     R7,A
0587 C3                CLR     C
0588 EF                MOV     A,R7
0589 9403              SUBB    A,#03H
058B EE                MOV     A,R6
058C 6480              XRL     A,#080H
058E 9480              SUBB    A,#080H
0590 4003              JC      $ + 5H
0592 020000      R     LJMP    ?C0142
                                           ; SOURCE LINE # 691
0595 7B01              MOV     R3,#01H
0597 7A00        R     MOV     R2,#HIGH str
0599 7900        R     MOV     R1,#LOW str
059B C003              PUSH    AR3
059D C002              PUSH    AR2
059F C001              PUSH    AR1
05A1 7BFF              MOV     R3,#0FFH
05A3 7A00        R     MOV     R2,#HIGH ?SC_253
05A5 7900        R     MOV     R1,#LOW ?SC_253
05A7 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
05AA 120000      E     LCALL   ?C?PSTXDATA
05AD 900000      R     MOV     DPTR,#i
05B0 E0                MOVX    A,@DPTR
05B1 FE                MOV     R6,A
05B2 A3                INC     DPTR
05B3 E0                MOVX    A,@DPTR
05B4 FF                MOV     R7,A
05B5 EF                MOV     A,R7
05B6 2401              ADD     A,#01H
05B8 FF                MOV     R7,A
05B9 EE                MOV     A,R6
05BA 3400              ADDC    A,#00H
05BC FE                MOV     R6,A
05BD 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
05C0 EE                MOV     A,R6
05C1 F0                MOVX    @DPTR,A
05C2 A3                INC     DPTR
05C3 EF                MOV     A,R7
05C4 F0                MOVX    @DPTR,A
05C5 900000      R     MOV     DPTR,#i
05C8 E0                MOVX    A,@DPTR
05C9 FE                MOV     R6,A
05CA A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 69  

05CB E0                MOVX    A,@DPTR
05CC FF                MOV     R7,A
05CD EF                MOV     A,R7
05CE 7802              MOV     R0,#02H
05D0         ?C0258:
05D0 C3                CLR     C
05D1 33                RLC     A
05D2 CE                XCH     A,R6
05D3 33                RLC     A
05D4 CE                XCH     A,R6
05D5 D8F9              DJNZ    R0,?C0258
05D7 FF                MOV     R7,A
05D8 7400        E     MOV     A,#LOW g_meas
05DA 2F                ADD     A,R7
05DB F582              MOV     DPL,A
05DD 7400        E     MOV     A,#HIGH g_meas
05DF 3E                ADDC    A,R6
05E0 F583              MOV     DPH,A
05E2 120000      E     LCALL   ?C?LLDXDATA
05E5 900000      R     MOV     DPTR,#i
05E8 E0                MOVX    A,@DPTR
05E9 FA                MOV     R2,A
05EA A3                INC     DPTR
05EB E0                MOVX    A,@DPTR
05EC FB                MOV     R3,A
05ED 7400        E     MOV     A,#LOW c_mem+035H
05EF 2B                ADD     A,R3
05F0 F582              MOV     DPL,A
05F2 7400        E     MOV     A,#HIGH c_mem+035H
05F4 3A                ADDC    A,R2
05F5 F583              MOV     DPH,A
05F7 E0                MOVX    A,@DPTR
05F8 F9                MOV     R1,A
05F9 A801              MOV     R0,AR1
05FB 120000      E     LCALL   ?C?SLSHR
05FE 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0601 EE                MOV     A,R6
0602 F0                MOVX    @DPTR,A
0603 A3                INC     DPTR
0604 EF                MOV     A,R7
0605 F0                MOVX    @DPTR,A
0606 D001              POP     AR1
0608 D002              POP     AR2
060A D003              POP     AR3
060C 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 692
060F 900000      R     MOV     DPTR,#info_string
0612 120000      E     LCALL   ?C?PLDXDATA
0615 C003              PUSH    AR3
0617 C002              PUSH    AR2
0619 C001              PUSH    AR1
061B 7B01              MOV     R3,#01H
061D 7A00        R     MOV     R2,#HIGH str
061F 7900        R     MOV     R1,#LOW str
0621 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0624 120000      E     LCALL   ?C?PSTXDATA
0627 D001              POP     AR1
0629 D002              POP     AR2
062B D003              POP     AR3
062D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 693
0630 900000      R     MOV     DPTR,#info_string
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 70  

0633 120000      E     LCALL   ?C?PLDXDATA
0636 C003              PUSH    AR3
0638 C002              PUSH    AR2
063A C001              PUSH    AR1
063C 7BFF              MOV     R3,#0FFH
063E 7A00        R     MOV     R2,#HIGH ?SC_1
0640 7900        R     MOV     R1,#LOW ?SC_1
0642 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0645 120000      E     LCALL   ?C?PSTXDATA
0648 D001              POP     AR1
064A D002              POP     AR2
064C D003              POP     AR3
064E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 694
0651 900000      R     MOV     DPTR,#i
0654 E4                CLR     A
0655 75F001            MOV     B,#01H
0658 120000      E     LCALL   ?C?IILDX
065B 020000      R     LJMP    ?C0141
065E         ?C0142:
                                           ; SOURCE LINE # 696
065E 7B01              MOV     R3,#01H
0660 7A00        R     MOV     R2,#HIGH str
0662 7900        R     MOV     R1,#LOW str
0664 C003              PUSH    AR3
0666 C002              PUSH    AR2
0668 C001              PUSH    AR1
066A 7BFF              MOV     R3,#0FFH
066C 7A00        R     MOV     R2,#HIGH ?SC_262
066E 7900        R     MOV     R1,#LOW ?SC_262
0670 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0673 120000      E     LCALL   ?C?PSTXDATA
0676 900000      E     MOV     DPTR,#dev_tension
0679 120000      E     LCALL   ?C?LLDXDATA
067C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
067F 120000      E     LCALL   ?C?LSTXDATA
0682 D001              POP     AR1
0684 D002              POP     AR2
0686 D003              POP     AR3
0688 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 697
068B 900000      R     MOV     DPTR,#info_string
068E 120000      E     LCALL   ?C?PLDXDATA
0691 C003              PUSH    AR3
0693 C002              PUSH    AR2
0695 C001              PUSH    AR1
0697 7B01              MOV     R3,#01H
0699 7A00        R     MOV     R2,#HIGH str
069B 7900        R     MOV     R1,#LOW str
069D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
06A0 120000      E     LCALL   ?C?PSTXDATA
06A3 D001              POP     AR1
06A5 D002              POP     AR2
06A7 D003              POP     AR3
06A9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 698
06AC 900000      R     MOV     DPTR,#info_string
06AF 120000      E     LCALL   ?C?PLDXDATA
06B2 C003              PUSH    AR3
06B4 C002              PUSH    AR2
06B6 C001              PUSH    AR1
06B8 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 71  

06BA 7A00        R     MOV     R2,#HIGH ?SC_1
06BC 7900        R     MOV     R1,#LOW ?SC_1
06BE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
06C1 120000      E     LCALL   ?C?PSTXDATA
06C4 D001              POP     AR1
06C6 D002              POP     AR2
06C8 D003              POP     AR3
06CA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 700
06CD 7B01              MOV     R3,#01H
06CF 7A00        R     MOV     R2,#HIGH str
06D1 7900        R     MOV     R1,#LOW str
06D3 C003              PUSH    AR3
06D5 C002              PUSH    AR2
06D7 C001              PUSH    AR1
06D9 7BFF              MOV     R3,#0FFH
06DB 7A00        R     MOV     R2,#HIGH ?SC_280
06DD 7900        R     MOV     R1,#LOW ?SC_280
06DF 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
06E2 120000      E     LCALL   ?C?PSTXDATA
06E5 900000      E     MOV     DPTR,#g_meas+0CH
06E8 120000      E     LCALL   ?C?LLDXDATA
06EB 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
06EE 120000      E     LCALL   ?C?LSTXDATA
06F1 D001              POP     AR1
06F3 D002              POP     AR2
06F5 D003              POP     AR3
06F7 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 701
06FA 900000      R     MOV     DPTR,#info_string
06FD 120000      E     LCALL   ?C?PLDXDATA
0700 C003              PUSH    AR3
0702 C002              PUSH    AR2
0704 C001              PUSH    AR1
0706 7B01              MOV     R3,#01H
0708 7A00        R     MOV     R2,#HIGH str
070A 7900        R     MOV     R1,#LOW str
070C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
070F 120000      E     LCALL   ?C?PSTXDATA
0712 D001              POP     AR1
0714 D002              POP     AR2
0716 D003              POP     AR3
0718 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 702
071B 900000      R     MOV     DPTR,#info_string
071E 120000      E     LCALL   ?C?PLDXDATA
0721 C003              PUSH    AR3
0723 C002              PUSH    AR2
0725 C001              PUSH    AR1
0727 7BFF              MOV     R3,#0FFH
0729 7A00        R     MOV     R2,#HIGH ?SC_1
072B 7900        R     MOV     R1,#LOW ?SC_1
072D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0730 120000      E     LCALL   ?C?PSTXDATA
0733 D001              POP     AR1
0735 D002              POP     AR2
0737 D003              POP     AR3
0739 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 705
073C 900000      R     MOV     DPTR,#info_string
073F 120000      E     LCALL   ?C?PLDXDATA
0742 C003              PUSH    AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 72  

0744 C002              PUSH    AR2
0746 C001              PUSH    AR1
0748 7BFF              MOV     R3,#0FFH
074A 7A00        R     MOV     R2,#HIGH ?SC_298
074C 7900        R     MOV     R1,#LOW ?SC_298
074E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0751 120000      E     LCALL   ?C?PSTXDATA
0754 D001              POP     AR1
0756 D002              POP     AR2
0758 D003              POP     AR3
075A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 707
075D 900000      R     MOV     DPTR,#info_string
0760 120000      E     LCALL   ?C?PLDXDATA
0763 C003              PUSH    AR3
0765 C002              PUSH    AR2
0767 C001              PUSH    AR1
0769 7BFF              MOV     R3,#0FFH
076B 7A00        R     MOV     R2,#HIGH ?SC_320
076D 7900        R     MOV     R1,#LOW ?SC_320
076F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0772 120000      E     LCALL   ?C?PSTXDATA
0775 D001              POP     AR1
0777 D002              POP     AR2
0779 D003              POP     AR3
077B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 708
077E 7B01              MOV     R3,#01H
0780 7A00        R     MOV     R2,#HIGH str
0782 7900        R     MOV     R1,#LOW str
0784 C003              PUSH    AR3
0786 C002              PUSH    AR2
0788 C001              PUSH    AR1
078A 7BFF              MOV     R3,#0FFH
078C 7A00        R     MOV     R2,#HIGH ?SC_338
078E 7900        R     MOV     R1,#LOW ?SC_338
0790 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0793 120000      E     LCALL   ?C?PSTXDATA
0796 900000      E     MOV     DPTR,#c_mem+02H
0799 120000      E     LCALL   ?C?LLDXDATA
079C EC                MOV     A,R4
079D 120000      E     LCALL   ?C?FCASTL
07A0 7B00              MOV     R3,#00H
07A2 7A00              MOV     R2,#00H
07A4 7980              MOV     R1,#080H
07A6 7847              MOV     R0,#047H
07A8 120000      E     LCALL   ?C?FPDIV
07AB 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
07AE 120000      E     LCALL   ?C?LSTXDATA
07B1 D001              POP     AR1
07B3 D002              POP     AR2
07B5 D003              POP     AR3
07B7 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 709
07BA 900000      R     MOV     DPTR,#info_string
07BD 120000      E     LCALL   ?C?PLDXDATA
07C0 C003              PUSH    AR3
07C2 C002              PUSH    AR2
07C4 C001              PUSH    AR1
07C6 7B01              MOV     R3,#01H
07C8 7A00        R     MOV     R2,#HIGH str
07CA 7900        R     MOV     R1,#LOW str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 73  

07CC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
07CF 120000      E     LCALL   ?C?PSTXDATA
07D2 D001              POP     AR1
07D4 D002              POP     AR2
07D6 D003              POP     AR3
07D8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 710
07DB 7B01              MOV     R3,#01H
07DD 7A00        R     MOV     R2,#HIGH str
07DF 7900        R     MOV     R1,#LOW str
07E1 C003              PUSH    AR3
07E3 C002              PUSH    AR2
07E5 C001              PUSH    AR1
07E7 7BFF              MOV     R3,#0FFH
07E9 7A00        R     MOV     R2,#HIGH ?SC_348
07EB 7900        R     MOV     R1,#LOW ?SC_348
07ED 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
07F0 120000      E     LCALL   ?C?PSTXDATA
07F3 900000      E     MOV     DPTR,#c_mem+06H
07F6 120000      E     LCALL   ?C?LLDXDATA
07F9 EC                MOV     A,R4
07FA 120000      E     LCALL   ?C?FCASTL
07FD 7B00              MOV     R3,#00H
07FF 7A00              MOV     R2,#00H
0801 7980              MOV     R1,#080H
0803 7847              MOV     R0,#047H
0805 120000      E     LCALL   ?C?FPDIV
0808 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
080B 120000      E     LCALL   ?C?LSTXDATA
080E D001              POP     AR1
0810 D002              POP     AR2
0812 D003              POP     AR3
0814 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 711
0817 900000      R     MOV     DPTR,#info_string
081A 120000      E     LCALL   ?C?PLDXDATA
081D C003              PUSH    AR3
081F C002              PUSH    AR2
0821 C001              PUSH    AR1
0823 7B01              MOV     R3,#01H
0825 7A00        R     MOV     R2,#HIGH str
0827 7900        R     MOV     R1,#LOW str
0829 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
082C 120000      E     LCALL   ?C?PSTXDATA
082F D001              POP     AR1
0831 D002              POP     AR2
0833 D003              POP     AR3
0835 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 712
0838 7B01              MOV     R3,#01H
083A 7A00        R     MOV     R2,#HIGH str
083C 7900        R     MOV     R1,#LOW str
083E C003              PUSH    AR3
0840 C002              PUSH    AR2
0842 C001              PUSH    AR1
0844 7BFF              MOV     R3,#0FFH
0846 7A00        R     MOV     R2,#HIGH ?SC_358
0848 7900        R     MOV     R1,#LOW ?SC_358
084A 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
084D 120000      E     LCALL   ?C?PSTXDATA
0850 900000      E     MOV     DPTR,#c_mem+0AH
0853 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 74  

0856 EC                MOV     A,R4
0857 120000      E     LCALL   ?C?FCASTL
085A 7B00              MOV     R3,#00H
085C 7A00              MOV     R2,#00H
085E 7980              MOV     R1,#080H
0860 7847              MOV     R0,#047H
0862 120000      E     LCALL   ?C?FPDIV
0865 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0868 120000      E     LCALL   ?C?LSTXDATA
086B D001              POP     AR1
086D D002              POP     AR2
086F D003              POP     AR3
0871 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 713
0874 900000      R     MOV     DPTR,#info_string
0877 120000      E     LCALL   ?C?PLDXDATA
087A C003              PUSH    AR3
087C C002              PUSH    AR2
087E C001              PUSH    AR1
0880 7B01              MOV     R3,#01H
0882 7A00        R     MOV     R2,#HIGH str
0884 7900        R     MOV     R1,#LOW str
0886 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0889 120000      E     LCALL   ?C?PSTXDATA
088C D001              POP     AR1
088E D002              POP     AR2
0890 D003              POP     AR3
0892 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 715
0895 900000      R     MOV     DPTR,#info_string
0898 120000      E     LCALL   ?C?PLDXDATA
089B C003              PUSH    AR3
089D C002              PUSH    AR2
089F C001              PUSH    AR1
08A1 7BFF              MOV     R3,#0FFH
08A3 7A00        R     MOV     R2,#HIGH ?SC_368
08A5 7900        R     MOV     R1,#LOW ?SC_368
08A7 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
08AA 120000      E     LCALL   ?C?PSTXDATA
08AD D001              POP     AR1
08AF D002              POP     AR2
08B1 D003              POP     AR3
08B3 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 716
08B6 7B01              MOV     R3,#01H
08B8 7A00        R     MOV     R2,#HIGH str
08BA 7900        R     MOV     R1,#LOW str
08BC C003              PUSH    AR3
08BE C002              PUSH    AR2
08C0 C001              PUSH    AR1
08C2 7BFF              MOV     R3,#0FFH
08C4 7A00        R     MOV     R2,#HIGH ?SC_338
08C6 7900        R     MOV     R1,#LOW ?SC_338
08C8 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
08CB 120000      E     LCALL   ?C?PSTXDATA
08CE 900000      E     MOV     DPTR,#c_mem+0EH
08D1 120000      E     LCALL   ?C?LLDXDATA
08D4 EC                MOV     A,R4
08D5 120000      E     LCALL   ?C?FCASTL
08D8 7B00              MOV     R3,#00H
08DA 7A00              MOV     R2,#00H
08DC 7980              MOV     R1,#080H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 75  

08DE 7847              MOV     R0,#047H
08E0 120000      E     LCALL   ?C?FPDIV
08E3 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
08E6 120000      E     LCALL   ?C?LSTXDATA
08E9 D001              POP     AR1
08EB D002              POP     AR2
08ED D003              POP     AR3
08EF 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 717
08F2 900000      R     MOV     DPTR,#info_string
08F5 120000      E     LCALL   ?C?PLDXDATA
08F8 C003              PUSH    AR3
08FA C002              PUSH    AR2
08FC C001              PUSH    AR1
08FE 7B01              MOV     R3,#01H
0900 7A00        R     MOV     R2,#HIGH str
0902 7900        R     MOV     R1,#LOW str
0904 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0907 120000      E     LCALL   ?C?PSTXDATA
090A D001              POP     AR1
090C D002              POP     AR2
090E D003              POP     AR3
0910 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 718
0913 7B01              MOV     R3,#01H
0915 7A00        R     MOV     R2,#HIGH str
0917 7900        R     MOV     R1,#LOW str
0919 C003              PUSH    AR3
091B C002              PUSH    AR2
091D C001              PUSH    AR1
091F 7BFF              MOV     R3,#0FFH
0921 7A00        R     MOV     R2,#HIGH ?SC_348
0923 7900        R     MOV     R1,#LOW ?SC_348
0925 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0928 120000      E     LCALL   ?C?PSTXDATA
092B 900000      E     MOV     DPTR,#c_mem+012H
092E 120000      E     LCALL   ?C?LLDXDATA
0931 EC                MOV     A,R4
0932 120000      E     LCALL   ?C?FCASTL
0935 7B00              MOV     R3,#00H
0937 7A00              MOV     R2,#00H
0939 7980              MOV     R1,#080H
093B 7847              MOV     R0,#047H
093D 120000      E     LCALL   ?C?FPDIV
0940 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0943 120000      E     LCALL   ?C?LSTXDATA
0946 D001              POP     AR1
0948 D002              POP     AR2
094A D003              POP     AR3
094C 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 719
094F 900000      R     MOV     DPTR,#info_string
0952 120000      E     LCALL   ?C?PLDXDATA
0955 C003              PUSH    AR3
0957 C002              PUSH    AR2
0959 C001              PUSH    AR1
095B 7B01              MOV     R3,#01H
095D 7A00        R     MOV     R2,#HIGH str
095F 7900        R     MOV     R1,#LOW str
0961 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0964 120000      E     LCALL   ?C?PSTXDATA
0967 D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 76  

0969 D002              POP     AR2
096B D003              POP     AR3
096D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 720
0970 7B01              MOV     R3,#01H
0972 7A00        R     MOV     R2,#HIGH str
0974 7900        R     MOV     R1,#LOW str
0976 C003              PUSH    AR3
0978 C002              PUSH    AR2
097A C001              PUSH    AR1
097C 7BFF              MOV     R3,#0FFH
097E 7A00        R     MOV     R2,#HIGH ?SC_358
0980 7900        R     MOV     R1,#LOW ?SC_358
0982 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0985 120000      E     LCALL   ?C?PSTXDATA
0988 900000      E     MOV     DPTR,#c_mem+016H
098B 120000      E     LCALL   ?C?LLDXDATA
098E EC                MOV     A,R4
098F 120000      E     LCALL   ?C?FCASTL
0992 7B00              MOV     R3,#00H
0994 7A00              MOV     R2,#00H
0996 7980              MOV     R1,#080H
0998 7847              MOV     R0,#047H
099A 120000      E     LCALL   ?C?FPDIV
099D 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
09A0 120000      E     LCALL   ?C?LSTXDATA
09A3 D001              POP     AR1
09A5 D002              POP     AR2
09A7 D003              POP     AR3
09A9 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 721
09AC 900000      R     MOV     DPTR,#info_string
09AF 120000      E     LCALL   ?C?PLDXDATA
09B2 C003              PUSH    AR3
09B4 C002              PUSH    AR2
09B6 C001              PUSH    AR1
09B8 7B01              MOV     R3,#01H
09BA 7A00        R     MOV     R2,#HIGH str
09BC 7900        R     MOV     R1,#LOW str
09BE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
09C1 120000      E     LCALL   ?C?PSTXDATA
09C4 D001              POP     AR1
09C6 D002              POP     AR2
09C8 D003              POP     AR3
09CA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 723
09CD 900000      R     MOV     DPTR,#info_string
09D0 120000      E     LCALL   ?C?PLDXDATA
09D3 C003              PUSH    AR3
09D5 C002              PUSH    AR2
09D7 C001              PUSH    AR1
09D9 7BFF              MOV     R3,#0FFH
09DB 7A00        R     MOV     R2,#HIGH ?SC_1
09DD 7900        R     MOV     R1,#LOW ?SC_1
09DF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
09E2 120000      E     LCALL   ?C?PSTXDATA
09E5 D001              POP     AR1
09E7 D002              POP     AR2
09E9 D003              POP     AR3
09EB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 726
09EE 900000      E     MOV     DPTR,#c_mem+032H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 77  

09F1 E0                MOVX    A,@DPTR
09F2 FF                MOV     R7,A
09F3 EF                MOV     A,R7
09F4 B40323            CJNE    A,#03H,?C0144
                                           ; SOURCE LINE # 727
09F7 900000      R     MOV     DPTR,#info_string
09FA 120000      E     LCALL   ?C?PLDXDATA
09FD C003              PUSH    AR3
09FF C002              PUSH    AR2
0A01 C001              PUSH    AR1
0A03 7BFF              MOV     R3,#0FFH
0A05 7A00        R     MOV     R2,#HIGH ?SC_394
0A07 7900        R     MOV     R1,#LOW ?SC_394
0A09 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A0C 120000      E     LCALL   ?C?PSTXDATA
0A0F D001              POP     AR1
0A11 D002              POP     AR2
0A13 D003              POP     AR3
0A15 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 728
0A18 8021              SJMP    ?C0145
0A1A         ?C0144:
                                           ; SOURCE LINE # 729
0A1A 900000      R     MOV     DPTR,#info_string
0A1D 120000      E     LCALL   ?C?PLDXDATA
0A20 C003              PUSH    AR3
0A22 C002              PUSH    AR2
0A24 C001              PUSH    AR1
0A26 7BFF              MOV     R3,#0FFH
0A28 7A00        R     MOV     R2,#HIGH ?SC_420
0A2A 7900        R     MOV     R1,#LOW ?SC_420
0A2C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A2F 120000      E     LCALL   ?C?PSTXDATA
0A32 D001              POP     AR1
0A34 D002              POP     AR2
0A36 D003              POP     AR3
0A38 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 730
0A3B         ?C0145:
                                           ; SOURCE LINE # 732
0A3B 900000      E     MOV     DPTR,#c_mem+033H
0A3E E0                MOVX    A,@DPTR
0A3F FF                MOV     R7,A
0A40 EF                MOV     A,R7
0A41 120000      E     LCALL   ?C?CCASE
0A44 0000        R     DW      ?C0147
0A46 00                DB      00H
0A47 0000        R     DW      ?C0148
0A49 01                DB      01H
0A4A 0000        R     DW      ?C0149
0A4C 02                DB      02H
0A4D 0000        R     DW      ?C0150
0A4F 03                DB      03H
0A50 0000        R     DW      ?C0151
0A52 04                DB      04H
0A53 0000        R     DW      ?C0152
0A55 05                DB      05H
0A56 0000              DW      00H
0A58 0000        R     DW      ?C0146
                                           ; SOURCE LINE # 733
0A5A         ?C0147:
                                           ; SOURCE LINE # 734
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 78  

0A5A 900000      R     MOV     DPTR,#info_string
0A5D 120000      E     LCALL   ?C?PLDXDATA
0A60 C003              PUSH    AR3
0A62 C002              PUSH    AR2
0A64 C001              PUSH    AR1
0A66 7BFF              MOV     R3,#0FFH
0A68 7A00        R     MOV     R2,#HIGH ?SC_445
0A6A 7900        R     MOV     R1,#LOW ?SC_445
0A6C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A6F 120000      E     LCALL   ?C?PSTXDATA
0A72 D001              POP     AR1
0A74 D002              POP     AR2
0A76 D003              POP     AR3
0A78 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 735
0A7B 020000      R     LJMP    ?C0146
                                           ; SOURCE LINE # 736
0A7E         ?C0148:
                                           ; SOURCE LINE # 737
0A7E 900000      R     MOV     DPTR,#info_string
0A81 120000      E     LCALL   ?C?PLDXDATA
0A84 C003              PUSH    AR3
0A86 C002              PUSH    AR2
0A88 C001              PUSH    AR1
0A8A 7BFF              MOV     R3,#0FFH
0A8C 7A00        R     MOV     R2,#HIGH ?SC_463
0A8E 7900        R     MOV     R1,#LOW ?SC_463
0A90 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0A93 120000      E     LCALL   ?C?PSTXDATA
0A96 D001              POP     AR1
0A98 D002              POP     AR2
0A9A D003              POP     AR3
0A9C 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 738
0A9F 020000      R     LJMP    ?C0146
                                           ; SOURCE LINE # 739
0AA2         ?C0149:
                                           ; SOURCE LINE # 740
0AA2 900000      R     MOV     DPTR,#info_string
0AA5 120000      E     LCALL   ?C?PLDXDATA
0AA8 C003              PUSH    AR3
0AAA C002              PUSH    AR2
0AAC C001              PUSH    AR1
0AAE 7BFF              MOV     R3,#0FFH
0AB0 7A00        R     MOV     R2,#HIGH ?SC_484
0AB2 7900        R     MOV     R1,#LOW ?SC_484
0AB4 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0AB7 120000      E     LCALL   ?C?PSTXDATA
0ABA D001              POP     AR1
0ABC D002              POP     AR2
0ABE D003              POP     AR3
0AC0 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 741
0AC3 8067              SJMP    ?C0146
                                           ; SOURCE LINE # 742
0AC5         ?C0150:
                                           ; SOURCE LINE # 743
0AC5 900000      R     MOV     DPTR,#info_string
0AC8 120000      E     LCALL   ?C?PLDXDATA
0ACB C003              PUSH    AR3
0ACD C002              PUSH    AR2
0ACF C001              PUSH    AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 79  

0AD1 7BFF              MOV     R3,#0FFH
0AD3 7A00        R     MOV     R2,#HIGH ?SC_515
0AD5 7900        R     MOV     R1,#LOW ?SC_515
0AD7 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0ADA 120000      E     LCALL   ?C?PSTXDATA
0ADD D001              POP     AR1
0ADF D002              POP     AR2
0AE1 D003              POP     AR3
0AE3 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 744
0AE6 8044              SJMP    ?C0146
                                           ; SOURCE LINE # 745
0AE8         ?C0151:
                                           ; SOURCE LINE # 746
0AE8 900000      R     MOV     DPTR,#info_string
0AEB 120000      E     LCALL   ?C?PLDXDATA
0AEE C003              PUSH    AR3
0AF0 C002              PUSH    AR2
0AF2 C001              PUSH    AR1
0AF4 7BFF              MOV     R3,#0FFH
0AF6 7A00        R     MOV     R2,#HIGH ?SC_542
0AF8 7900        R     MOV     R1,#LOW ?SC_542
0AFA 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0AFD 120000      E     LCALL   ?C?PSTXDATA
0B00 D001              POP     AR1
0B02 D002              POP     AR2
0B04 D003              POP     AR3
0B06 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 747
0B09 8021              SJMP    ?C0146
                                           ; SOURCE LINE # 748
0B0B         ?C0152:
                                           ; SOURCE LINE # 749
0B0B 900000      R     MOV     DPTR,#info_string
0B0E 120000      E     LCALL   ?C?PLDXDATA
0B11 C003              PUSH    AR3
0B13 C002              PUSH    AR2
0B15 C001              PUSH    AR1
0B17 7BFF              MOV     R3,#0FFH
0B19 7A00        R     MOV     R2,#HIGH ?SC_565
0B1B 7900        R     MOV     R1,#LOW ?SC_565
0B1D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B20 120000      E     LCALL   ?C?PSTXDATA
0B23 D001              POP     AR1
0B25 D002              POP     AR2
0B27 D003              POP     AR3
0B29 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 751
0B2C         ?C0146:
                                           ; SOURCE LINE # 753
0B2C 900000      E     MOV     DPTR,#c_mem+034H
0B2F E0                MOVX    A,@DPTR
0B30 FF                MOV     R7,A
0B31 EF                MOV     A,R7
0B32 120000      E     LCALL   ?C?CCASE
0B35 0000        R     DW      ?C0154
0B37 00                DB      00H
0B38 0000        R     DW      ?C0155
0B3A 01                DB      01H
0B3B 0000        R     DW      ?C0156
0B3D 02                DB      02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 80  

0B3E 0000        R     DW      ?C0157
0B40 03                DB      03H
0B41 0000              DW      00H
0B43 0000        R     DW      ?C0153
                                           ; SOURCE LINE # 754
0B45         ?C0154:
                                           ; SOURCE LINE # 755
0B45 900000      R     MOV     DPTR,#info_string
0B48 120000      E     LCALL   ?C?PLDXDATA
0B4B C003              PUSH    AR3
0B4D C002              PUSH    AR2
0B4F C001              PUSH    AR1
0B51 7BFF              MOV     R3,#0FFH
0B53 7A00        R     MOV     R2,#HIGH ?SC_592
0B55 7900        R     MOV     R1,#LOW ?SC_592
0B57 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B5A 120000      E     LCALL   ?C?PSTXDATA
0B5D D001              POP     AR1
0B5F D002              POP     AR2
0B61 D003              POP     AR3
0B63 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 756
0B66 8067              SJMP    ?C0153
                                           ; SOURCE LINE # 757
0B68         ?C0155:
                                           ; SOURCE LINE # 758
0B68 900000      R     MOV     DPTR,#info_string
0B6B 120000      E     LCALL   ?C?PLDXDATA
0B6E C003              PUSH    AR3
0B70 C002              PUSH    AR2
0B72 C001              PUSH    AR1
0B74 7BFF              MOV     R3,#0FFH
0B76 7A00        R     MOV     R2,#HIGH ?SC_617
0B78 7900        R     MOV     R1,#LOW ?SC_617
0B7A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0B7D 120000      E     LCALL   ?C?PSTXDATA
0B80 D001              POP     AR1
0B82 D002              POP     AR2
0B84 D003              POP     AR3
0B86 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 759
0B89 8044              SJMP    ?C0153
                                           ; SOURCE LINE # 760
0B8B         ?C0156:
                                           ; SOURCE LINE # 761
0B8B 900000      R     MOV     DPTR,#info_string
0B8E 120000      E     LCALL   ?C?PLDXDATA
0B91 C003              PUSH    AR3
0B93 C002              PUSH    AR2
0B95 C001              PUSH    AR1
0B97 7BFF              MOV     R3,#0FFH
0B99 7A00        R     MOV     R2,#HIGH ?SC_637
0B9B 7900        R     MOV     R1,#LOW ?SC_637
0B9D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0BA0 120000      E     LCALL   ?C?PSTXDATA
0BA3 D001              POP     AR1
0BA5 D002              POP     AR2
0BA7 D003              POP     AR3
0BA9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 762
0BAC 8021              SJMP    ?C0153
                                           ; SOURCE LINE # 763
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 81  

0BAE         ?C0157:
                                           ; SOURCE LINE # 764
0BAE 900000      R     MOV     DPTR,#info_string
0BB1 120000      E     LCALL   ?C?PLDXDATA
0BB4 C003              PUSH    AR3
0BB6 C002              PUSH    AR2
0BB8 C001              PUSH    AR1
0BBA 7BFF              MOV     R3,#0FFH
0BBC 7A00        R     MOV     R2,#HIGH ?SC_661
0BBE 7900        R     MOV     R1,#LOW ?SC_661
0BC0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0BC3 120000      E     LCALL   ?C?PSTXDATA
0BC6 D001              POP     AR1
0BC8 D002              POP     AR2
0BCA D003              POP     AR3
0BCC 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 768
0BCF         ?C0153:
                                           ; SOURCE LINE # 770
0BCF 900000      E     MOV     DPTR,#c_mem+079H
0BD2 E0                MOVX    A,@DPTR
0BD3 FF                MOV     R7,A
0BD4 EF                MOV     A,R7
0BD5 6023              JZ      ?C0159
                                           ; SOURCE LINE # 771
0BD7 900000      R     MOV     DPTR,#info_string
0BDA 120000      E     LCALL   ?C?PLDXDATA
0BDD C003              PUSH    AR3
0BDF C002              PUSH    AR2
0BE1 C001              PUSH    AR1
0BE3 7BFF              MOV     R3,#0FFH
0BE5 7A00        R     MOV     R2,#HIGH ?SC_698
0BE7 7900        R     MOV     R1,#LOW ?SC_698
0BE9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0BEC 120000      E     LCALL   ?C?PSTXDATA
0BEF D001              POP     AR1
0BF1 D002              POP     AR2
0BF3 D003              POP     AR3
0BF5 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 772
0BF8 8021              SJMP    ?C0160
0BFA         ?C0159:
                                           ; SOURCE LINE # 773
0BFA 900000      R     MOV     DPTR,#info_string
0BFD 120000      E     LCALL   ?C?PLDXDATA
0C00 C003              PUSH    AR3
0C02 C002              PUSH    AR2
0C04 C001              PUSH    AR1
0C06 7BFF              MOV     R3,#0FFH
0C08 7A00        R     MOV     R2,#HIGH ?SC_731
0C0A 7900        R     MOV     R1,#LOW ?SC_731
0C0C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C0F 120000      E     LCALL   ?C?PSTXDATA
0C12 D001              POP     AR1
0C14 D002              POP     AR2
0C16 D003              POP     AR3
0C18 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 774
0C1B         ?C0160:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 82  

                                           ; SOURCE LINE # 776
0C1B 7B01              MOV     R3,#01H
0C1D 7A00        R     MOV     R2,#HIGH str
0C1F 7900        R     MOV     R1,#LOW str
0C21 C003              PUSH    AR3
0C23 C002              PUSH    AR2
0C25 C001              PUSH    AR1
0C27 7BFF              MOV     R3,#0FFH
0C29 7A00        R     MOV     R2,#HIGH ?SC_763
0C2B 7900        R     MOV     R1,#LOW ?SC_763
0C2D 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0C30 120000      E     LCALL   ?C?PSTXDATA
0C33 900000      E     MOV     DPTR,#c_mem+07AH
0C36 E0                MOVX    A,@DPTR
0C37 FF                MOV     R7,A
0C38 EF                MOV     A,R7
0C39 33                RLC     A
0C3A 95E0              SUBB    A,ACC
0C3C FE                MOV     R6,A
0C3D 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0C40 EE                MOV     A,R6
0C41 F0                MOVX    @DPTR,A
0C42 A3                INC     DPTR
0C43 EF                MOV     A,R7
0C44 F0                MOVX    @DPTR,A
0C45 D001              POP     AR1
0C47 D002              POP     AR2
0C49 D003              POP     AR3
0C4B 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 777
0C4E 900000      R     MOV     DPTR,#info_string
0C51 120000      E     LCALL   ?C?PLDXDATA
0C54 C003              PUSH    AR3
0C56 C002              PUSH    AR2
0C58 C001              PUSH    AR1
0C5A 7B01              MOV     R3,#01H
0C5C 7A00        R     MOV     R2,#HIGH str
0C5E 7900        R     MOV     R1,#LOW str
0C60 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C63 120000      E     LCALL   ?C?PSTXDATA
0C66 D001              POP     AR1
0C68 D002              POP     AR2
0C6A D003              POP     AR3
0C6C 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 781
0C6F 900000      R     MOV     DPTR,#info_string
0C72 120000      E     LCALL   ?C?PLDXDATA
0C75 C003              PUSH    AR3
0C77 C002              PUSH    AR2
0C79 C001              PUSH    AR1
0C7B 7BFF              MOV     R3,#0FFH
0C7D 7A00        R     MOV     R2,#HIGH ?SC_788
0C7F 7900        R     MOV     R1,#LOW ?SC_788
0C81 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0C84 120000      E     LCALL   ?C?PSTXDATA
0C87 D001              POP     AR1
0C89 D002              POP     AR2
0C8B D003              POP     AR3
0C8D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 782
0C90 900000      R     MOV     DPTR,#i
0C93 E4                CLR     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 83  

0C94 F0                MOVX    @DPTR,A
0C95 A3                INC     DPTR
0C96 E4                CLR     A
0C97 F0                MOVX    @DPTR,A
0C98         ?C0161:
0C98 900000      R     MOV     DPTR,#i
0C9B E0                MOVX    A,@DPTR
0C9C FE                MOV     R6,A
0C9D A3                INC     DPTR
0C9E E0                MOVX    A,@DPTR
0C9F FF                MOV     R7,A
0CA0 C3                CLR     C
0CA1 EF                MOV     A,R7
0CA2 9403              SUBB    A,#03H
0CA4 EE                MOV     A,R6
0CA5 6480              XRL     A,#080H
0CA7 9480              SUBB    A,#080H
0CA9 4003              JC      $ + 5H
0CAB 020000      R     LJMP    ?C0162
                                           ; SOURCE LINE # 783
0CAE 7B01              MOV     R3,#01H
0CB0 7A00        R     MOV     R2,#HIGH str
0CB2 7900        R     MOV     R1,#LOW str
0CB4 C003              PUSH    AR3
0CB6 C002              PUSH    AR2
0CB8 C001              PUSH    AR1
0CBA 7BFF              MOV     R3,#0FFH
0CBC 7A00        R     MOV     R2,#HIGH ?SC_253
0CBE 7900        R     MOV     R1,#LOW ?SC_253
0CC0 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0CC3 120000      E     LCALL   ?C?PSTXDATA
0CC6 900000      R     MOV     DPTR,#i
0CC9 E0                MOVX    A,@DPTR
0CCA FE                MOV     R6,A
0CCB A3                INC     DPTR
0CCC E0                MOVX    A,@DPTR
0CCD FF                MOV     R7,A
0CCE EF                MOV     A,R7
0CCF 2401              ADD     A,#01H
0CD1 FF                MOV     R7,A
0CD2 EE                MOV     A,R6
0CD3 3400              ADDC    A,#00H
0CD5 FE                MOV     R6,A
0CD6 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0CD9 EE                MOV     A,R6
0CDA F0                MOVX    @DPTR,A
0CDB A3                INC     DPTR
0CDC EF                MOV     A,R7
0CDD F0                MOVX    @DPTR,A
0CDE 900000      R     MOV     DPTR,#i
0CE1 E0                MOVX    A,@DPTR
0CE2 FE                MOV     R6,A
0CE3 A3                INC     DPTR
0CE4 E0                MOVX    A,@DPTR
0CE5 FF                MOV     R7,A
0CE6 7400        E     MOV     A,#LOW c_mem+035H
0CE8 2F                ADD     A,R7
0CE9 F582              MOV     DPL,A
0CEB 7400        E     MOV     A,#HIGH c_mem+035H
0CED 3E                ADDC    A,R6
0CEE F583              MOV     DPH,A
0CF0 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 84  

0CF1 FF                MOV     R7,A
0CF2 7E00              MOV     R6,#00H
0CF4 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0CF7 EE                MOV     A,R6
0CF8 F0                MOVX    @DPTR,A
0CF9 A3                INC     DPTR
0CFA EF                MOV     A,R7
0CFB F0                MOVX    @DPTR,A
0CFC D001              POP     AR1
0CFE D002              POP     AR2
0D00 D003              POP     AR3
0D02 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 784
0D05 900000      R     MOV     DPTR,#info_string
0D08 120000      E     LCALL   ?C?PLDXDATA
0D0B C003              PUSH    AR3
0D0D C002              PUSH    AR2
0D0F C001              PUSH    AR1
0D11 7B01              MOV     R3,#01H
0D13 7A00        R     MOV     R2,#HIGH str
0D15 7900        R     MOV     R1,#LOW str
0D17 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D1A 120000      E     LCALL   ?C?PSTXDATA
0D1D D001              POP     AR1
0D1F D002              POP     AR2
0D21 D003              POP     AR3
0D23 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 785
0D26 900000      R     MOV     DPTR,#info_string
0D29 120000      E     LCALL   ?C?PLDXDATA
0D2C C003              PUSH    AR3
0D2E C002              PUSH    AR2
0D30 C001              PUSH    AR1
0D32 7BFF              MOV     R3,#0FFH
0D34 7A00        R     MOV     R2,#HIGH ?SC_1
0D36 7900        R     MOV     R1,#LOW ?SC_1
0D38 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D3B 120000      E     LCALL   ?C?PSTXDATA
0D3E D001              POP     AR1
0D40 D002              POP     AR2
0D42 D003              POP     AR3
0D44 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 786
0D47 900000      R     MOV     DPTR,#i
0D4A E4                CLR     A
0D4B 75F001            MOV     B,#01H
0D4E 120000      E     LCALL   ?C?IILDX
0D51 020000      R     LJMP    ?C0161
0D54         ?C0162:
                                           ; SOURCE LINE # 789
0D54 900000      R     MOV     DPTR,#info_string
0D57 120000      E     LCALL   ?C?PLDXDATA
0D5A C003              PUSH    AR3
0D5C C002              PUSH    AR2
0D5E C001              PUSH    AR1
0D60 7BFF              MOV     R3,#0FFH
0D62 7A00        R     MOV     R2,#HIGH ?SC_809
0D64 7900        R     MOV     R1,#LOW ?SC_809
0D66 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0D69 120000      E     LCALL   ?C?PSTXDATA
0D6C D001              POP     AR1
0D6E D002              POP     AR2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 85  

0D70 D003              POP     AR3
0D72 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 790
0D75 900000      R     MOV     DPTR,#i
0D78 E4                CLR     A
0D79 F0                MOVX    @DPTR,A
0D7A A3                INC     DPTR
0D7B E4                CLR     A
0D7C F0                MOVX    @DPTR,A
0D7D         ?C0164:
0D7D 900000      R     MOV     DPTR,#i
0D80 E0                MOVX    A,@DPTR
0D81 FE                MOV     R6,A
0D82 A3                INC     DPTR
0D83 E0                MOVX    A,@DPTR
0D84 FF                MOV     R7,A
0D85 C3                CLR     C
0D86 EF                MOV     A,R7
0D87 9403              SUBB    A,#03H
0D89 EE                MOV     A,R6
0D8A 6480              XRL     A,#080H
0D8C 9480              SUBB    A,#080H
0D8E 4003              JC      $ + 5H
0D90 020000      R     LJMP    ?C0165
                                           ; SOURCE LINE # 791
0D93 7B01              MOV     R3,#01H
0D95 7A00        R     MOV     R2,#HIGH str
0D97 7900        R     MOV     R1,#LOW str
0D99 C003              PUSH    AR3
0D9B C002              PUSH    AR2
0D9D C001              PUSH    AR1
0D9F 7BFF              MOV     R3,#0FFH
0DA1 7A00        R     MOV     R2,#HIGH ?SC_831
0DA3 7900        R     MOV     R1,#LOW ?SC_831
0DA5 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0DA8 120000      E     LCALL   ?C?PSTXDATA
0DAB 900000      R     MOV     DPTR,#i
0DAE E0                MOVX    A,@DPTR
0DAF FE                MOV     R6,A
0DB0 A3                INC     DPTR
0DB1 E0                MOVX    A,@DPTR
0DB2 FF                MOV     R7,A
0DB3 EF                MOV     A,R7
0DB4 2401              ADD     A,#01H
0DB6 FF                MOV     R7,A
0DB7 EE                MOV     A,R6
0DB8 3400              ADDC    A,#00H
0DBA FE                MOV     R6,A
0DBB 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0DBE EE                MOV     A,R6
0DBF F0                MOVX    @DPTR,A
0DC0 A3                INC     DPTR
0DC1 EF                MOV     A,R7
0DC2 F0                MOVX    @DPTR,A
0DC3 900000      R     MOV     DPTR,#i
0DC6 E0                MOVX    A,@DPTR
0DC7 FE                MOV     R6,A
0DC8 A3                INC     DPTR
0DC9 E0                MOVX    A,@DPTR
0DCA FF                MOV     R7,A
0DCB EF                MOV     A,R7
0DCC 7802              MOV     R0,#02H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 86  

0DCE         ?C0259:
0DCE C3                CLR     C
0DCF 33                RLC     A
0DD0 CE                XCH     A,R6
0DD1 33                RLC     A
0DD2 CE                XCH     A,R6
0DD3 D8F9              DJNZ    R0,?C0259
0DD5 FF                MOV     R7,A
0DD6 7400        E     MOV     A,#LOW c_mem+038H
0DD8 2F                ADD     A,R7
0DD9 F582              MOV     DPL,A
0DDB 7400        E     MOV     A,#HIGH c_mem+038H
0DDD 3E                ADDC    A,R6
0DDE F583              MOV     DPH,A
0DE0 120000      E     LCALL   ?C?LLDXDATA
0DE3 900000      R     MOV     DPTR,#i
0DE6 E0                MOVX    A,@DPTR
0DE7 FA                MOV     R2,A
0DE8 A3                INC     DPTR
0DE9 E0                MOVX    A,@DPTR
0DEA FB                MOV     R3,A
0DEB 7400        E     MOV     A,#LOW c_mem+035H
0DED 2B                ADD     A,R3
0DEE F582              MOV     DPL,A
0DF0 7400        E     MOV     A,#HIGH c_mem+035H
0DF2 3A                ADDC    A,R2
0DF3 F583              MOV     DPH,A
0DF5 E0                MOVX    A,@DPTR
0DF6 F9                MOV     R1,A
0DF7 A801              MOV     R0,AR1
0DF9 120000      E     LCALL   ?C?SLSHR
0DFC 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0DFF 120000      E     LCALL   ?C?LSTXDATA
0E02 D001              POP     AR1
0E04 D002              POP     AR2
0E06 D003              POP     AR3
0E08 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 792
0E0B 900000      R     MOV     DPTR,#info_string
0E0E 120000      E     LCALL   ?C?PLDXDATA
0E11 C003              PUSH    AR3
0E13 C002              PUSH    AR2
0E15 C001              PUSH    AR1
0E17 7B01              MOV     R3,#01H
0E19 7A00        R     MOV     R2,#HIGH str
0E1B 7900        R     MOV     R1,#LOW str
0E1D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0E20 120000      E     LCALL   ?C?PSTXDATA
0E23 D001              POP     AR1
0E25 D002              POP     AR2
0E27 D003              POP     AR3
0E29 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 793
0E2C 900000      R     MOV     DPTR,#info_string
0E2F 120000      E     LCALL   ?C?PLDXDATA
0E32 C003              PUSH    AR3
0E34 C002              PUSH    AR2
0E36 C001              PUSH    AR1
0E38 7BFF              MOV     R3,#0FFH
0E3A 7A00        R     MOV     R2,#HIGH ?SC_1
0E3C 7900        R     MOV     R1,#LOW ?SC_1
0E3E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 87  

0E41 120000      E     LCALL   ?C?PSTXDATA
0E44 D001              POP     AR1
0E46 D002              POP     AR2
0E48 D003              POP     AR3
0E4A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 794
0E4D 900000      R     MOV     DPTR,#i
0E50 E4                CLR     A
0E51 75F001            MOV     B,#01H
0E54 120000      E     LCALL   ?C?IILDX
0E57 020000      R     LJMP    ?C0164
0E5A         ?C0165:
                                           ; SOURCE LINE # 796
0E5A 900000      R     MOV     DPTR,#info_string
0E5D 120000      E     LCALL   ?C?PLDXDATA
0E60 C003              PUSH    AR3
0E62 C002              PUSH    AR2
0E64 C001              PUSH    AR1
0E66 7BFF              MOV     R3,#0FFH
0E68 7A00        R     MOV     R2,#HIGH ?SC_841
0E6A 7900        R     MOV     R1,#LOW ?SC_841
0E6C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0E6F 120000      E     LCALL   ?C?PSTXDATA
0E72 D001              POP     AR1
0E74 D002              POP     AR2
0E76 D003              POP     AR3
0E78 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 797
0E7B 900000      R     MOV     DPTR,#i
0E7E E4                CLR     A
0E7F F0                MOVX    @DPTR,A
0E80 A3                INC     DPTR
0E81 E4                CLR     A
0E82 F0                MOVX    @DPTR,A
0E83         ?C0167:
0E83 900000      R     MOV     DPTR,#i
0E86 E0                MOVX    A,@DPTR
0E87 FE                MOV     R6,A
0E88 A3                INC     DPTR
0E89 E0                MOVX    A,@DPTR
0E8A FF                MOV     R7,A
0E8B C3                CLR     C
0E8C EF                MOV     A,R7
0E8D 9403              SUBB    A,#03H
0E8F EE                MOV     A,R6
0E90 6480              XRL     A,#080H
0E92 9480              SUBB    A,#080H
0E94 4003              JC      $ + 5H
0E96 020000      R     LJMP    ?C0168
                                           ; SOURCE LINE # 798
0E99 7B01              MOV     R3,#01H
0E9B 7A00        R     MOV     R2,#HIGH str
0E9D 7900        R     MOV     R1,#LOW str
0E9F C003              PUSH    AR3
0EA1 C002              PUSH    AR2
0EA3 C001              PUSH    AR1
0EA5 7BFF              MOV     R3,#0FFH
0EA7 7A00        R     MOV     R2,#HIGH ?SC_867
0EA9 7900        R     MOV     R1,#LOW ?SC_867
0EAB 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0EAE 120000      E     LCALL   ?C?PSTXDATA
0EB1 900000      R     MOV     DPTR,#i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 88  

0EB4 E0                MOVX    A,@DPTR
0EB5 FE                MOV     R6,A
0EB6 A3                INC     DPTR
0EB7 E0                MOVX    A,@DPTR
0EB8 FF                MOV     R7,A
0EB9 EF                MOV     A,R7
0EBA 2401              ADD     A,#01H
0EBC FF                MOV     R7,A
0EBD EE                MOV     A,R6
0EBE 3400              ADDC    A,#00H
0EC0 FE                MOV     R6,A
0EC1 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0EC4 EE                MOV     A,R6
0EC5 F0                MOVX    @DPTR,A
0EC6 A3                INC     DPTR
0EC7 EF                MOV     A,R7
0EC8 F0                MOVX    @DPTR,A
0EC9 900000      R     MOV     DPTR,#i
0ECC E0                MOVX    A,@DPTR
0ECD FE                MOV     R6,A
0ECE A3                INC     DPTR
0ECF E0                MOVX    A,@DPTR
0ED0 FF                MOV     R7,A
0ED1 EF                MOV     A,R7
0ED2 7802              MOV     R0,#02H
0ED4         ?C0260:
0ED4 C3                CLR     C
0ED5 33                RLC     A
0ED6 CE                XCH     A,R6
0ED7 33                RLC     A
0ED8 CE                XCH     A,R6
0ED9 D8F9              DJNZ    R0,?C0260
0EDB FF                MOV     R7,A
0EDC 7400        E     MOV     A,#LOW c_mem+044H
0EDE 2F                ADD     A,R7
0EDF F582              MOV     DPL,A
0EE1 7400        E     MOV     A,#HIGH c_mem+044H
0EE3 3E                ADDC    A,R6
0EE4 F583              MOV     DPH,A
0EE6 120000      E     LCALL   ?C?LLDXDATA
0EE9 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0EEC 120000      E     LCALL   ?C?LSTXDATA
0EEF D001              POP     AR1
0EF1 D002              POP     AR2
0EF3 D003              POP     AR3
0EF5 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 799
0EF8 900000      R     MOV     DPTR,#info_string
0EFB 120000      E     LCALL   ?C?PLDXDATA
0EFE C003              PUSH    AR3
0F00 C002              PUSH    AR2
0F02 C001              PUSH    AR1
0F04 7B01              MOV     R3,#01H
0F06 7A00        R     MOV     R2,#HIGH str
0F08 7900        R     MOV     R1,#LOW str
0F0A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F0D 120000      E     LCALL   ?C?PSTXDATA
0F10 D001              POP     AR1
0F12 D002              POP     AR2
0F14 D003              POP     AR3
0F16 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 800
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 89  

0F19 900000      R     MOV     DPTR,#info_string
0F1C 120000      E     LCALL   ?C?PLDXDATA
0F1F C003              PUSH    AR3
0F21 C002              PUSH    AR2
0F23 C001              PUSH    AR1
0F25 7BFF              MOV     R3,#0FFH
0F27 7A00        R     MOV     R2,#HIGH ?SC_1
0F29 7900        R     MOV     R1,#LOW ?SC_1
0F2B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F2E 120000      E     LCALL   ?C?PSTXDATA
0F31 D001              POP     AR1
0F33 D002              POP     AR2
0F35 D003              POP     AR3
0F37 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 801
0F3A 900000      R     MOV     DPTR,#i
0F3D E4                CLR     A
0F3E 75F001            MOV     B,#01H
0F41 120000      E     LCALL   ?C?IILDX
0F44 020000      R     LJMP    ?C0167
0F47         ?C0168:
                                           ; SOURCE LINE # 803
0F47 7B01              MOV     R3,#01H
0F49 7A00        R     MOV     R2,#HIGH str
0F4B 7900        R     MOV     R1,#LOW str
0F4D C003              PUSH    AR3
0F4F C002              PUSH    AR2
0F51 C001              PUSH    AR1
0F53 7BFF              MOV     R3,#0FFH
0F55 7A00        R     MOV     R2,#HIGH ?SC_876
0F57 7900        R     MOV     R1,#LOW ?SC_876
0F59 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0F5C 120000      E     LCALL   ?C?PSTXDATA
0F5F 900000      E     MOV     DPTR,#g_mem+050H
0F62 E0                MOVX    A,@DPTR
0F63 FF                MOV     R7,A
0F64 7E00              MOV     R6,#00H
0F66 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0F69 EE                MOV     A,R6
0F6A F0                MOVX    @DPTR,A
0F6B A3                INC     DPTR
0F6C EF                MOV     A,R7
0F6D F0                MOVX    @DPTR,A
0F6E D001              POP     AR1
0F70 D002              POP     AR2
0F72 D003              POP     AR3
0F74 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 804
0F77 900000      R     MOV     DPTR,#info_string
0F7A 120000      E     LCALL   ?C?PLDXDATA
0F7D C003              PUSH    AR3
0F7F C002              PUSH    AR2
0F81 C001              PUSH    AR1
0F83 7B01              MOV     R3,#01H
0F85 7A00        R     MOV     R2,#HIGH str
0F87 7900        R     MOV     R1,#LOW str
0F89 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0F8C 120000      E     LCALL   ?C?PSTXDATA
0F8F D001              POP     AR1
0F91 D002              POP     AR2
0F93 D003              POP     AR3
0F95 120000      E     LCALL   _strcat
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 90  

                                           ; SOURCE LINE # 805
0F98 900000      R     MOV     DPTR,#info_string
0F9B 120000      E     LCALL   ?C?PLDXDATA
0F9E C003              PUSH    AR3
0FA0 C002              PUSH    AR2
0FA2 C001              PUSH    AR1
0FA4 7BFF              MOV     R3,#0FFH
0FA6 7A00        R     MOV     R2,#HIGH ?SC_1
0FA8 7900        R     MOV     R1,#LOW ?SC_1
0FAA 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0FAD 120000      E     LCALL   ?C?PSTXDATA
0FB0 D001              POP     AR1
0FB2 D002              POP     AR2
0FB4 D003              POP     AR3
0FB6 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 807
0FB9 900000      R     MOV     DPTR,#i
0FBC E4                CLR     A
0FBD F0                MOVX    @DPTR,A
0FBE A3                INC     DPTR
0FBF E4                CLR     A
0FC0 F0                MOVX    @DPTR,A
0FC1         ?C0170:
0FC1 900000      R     MOV     DPTR,#i
0FC4 E0                MOVX    A,@DPTR
0FC5 FE                MOV     R6,A
0FC6 A3                INC     DPTR
0FC7 E0                MOVX    A,@DPTR
0FC8 FF                MOV     R7,A
0FC9 C3                CLR     C
0FCA EF                MOV     A,R7
0FCB 9401              SUBB    A,#01H
0FCD EE                MOV     A,R6
0FCE 6480              XRL     A,#080H
0FD0 9480              SUBB    A,#080H
0FD2 4003              JC      $ + 5H
0FD4 020000      R     LJMP    ?C0171
                                           ; SOURCE LINE # 809
0FD7 7B01              MOV     R3,#01H
0FD9 7A00        R     MOV     R2,#HIGH str
0FDB 7900        R     MOV     R1,#LOW str
0FDD C003              PUSH    AR3
0FDF C002              PUSH    AR2
0FE1 C001              PUSH    AR1
0FE3 7BFF              MOV     R3,#0FFH
0FE5 7A00        R     MOV     R2,#HIGH ?SC_902
0FE7 7900        R     MOV     R1,#LOW ?SC_902
0FE9 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0FEC 120000      E     LCALL   ?C?PSTXDATA
0FEF 900000      R     MOV     DPTR,#i
0FF2 E0                MOVX    A,@DPTR
0FF3 FE                MOV     R6,A
0FF4 A3                INC     DPTR
0FF5 E0                MOVX    A,@DPTR
0FF6 FF                MOV     R7,A
0FF7 EF                MOV     A,R7
0FF8 2401              ADD     A,#01H
0FFA FF                MOV     R7,A
0FFB EE                MOV     A,R6
0FFC 3400              ADDC    A,#00H
0FFE FE                MOV     R6,A
0FFF 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 91  

1002 EE                MOV     A,R6
1003 F0                MOVX    @DPTR,A
1004 A3                INC     DPTR
1005 EF                MOV     A,R7
1006 F0                MOVX    @DPTR,A
1007 900000      R     MOV     DPTR,#i
100A E0                MOVX    A,@DPTR
100B FE                MOV     R6,A
100C A3                INC     DPTR
100D E0                MOVX    A,@DPTR
100E FF                MOV     R7,A
100F EF                MOV     A,R7
1010 7802              MOV     R0,#02H
1012         ?C0261:
1012 C3                CLR     C
1013 33                RLC     A
1014 CE                XCH     A,R6
1015 33                RLC     A
1016 CE                XCH     A,R6
1017 D8F9              DJNZ    R0,?C0261
1019 FF                MOV     R7,A
101A 7400        E     MOV     A,#LOW g_mem+051H
101C 2F                ADD     A,R7
101D F582              MOV     DPL,A
101F 7400        E     MOV     A,#HIGH g_mem+051H
1021 3E                ADDC    A,R6
1022 F583              MOV     DPH,A
1024 120000      E     LCALL   ?C?LLDXDATA
1027 900000      R     MOV     DPTR,#i
102A E0                MOVX    A,@DPTR
102B FA                MOV     R2,A
102C A3                INC     DPTR
102D E0                MOVX    A,@DPTR
102E FB                MOV     R3,A
102F 7400        E     MOV     A,#LOW g_mem+035H
1031 2B                ADD     A,R3
1032 F582              MOV     DPL,A
1034 7400        E     MOV     A,#HIGH g_mem+035H
1036 3A                ADDC    A,R2
1037 F583              MOV     DPH,A
1039 E0                MOVX    A,@DPTR
103A F9                MOV     R1,A
103B A801              MOV     R0,AR1
103D 120000      E     LCALL   ?C?SLSHR
1040 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
1043 120000      E     LCALL   ?C?LSTXDATA
1046 D001              POP     AR1
1048 D002              POP     AR2
104A D003              POP     AR3
104C 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 810
104F 900000      R     MOV     DPTR,#info_string
1052 120000      E     LCALL   ?C?PLDXDATA
1055 C003              PUSH    AR3
1057 C002              PUSH    AR2
1059 C001              PUSH    AR1
105B 7B01              MOV     R3,#01H
105D 7A00        R     MOV     R2,#HIGH str
105F 7900        R     MOV     R1,#LOW str
1061 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1064 120000      E     LCALL   ?C?PSTXDATA
1067 D001              POP     AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 92  

1069 D002              POP     AR2
106B D003              POP     AR3
106D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 813
1070 7B01              MOV     R3,#01H
1072 7A00        R     MOV     R2,#HIGH str
1074 7900        R     MOV     R1,#LOW str
1076 C003              PUSH    AR3
1078 C002              PUSH    AR2
107A C001              PUSH    AR1
107C 7BFF              MOV     R3,#0FFH
107E 7A00        R     MOV     R2,#HIGH ?SC_940
1080 7900        R     MOV     R1,#LOW ?SC_940
1082 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1085 120000      E     LCALL   ?C?PSTXDATA
1088 900000      R     MOV     DPTR,#i
108B E0                MOVX    A,@DPTR
108C FE                MOV     R6,A
108D A3                INC     DPTR
108E E0                MOVX    A,@DPTR
108F FF                MOV     R7,A
1090 EF                MOV     A,R7
1091 7802              MOV     R0,#02H
1093         ?C0262:
1093 C3                CLR     C
1094 33                RLC     A
1095 CE                XCH     A,R6
1096 33                RLC     A
1097 CE                XCH     A,R6
1098 D8F9              DJNZ    R0,?C0262
109A FF                MOV     R7,A
109B 7400        E     MOV     A,#LOW g_mem+059H
109D 2F                ADD     A,R7
109E F582              MOV     DPL,A
10A0 7400        E     MOV     A,#HIGH g_mem+059H
10A2 3E                ADDC    A,R6
10A3 F583              MOV     DPH,A
10A5 120000      E     LCALL   ?C?LLDXDATA
10A8 900000      R     MOV     DPTR,#i
10AB E0                MOVX    A,@DPTR
10AC FA                MOV     R2,A
10AD A3                INC     DPTR
10AE E0                MOVX    A,@DPTR
10AF FB                MOV     R3,A
10B0 7400        E     MOV     A,#LOW g_mem+035H
10B2 2B                ADD     A,R3
10B3 F582              MOV     DPL,A
10B5 7400        E     MOV     A,#HIGH g_mem+035H
10B7 3A                ADDC    A,R2
10B8 F583              MOV     DPH,A
10BA E0                MOVX    A,@DPTR
10BB F9                MOV     R1,A
10BC A801              MOV     R0,AR1
10BE 120000      E     LCALL   ?C?SLSHR
10C1 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
10C4 120000      E     LCALL   ?C?LSTXDATA
10C7 D001              POP     AR1
10C9 D002              POP     AR2
10CB D003              POP     AR3
10CD 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 814
10D0 900000      R     MOV     DPTR,#info_string
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 93  

10D3 120000      E     LCALL   ?C?PLDXDATA
10D6 C003              PUSH    AR3
10D8 C002              PUSH    AR2
10DA C001              PUSH    AR1
10DC 7B01              MOV     R3,#01H
10DE 7A00        R     MOV     R2,#HIGH str
10E0 7900        R     MOV     R1,#LOW str
10E2 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
10E5 120000      E     LCALL   ?C?PSTXDATA
10E8 D001              POP     AR1
10EA D002              POP     AR2
10EC D003              POP     AR3
10EE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 815
10F1 900000      R     MOV     DPTR,#i
10F4 E4                CLR     A
10F5 75F001            MOV     B,#01H
10F8 120000      E     LCALL   ?C?IILDX
10FB 020000      R     LJMP    ?C0170
10FE         ?C0171:
                                           ; SOURCE LINE # 817
10FE 7B01              MOV     R3,#01H
1100 7A00        R     MOV     R2,#HIGH str
1102 7900        R     MOV     R1,#LOW str
1104 C003              PUSH    AR3
1106 C002              PUSH    AR2
1108 C001              PUSH    AR1
110A 7BFF              MOV     R3,#0FFH
110C 7A00        R     MOV     R2,#HIGH ?SC_953
110E 7900        R     MOV     R1,#LOW ?SC_953
1110 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1113 120000      E     LCALL   ?C?PSTXDATA
1116 900000      E     MOV     DPTR,#g_mem+061H
1119 120000      E     LCALL   ?C?LLDXDATA
111C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
111F EE                MOV     A,R6
1120 F0                MOVX    @DPTR,A
1121 A3                INC     DPTR
1122 EF                MOV     A,R7
1123 F0                MOVX    @DPTR,A
1124 900000      E     MOV     DPTR,#g_mem+065H
1127 120000      E     LCALL   ?C?LLDXDATA
112A 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
112D EE                MOV     A,R6
112E F0                MOVX    @DPTR,A
112F A3                INC     DPTR
1130 EF                MOV     A,R7
1131 F0                MOVX    @DPTR,A
1132 D001              POP     AR1
1134 D002              POP     AR2
1136 D003              POP     AR3
1138 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 818
113B 900000      R     MOV     DPTR,#info_string
113E 120000      E     LCALL   ?C?PLDXDATA
1141 C003              PUSH    AR3
1143 C002              PUSH    AR2
1145 C001              PUSH    AR1
1147 7B01              MOV     R3,#01H
1149 7A00        R     MOV     R2,#HIGH str
114B 7900        R     MOV     R1,#LOW str
114D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 94  

1150 120000      E     LCALL   ?C?PSTXDATA
1153 D001              POP     AR1
1155 D002              POP     AR2
1157 D003              POP     AR3
1159 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 819
115C 900000      R     MOV     DPTR,#info_string
115F 120000      E     LCALL   ?C?PLDXDATA
1162 C003              PUSH    AR3
1164 C002              PUSH    AR2
1166 C001              PUSH    AR1
1168 7BFF              MOV     R3,#0FFH
116A 7A00        R     MOV     R2,#HIGH ?SC_1
116C 7900        R     MOV     R1,#LOW ?SC_1
116E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1171 120000      E     LCALL   ?C?PSTXDATA
1174 D001              POP     AR1
1176 D002              POP     AR2
1178 D003              POP     AR3
117A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 821
117D 7B01              MOV     R3,#01H
117F 7A00        R     MOV     R2,#HIGH str
1181 7900        R     MOV     R1,#LOW str
1183 C003              PUSH    AR3
1185 C002              PUSH    AR2
1187 C001              PUSH    AR1
1189 7BFF              MOV     R3,#0FFH
118B 7A00        R     MOV     R2,#HIGH ?SC_981
118D 7900        R     MOV     R1,#LOW ?SC_981
118F 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1192 120000      E     LCALL   ?C?PSTXDATA
1195 900000      E     MOV     DPTR,#g_mem+069H
1198 E0                MOVX    A,@DPTR
1199 FE                MOV     R6,A
119A A3                INC     DPTR
119B E0                MOVX    A,@DPTR
119C FF                MOV     R7,A
119D 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
11A0 EE                MOV     A,R6
11A1 F0                MOVX    @DPTR,A
11A2 A3                INC     DPTR
11A3 EF                MOV     A,R7
11A4 F0                MOVX    @DPTR,A
11A5 D001              POP     AR1
11A7 D002              POP     AR2
11A9 D003              POP     AR3
11AB 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 822
11AE 900000      R     MOV     DPTR,#info_string
11B1 120000      E     LCALL   ?C?PLDXDATA
11B4 C003              PUSH    AR3
11B6 C002              PUSH    AR2
11B8 C001              PUSH    AR1
11BA 7B01              MOV     R3,#01H
11BC 7A00        R     MOV     R2,#HIGH str
11BE 7900        R     MOV     R1,#LOW str
11C0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
11C3 120000      E     LCALL   ?C?PSTXDATA
11C6 D001              POP     AR1
11C8 D002              POP     AR2
11CA D003              POP     AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 95  

11CC 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 823
11CF 900000      R     MOV     DPTR,#info_string
11D2 120000      E     LCALL   ?C?PLDXDATA
11D5 C003              PUSH    AR3
11D7 C002              PUSH    AR2
11D9 C001              PUSH    AR1
11DB 7BFF              MOV     R3,#0FFH
11DD 7A00        R     MOV     R2,#HIGH ?SC_1
11DF 7900        R     MOV     R1,#LOW ?SC_1
11E1 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
11E4 120000      E     LCALL   ?C?PSTXDATA
11E7 D001              POP     AR1
11E9 D002              POP     AR2
11EB D003              POP     AR3
11ED 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 825
11F0 7B01              MOV     R3,#01H
11F2 7A00        R     MOV     R2,#HIGH str
11F4 7900        R     MOV     R1,#LOW str
11F6 C003              PUSH    AR3
11F8 C002              PUSH    AR2
11FA C001              PUSH    AR1
11FC 7BFF              MOV     R3,#0FFH
11FE 7A00        R     MOV     R2,#HIGH ?SC_999
1200 7900        R     MOV     R1,#LOW ?SC_999
1202 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1205 120000      E     LCALL   ?C?PSTXDATA
1208 900000      E     MOV     DPTR,#g_mem+06BH
120B E0                MOVX    A,@DPTR
120C FE                MOV     R6,A
120D A3                INC     DPTR
120E E0                MOVX    A,@DPTR
120F FF                MOV     R7,A
1210 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
1213 EE                MOV     A,R6
1214 F0                MOVX    @DPTR,A
1215 A3                INC     DPTR
1216 EF                MOV     A,R7
1217 F0                MOVX    @DPTR,A
1218 900000      E     MOV     DPTR,#g_mem+06DH
121B E0                MOVX    A,@DPTR
121C FE                MOV     R6,A
121D A3                INC     DPTR
121E E0                MOVX    A,@DPTR
121F FF                MOV     R7,A
1220 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
1223 EE                MOV     A,R6
1224 F0                MOVX    @DPTR,A
1225 A3                INC     DPTR
1226 EF                MOV     A,R7
1227 F0                MOVX    @DPTR,A
1228 D001              POP     AR1
122A D002              POP     AR2
122C D003              POP     AR3
122E 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 826
1231 900000      R     MOV     DPTR,#info_string
1234 120000      E     LCALL   ?C?PLDXDATA
1237 C003              PUSH    AR3
1239 C002              PUSH    AR2
123B C001              PUSH    AR1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 96  

123D 7B01              MOV     R3,#01H
123F 7A00        R     MOV     R2,#HIGH str
1241 7900        R     MOV     R1,#LOW str
1243 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1246 120000      E     LCALL   ?C?PSTXDATA
1249 D001              POP     AR1
124B D002              POP     AR2
124D D003              POP     AR3
124F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 827
1252 900000      R     MOV     DPTR,#info_string
1255 120000      E     LCALL   ?C?PLDXDATA
1258 C003              PUSH    AR3
125A C002              PUSH    AR2
125C C001              PUSH    AR1
125E 7BFF              MOV     R3,#0FFH
1260 7A00        R     MOV     R2,#HIGH ?SC_1
1262 7900        R     MOV     R1,#LOW ?SC_1
1264 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
1267 120000      E     LCALL   ?C?PSTXDATA
126A D001              POP     AR1
126C D002              POP     AR2
126E D003              POP     AR3
1270 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 829
1273 7B01              MOV     R3,#01H
1275 7A00        R     MOV     R2,#HIGH str
1277 7900        R     MOV     R1,#LOW str
1279 C003              PUSH    AR3
127B C002              PUSH    AR2
127D C001              PUSH    AR1
127F 7BFF              MOV     R3,#0FFH
1281 7A00        R     MOV     R2,#HIGH ?SC_1033
1283 7900        R     MOV     R1,#LOW ?SC_1033
1285 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
1288 120000      E     LCALL   ?C?PSTXDATA
128B 900000      E     MOV     DPTR,#g_mem+070H
128E 120000      E     LCALL   ?C?LLDXDATA
1291 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
1294 120000      E     LCALL   ?C?LSTXDATA
1297 900000      E     MOV     DPTR,#g_mem+074H
129A 120000      E     LCALL   ?C?LLDXDATA
129D 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
12A0 120000      E     LCALL   ?C?LSTXDATA
12A3 D001              POP     AR1
12A5 D002              POP     AR2
12A7 D003              POP     AR3
12A9 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 830
12AC 900000      R     MOV     DPTR,#info_string
12AF 120000      E     LCALL   ?C?PLDXDATA
12B2 C003              PUSH    AR3
12B4 C002              PUSH    AR2
12B6 C001              PUSH    AR1
12B8 7B01              MOV     R3,#01H
12BA 7A00        R     MOV     R2,#HIGH str
12BC 7900        R     MOV     R1,#LOW str
12BE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
12C1 120000      E     LCALL   ?C?PSTXDATA
12C4 D001              POP     AR1
12C6 D002              POP     AR2
12C8 D003              POP     AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 97  

12CA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 831
12CD 900000      R     MOV     DPTR,#info_string
12D0 120000      E     LCALL   ?C?PLDXDATA
12D3 C003              PUSH    AR3
12D5 C002              PUSH    AR2
12D7 C001              PUSH    AR1
12D9 7BFF              MOV     R3,#0FFH
12DB 7A00        R     MOV     R2,#HIGH ?SC_1
12DD 7900        R     MOV     R1,#LOW ?SC_1
12DF 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
12E2 120000      E     LCALL   ?C?PSTXDATA
12E5 D001              POP     AR1
12E7 D002              POP     AR2
12E9 D003              POP     AR3
12EB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 833
12EE 900000      E     MOV     DPTR,#g_mem+06FH
12F1 E0                MOVX    A,@DPTR
12F2 FF                MOV     R7,A
12F3 EF                MOV     A,R7
12F4 6023              JZ      ?C0173
                                           ; SOURCE LINE # 834
12F6 900000      R     MOV     DPTR,#info_string
12F9 120000      E     LCALL   ?C?PLDXDATA
12FC C003              PUSH    AR3
12FE C002              PUSH    AR2
1300 C001              PUSH    AR1
1302 7BFF              MOV     R3,#0FFH
1304 7A00        R     MOV     R2,#HIGH ?SC_1069
1306 7900        R     MOV     R1,#LOW ?SC_1069
1308 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
130B 120000      E     LCALL   ?C?PSTXDATA
130E D001              POP     AR1
1310 D002              POP     AR2
1312 D003              POP     AR3
1314 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 835
1317 8021              SJMP    ?C0174
1319         ?C0173:
                                           ; SOURCE LINE # 836
1319 900000      R     MOV     DPTR,#info_string
131C 120000      E     LCALL   ?C?PLDXDATA
131F C003              PUSH    AR3
1321 C002              PUSH    AR2
1323 C001              PUSH    AR1
1325 7BFF              MOV     R3,#0FFH
1327 7A00        R     MOV     R2,#HIGH ?SC_1096
1329 7900        R     MOV     R1,#LOW ?SC_1096
132B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
132E 120000      E     LCALL   ?C?PSTXDATA
1331 D001              POP     AR1
1333 D002              POP     AR2
1335 D003              POP     AR3
1337 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 837
133A         ?C0174:
                                           ; SOURCE LINE # 839
133A 7B01              MOV     R3,#01H
133C 7A00        R     MOV     R2,#HIGH str
133E 7900        R     MOV     R1,#LOW str
1340 C003              PUSH    AR3
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 98  

1342 C002              PUSH    AR2
1344 C001              PUSH    AR1
1346 7BFF              MOV     R3,#0FFH
1348 7A00        R     MOV     R2,#HIGH ?SC_1122
134A 7900        R     MOV     R1,#LOW ?SC_1122
134C 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
134F 120000      E     LCALL   ?C?PSTXDATA
1352 900000      E     MOV     DPTR,#g_mem+078H
1355 E0                MOVX    A,@DPTR
1356 FF                MOV     R7,A
1357 7E00              MOV     R6,#00H
1359 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
135C EE                MOV     A,R6
135D F0                MOVX    @DPTR,A
135E A3                INC     DPTR
135F EF                MOV     A,R7
1360 F0                MOVX    @DPTR,A
1361 D001              POP     AR1
1363 D002              POP     AR2
1365 D003              POP     AR3
1367 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 840
136A 900000      R     MOV     DPTR,#info_string
136D 120000      E     LCALL   ?C?PLDXDATA
1370 C003              PUSH    AR3
1372 C002              PUSH    AR2
1374 C001              PUSH    AR1
1376 7B01              MOV     R3,#01H
1378 7A00        R     MOV     R2,#HIGH str
137A 7900        R     MOV     R1,#LOW str
137C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
137F 120000      E     LCALL   ?C?PSTXDATA
1382 D001              POP     AR1
1384 D002              POP     AR2
1386 D003              POP     AR3
1388 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 841
138B 900000      R     MOV     DPTR,#info_string
138E 120000      E     LCALL   ?C?PLDXDATA
1391 C003              PUSH    AR3
1393 C002              PUSH    AR2
1395 C001              PUSH    AR1
1397 7BFF              MOV     R3,#0FFH
1399 7A00        R     MOV     R2,#HIGH ?SC_1
139B 7900        R     MOV     R1,#LOW ?SC_1
139D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
13A0 120000      E     LCALL   ?C?PSTXDATA
13A3 D001              POP     AR1
13A5 D002              POP     AR2
13A7 D003              POP     AR3
13A9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 843
13AC 7B01              MOV     R3,#01H
13AE 7A00        R     MOV     R2,#HIGH str
13B0 7900        R     MOV     R1,#LOW str
13B2 C003              PUSH    AR3
13B4 C002              PUSH    AR2
13B6 C001              PUSH    AR1
13B8 7BFF              MOV     R3,#0FFH
13BA 7A00        R     MOV     R2,#HIGH ?SC_1140
13BC 7900        R     MOV     R1,#LOW ?SC_1140
13BE 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 99  

13C1 120000      E     LCALL   ?C?PSTXDATA
13C4 900000      E     MOV     DPTR,#timer_value
13C7 120000      E     LCALL   ?C?LLDXDATA0
13CA C3                CLR     C
13CB 7441              MOV     A,#041H
13CD 9B                SUBB    A,R3
13CE FF                MOV     R7,A
13CF 744B              MOV     A,#04BH
13D1 9A                SUBB    A,R2
13D2 FE                MOV     R6,A
13D3 744C              MOV     A,#04CH
13D5 99                SUBB    A,R1
13D6 FD                MOV     R5,A
13D7 E4                CLR     A
13D8 98                SUBB    A,R0
13D9 FC                MOV     R4,A
13DA 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
13DD 120000      E     LCALL   ?C?LSTXDATA
13E0 D001              POP     AR1
13E2 D002              POP     AR2
13E4 D003              POP     AR3
13E6 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 844
13E9 900000      R     MOV     DPTR,#info_string
13EC 120000      E     LCALL   ?C?PLDXDATA
13EF C003              PUSH    AR3
13F1 C002              PUSH    AR2
13F3 C001              PUSH    AR1
13F5 7B01              MOV     R3,#01H
13F7 7A00        R     MOV     R2,#HIGH str
13F9 7900        R     MOV     R1,#LOW str
13FB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
13FE 120000      E     LCALL   ?C?PSTXDATA
1401 D001              POP     AR1
1403 D002              POP     AR2
1405 D003              POP     AR3
1407 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 845
140A 900000      R     MOV     DPTR,#info_string
140D 120000      E     LCALL   ?C?PLDXDATA
1410 C003              PUSH    AR3
1412 C002              PUSH    AR2
1414 C001              PUSH    AR1
1416 7BFF              MOV     R3,#0FFH
1418 7A00        R     MOV     R2,#HIGH ?SC_1
141A 7900        R     MOV     R1,#LOW ?SC_1
141C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
141F 120000      E     LCALL   ?C?PSTXDATA
1422 D001              POP     AR1
1424 D002              POP     AR2
1426 D003              POP     AR3
1428 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 846
                                           ; SOURCE LINE # 847
142B         ?C0175:
142B 22                RET     
             ; FUNCTION _infoPrepare (END)

             ; FUNCTION _commWrite (BEGIN)
                                           ; SOURCE LINE # 853
0000 900000      R     MOV     DPTR,#packet_data
0003 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 100 

0006 900000      R     MOV     DPTR,#packet_lenght
0009 EC                MOV     A,R4
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C ED                MOV     A,R5
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 854
                                           ; SOURCE LINE # 858
000E 7F3A              MOV     R7,#03AH
0010 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 859
0013 7F3A              MOV     R7,#03AH
0015 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 861
0018 900000      E     MOV     DPTR,#g_mem+01H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 863
0020 900000      R     MOV     DPTR,#packet_lenght
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 865
002B 900000      R     MOV     DPTR,#i
002E E4                CLR     A
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 E4                CLR     A
0032 F0                MOVX    @DPTR,A
0033         ?C0176:
0033 900000      R     MOV     DPTR,#packet_lenght
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 900000      R     MOV     DPTR,#i
003E E0                MOVX    A,@DPTR
003F FC                MOV     R4,A
0040 A3                INC     DPTR
0041 E0                MOVX    A,@DPTR
0042 FD                MOV     R5,A
0043 C3                CLR     C
0044 ED                MOV     A,R5
0045 9F                SUBB    A,R7
0046 EC                MOV     A,R4
0047 9E                SUBB    A,R6
0048 5027              JNC     ?C0177
                                           ; SOURCE LINE # 866
004A 900000      R     MOV     DPTR,#packet_data
004D 120000      E     LCALL   ?C?PLDXDATA
0050 900000      R     MOV     DPTR,#i
0053 E0                MOVX    A,@DPTR
0054 FE                MOV     R6,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 E9                MOV     A,R1
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 101 

0059 2F                ADD     A,R7
005A F9                MOV     R1,A
005B EA                MOV     A,R2
005C 3E                ADDC    A,R6
005D FA                MOV     R2,A
005E 120000      E     LCALL   ?C?CLDPTR
0061 FF                MOV     R7,A
0062 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 867
0065 900000      R     MOV     DPTR,#i
0068 E4                CLR     A
0069 75F001            MOV     B,#01H
006C 120000      E     LCALL   ?C?IILDX
006F 80C2              SJMP    ?C0176
0071         ?C0177:
                                           ; SOURCE LINE # 869
0071 900000      R     MOV     DPTR,#i
0074 E4                CLR     A
0075 F0                MOVX    @DPTR,A
0076 A3                INC     DPTR
0077 E4                CLR     A
0078 F0                MOVX    @DPTR,A
0079         ?C0179:
                                           ; SOURCE LINE # 871
0079 120000      E     LCALL   UART_RS485_ReadTxStatus
007C EF                MOV     A,R7
007D 20E016            JB      ACC.0,?C0180
0080 900000      R     MOV     DPTR,#i
0083 E4                CLR     A
0084 75F001            MOV     B,#01H
0087 120000      E     LCALL   ?C?ILDIX
008A AFF0              MOV     R7,B
008C FE                MOV     R6,A
008D D3                SETB    C
008E EF                MOV     A,R7
008F 94E8              SUBB    A,#0E8H
0091 EE                MOV     A,R6
0092 9403              SUBB    A,#03H
0094 40E3              JC      ?C0179
0096         ?C0180:
                                           ; SOURCE LINE # 873
0096 7F01              MOV     R7,#01H
0098 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 874
009B 7F00              MOV     R7,#00H
009D 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 875
00A0 22                RET     
             ; FUNCTION _commWrite (END)

             ; FUNCTION _LCRChecksum (BEGIN)
                                           ; SOURCE LINE # 884
0000 900000      R     MOV     DPTR,#data_array
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#data_length
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 887
000B 750000      R     MOV     checksum,#00H
                                           ; SOURCE LINE # 889
000E 750000      R     MOV     i,#00H
0011         ?C0182:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 102 

0011 900000      R     MOV     DPTR,#data_length
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 E500        R     MOV     A,i
0018 C3                CLR     C
0019 9F                SUBB    A,R7
001A 5019              JNC     ?C0183
                                           ; SOURCE LINE # 890
001C 900000      R     MOV     DPTR,#data_array
001F 120000      E     LCALL   ?C?PLDXDATA
0022 AF00        R     MOV     R7,i
0024 E9                MOV     A,R1
0025 2F                ADD     A,R7
0026 F9                MOV     R1,A
0027 E4                CLR     A
0028 3A                ADDC    A,R2
0029 FA                MOV     R2,A
002A 120000      E     LCALL   ?C?CLDPTR
002D FF                MOV     R7,A
002E EF                MOV     A,R7
002F 6200        R     XRL     checksum,A
0031 0500        R     INC     i
0033 80DC              SJMP    ?C0182
0035         ?C0183:
                                           ; SOURCE LINE # 892
0035 AF00        R     MOV     R7,checksum
                                           ; SOURCE LINE # 893
0037         ?C0185:
0037 22                RET     
             ; FUNCTION _LCRChecksum (END)

             ; FUNCTION _sendAcknowledgment (BEGIN)
                                           ; SOURCE LINE # 900
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 901
0005 900000      R     MOV     DPTR,#packet_lenght
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7402              MOV     A,#02H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 904
000E 900000      R     MOV     DPTR,#value
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900000      R     MOV     DPTR,#packet_data
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 905
0018 900000      R     MOV     DPTR,#value
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D 900000      R     MOV     DPTR,#packet_data+01H
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 907
0022 7B01              MOV     R3,#01H
0024 7A00        R     MOV     R2,#HIGH packet_data
0026 7900        R     MOV     R1,#LOW packet_data
0028 900000      R     MOV     DPTR,#packet_lenght
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 103 

002B E0                MOVX    A,@DPTR
002C FC                MOV     R4,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F FD                MOV     R5,A
0030 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 908
0033 22                RET     
             ; FUNCTION _sendAcknowledgment (END)

             ; FUNCTION _memStore (BEGIN)
                                           ; SOURCE LINE # 919
0000 900000      R     MOV     DPTR,#displacement
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 920
                                           ; SOURCE LINE # 924
0008 900000      R     MOV     DPTR,#ret_val
000B 7401              MOV     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 927
000E 120000      E     LCALL   ISR_RS485_RX_Disable
                                           ; SOURCE LINE # 930
0011 7F00              MOV     R7,#00H
0013 120000      E     LCALL   _PWM_MOTORS_WriteCompare1
                                           ; SOURCE LINE # 931
0016 7F00              MOV     R7,#00H
0018 120000      E     LCALL   _PWM_MOTORS_WriteCompare2
                                           ; SOURCE LINE # 934
001B 120000      E     LCALL   CySetTemp
                                           ; SOURCE LINE # 936
001E 7B01              MOV     R3,#01H
0020 7A00        E     MOV     R2,#HIGH g_mem
0022 7900        E     MOV     R1,#LOW g_mem
0024 C003              PUSH    AR3
0026 C002              PUSH    AR2
0028 C001              PUSH    AR1
002A 7B01              MOV     R3,#01H
002C 7A00        E     MOV     R2,#HIGH c_mem
002E 7900        E     MOV     R1,#LOW c_mem
0030 A801              MOV     R0,AR1
0032 AC02              MOV     R4,AR2
0034 AD03              MOV     R5,AR3
0036 D001              POP     AR1
0038 D002              POP     AR2
003A D003              POP     AR3
003C 7E00              MOV     R6,#00H
003E 7F7E              MOV     R7,#07EH
0040 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 938
0043 900000      R     MOV     DPTR,#pages
0046 E4                CLR     A
0047 F0                MOVX    @DPTR,A
0048 A3                INC     DPTR
0049 7408              MOV     A,#08H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 940
004C 900000      R     MOV     DPTR,#i
004F E4                CLR     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 104 

0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 E4                CLR     A
0053 F0                MOVX    @DPTR,A
0054         ?C0187:
0054 900000      R     MOV     DPTR,#pages
0057 E0                MOVX    A,@DPTR
0058 FE                MOV     R6,A
0059 A3                INC     DPTR
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C 900000      R     MOV     DPTR,#i
005F E0                MOVX    A,@DPTR
0060 FC                MOV     R4,A
0061 A3                INC     DPTR
0062 E0                MOVX    A,@DPTR
0063 FD                MOV     R5,A
0064 C3                CLR     C
0065 ED                MOV     A,R5
0066 9F                SUBB    A,R7
0067 EE                MOV     A,R6
0068 6480              XRL     A,#080H
006A F8                MOV     R0,A
006B EC                MOV     A,R4
006C 6480              XRL     A,#080H
006E 98                SUBB    A,R0
006F 505A              JNC     ?C0188
                                           ; SOURCE LINE # 941
0071 900000      R     MOV     DPTR,#i
0074 E0                MOVX    A,@DPTR
0075 FE                MOV     R6,A
0076 A3                INC     DPTR
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 EF                MOV     A,R7
007A C4                SWAP    A
007B F8                MOV     R0,A
007C 540F              ANL     A,#0FH
007E C8                XCH     A,R0
007F 68                XRL     A,R0
0080 FF                MOV     R7,A
0081 EE                MOV     A,R6
0082 C4                SWAP    A
0083 54F0              ANL     A,#0F0H
0085 48                ORL     A,R0
0086 FE                MOV     R6,A
0087 7B01              MOV     R3,#01H
0089 7A00        E     MOV     R2,#HIGH g_mem
008B 7900        E     MOV     R1,#LOW g_mem
008D E9                MOV     A,R1
008E 2F                ADD     A,R7
008F F9                MOV     R1,A
0090 EA                MOV     A,R2
0091 3E                ADDC    A,R6
0092 FA                MOV     R2,A
0093 900000      R     MOV     DPTR,#displacement
0096 E0                MOVX    A,@DPTR
0097 FE                MOV     R6,A
0098 A3                INC     DPTR
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#i
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 105 

009E E0                MOVX    A,@DPTR
009F FC                MOV     R4,A
00A0 A3                INC     DPTR
00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 AE05              MOV     R6,AR5
00A5 EE                MOV     A,R6
00A6 2F                ADD     A,R7
00A7 FD                MOV     R5,A
00A8 120000      E     LCALL   _EEPROM_Write
00AB 900000      R     MOV     DPTR,#writeStatus
00AE EF                MOV     A,R7
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 942
00B0 900000      R     MOV     DPTR,#writeStatus
00B3 E0                MOVX    A,@DPTR
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 6007              JZ      ?C0189
                                           ; SOURCE LINE # 943
00B8 900000      R     MOV     DPTR,#ret_val
00BB E4                CLR     A
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 944
00BD 800C              SJMP    ?C0188
                                           ; SOURCE LINE # 945
                                           ; SOURCE LINE # 946
00BF         ?C0189:
00BF 900000      R     MOV     DPTR,#i
00C2 E4                CLR     A
00C3 75F001            MOV     B,#01H
00C6 120000      E     LCALL   ?C?IILDX
00C9 8089              SJMP    ?C0187
00CB         ?C0188:
                                           ; SOURCE LINE # 948
00CB 7B01              MOV     R3,#01H
00CD 7A00        E     MOV     R2,#HIGH c_mem
00CF 7900        E     MOV     R1,#LOW c_mem
00D1 C003              PUSH    AR3
00D3 C002              PUSH    AR2
00D5 C001              PUSH    AR1
00D7 7B01              MOV     R3,#01H
00D9 7A00        E     MOV     R2,#HIGH g_mem
00DB 7900        E     MOV     R1,#LOW g_mem
00DD A801              MOV     R0,AR1
00DF AC02              MOV     R4,AR2
00E1 AD03              MOV     R5,AR3
00E3 D001              POP     AR1
00E5 D002              POP     AR2
00E7 D003              POP     AR3
00E9 7E00              MOV     R6,#00H
00EB 7F7E              MOV     R7,#07EH
00ED 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 951
00F0 120000      E     LCALL   ISR_RS485_RX_Enable
                                           ; SOURCE LINE # 953
00F3 900000      R     MOV     DPTR,#ret_val
00F6 E0                MOVX    A,@DPTR
00F7 FF                MOV     R7,A
                                           ; SOURCE LINE # 954
00F8         ?C0191:
00F8 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 106 

             ; FUNCTION _memStore (END)

             ; FUNCTION memRecall (BEGIN)
                                           ; SOURCE LINE # 965
                                           ; SOURCE LINE # 966
                                           ; SOURCE LINE # 969
0000 900000      R     MOV     DPTR,#i
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
0008         ?C0192:
0008 900000      R     MOV     DPTR,#i
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 C3                CLR     C
0011 EF                MOV     A,R7
0012 947E              SUBB    A,#07EH
0014 EE                MOV     A,R6
0015 9400              SUBB    A,#00H
0017 5040              JNC     ?C0193
                                           ; SOURCE LINE # 970
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#EEPROM_ADDR
0024 E0                MOVX    A,@DPTR
0025 FC                MOV     R4,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 8D82              MOV     DPL,R5
002B 8C83              MOV     DPH,R4
002D E582              MOV     A,DPL
002F 2F                ADD     A,R7
0030 F582              MOV     DPL,A
0032 E583              MOV     A,DPH
0034 3E                ADDC    A,R6
0035 F583              MOV     DPH,A
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#i
003C E0                MOVX    A,@DPTR
003D FC                MOV     R4,A
003E A3                INC     DPTR
003F E0                MOVX    A,@DPTR
0040 FD                MOV     R5,A
0041 7400        E     MOV     A,#LOW g_mem
0043 2D                ADD     A,R5
0044 F582              MOV     DPL,A
0046 7400        E     MOV     A,#HIGH g_mem
0048 3C                ADDC    A,R4
0049 F583              MOV     DPH,A
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 107 

                                           ; SOURCE LINE # 971
004D 900000      R     MOV     DPTR,#i
0050 E4                CLR     A
0051 75F001            MOV     B,#01H
0054 120000      E     LCALL   ?C?IILDX
0057 80AF              SJMP    ?C0192
0059         ?C0193:
                                           ; SOURCE LINE # 974
0059 900000      E     MOV     DPTR,#g_mem
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E EF                MOV     A,R7
005F 7004              JNZ     ?C0195
                                           ; SOURCE LINE # 975
0061 120000      R     LCALL   memRestore
                                           ; SOURCE LINE # 976
0064 22                RET     
0065         ?C0195:
                                           ; SOURCE LINE # 977
0065 7B01              MOV     R3,#01H
0067 7A00        E     MOV     R2,#HIGH g_mem
0069 7900        E     MOV     R1,#LOW g_mem
006B C003              PUSH    AR3
006D C002              PUSH    AR2
006F C001              PUSH    AR1
0071 7B01              MOV     R3,#01H
0073 7A00        E     MOV     R2,#HIGH c_mem
0075 7900        E     MOV     R1,#LOW c_mem
0077 A801              MOV     R0,AR1
0079 AC02              MOV     R4,AR2
007B AD03              MOV     R5,AR3
007D D001              POP     AR1
007F D002              POP     AR2
0081 D003              POP     AR3
0083 7E00              MOV     R6,#00H
0085 7F7E              MOV     R7,#07EH
0087 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 978
                                           ; SOURCE LINE # 979
008A         ?C0197:
008A 22                RET     
             ; FUNCTION memRecall (END)

             ; FUNCTION memRestore (BEGIN)
                                           ; SOURCE LINE # 990
                                           ; SOURCE LINE # 993
0000 900000      R     MOV     DPTR,#i
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
0008         ?C0198:
0008 900000      R     MOV     DPTR,#i
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 C3                CLR     C
0011 EF                MOV     A,R7
0012 947E              SUBB    A,#07EH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 108 

0014 EE                MOV     A,R6
0015 9400              SUBB    A,#00H
0017 5048              JNC     ?C0199
                                           ; SOURCE LINE # 994
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 2480              ADD     A,#080H
0024 FF                MOV     R7,A
0025 EE                MOV     A,R6
0026 3400              ADDC    A,#00H
0028 FE                MOV     R6,A
0029 900000      R     MOV     DPTR,#EEPROM_ADDR
002C E0                MOVX    A,@DPTR
002D FC                MOV     R4,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 FD                MOV     R5,A
0031 8D82              MOV     DPL,R5
0033 8C83              MOV     DPH,R4
0035 E582              MOV     A,DPL
0037 2F                ADD     A,R7
0038 F582              MOV     DPL,A
003A E583              MOV     A,DPH
003C 3E                ADDC    A,R6
003D F583              MOV     DPH,A
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#i
0044 E0                MOVX    A,@DPTR
0045 FC                MOV     R4,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FD                MOV     R5,A
0049 7400        E     MOV     A,#LOW g_mem
004B 2D                ADD     A,R5
004C F582              MOV     DPL,A
004E 7400        E     MOV     A,#HIGH g_mem
0050 3C                ADDC    A,R4
0051 F583              MOV     DPH,A
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 995
0055 900000      R     MOV     DPTR,#i
0058 E4                CLR     A
0059 75F001            MOV     B,#01H
005C 120000      E     LCALL   ?C?IILDX
005F 80A7              SJMP    ?C0198
0061         ?C0199:
                                           ; SOURCE LINE # 998
0061 900000      E     MOV     DPTR,#g_mem
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 7004              JNZ     ?C0201
                                           ; SOURCE LINE # 999
0069 120000      R     LCALL   memInit
006C 22                RET     
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 109 

                                           ; SOURCE LINE # 1000
006D         ?C0201:
                                           ; SOURCE LINE # 1001
006D 7F00              MOV     R7,#00H
006F 7E00              MOV     R6,#00H
0071 120000      R     LCALL   _memStore
                                           ; SOURCE LINE # 1002
                                           ; SOURCE LINE # 1003
0074         ?C0202:
0074 22                RET     
             ; FUNCTION memRestore (END)

             ; FUNCTION memInit (BEGIN)
                                           ; SOURCE LINE # 1013
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1018
0000 900000      E     MOV     DPTR,#g_mem+01H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1020
0006 7FD7              MOV     R7,#0D7H
0008 7E03              MOV     R6,#03H
000A 7D00              MOV     R5,#00H
000C 7C00              MOV     R4,#00H
000E 900000      E     MOV     DPTR,#g_mem+02H
0011 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1021
0014 7F1E              MOV     R7,#01EH
0016 7E05              MOV     R6,#05H
0018 7D00              MOV     R5,#00H
001A 7C00              MOV     R4,#00H
001C 900000      E     MOV     DPTR,#g_mem+06H
001F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1022
0022 7FCA              MOV     R7,#0CAH
0024 7E01              MOV     R6,#01H
0026 7D00              MOV     R5,#00H
0028 7C00              MOV     R4,#00H
002A 900000      E     MOV     DPTR,#g_mem+0AH
002D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1023
0030 7F00              MOV     R7,#00H
0032 7E00              MOV     R6,#00H
0034 7D01              MOV     R5,#01H
0036 7C00              MOV     R4,#00H
0038 900000      E     MOV     DPTR,#g_mem+0EH
003B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1024
003E 7F41              MOV     R7,#041H
0040 7E00              MOV     R6,#00H
0042 7D00              MOV     R5,#00H
0044 7C00              MOV     R4,#00H
0046 900000      E     MOV     DPTR,#g_mem+012H
0049 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1025
004C 7F00              MOV     R7,#00H
004E 7E00              MOV     R6,#00H
0050 7D00              MOV     R5,#00H
0052 7C00              MOV     R4,#00H
0054 900000      E     MOV     DPTR,#g_mem+016H
0057 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1027
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 110 

005A 900000      E     MOV     DPTR,#g_mem+032H
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1028
005F 900000      E     MOV     DPTR,#g_mem+033H
0062 E4                CLR     A
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
0064 900000      E     MOV     DPTR,#g_mem+034H
0067 E4                CLR     A
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1031
0069 900000      E     MOV     DPTR,#g_mem+050H
006C 7401              MOV     A,#01H
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1033
006F 900000      E     MOV     DPTR,#g_mem+07BH
0072 E4                CLR     A
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1035
0074 900000      E     MOV     DPTR,#g_mem+035H
0077 7403              MOV     A,#03H
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1036
007A 900000      E     MOV     DPTR,#g_mem+036H
007D 7403              MOV     A,#03H
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1037
0080 900000      E     MOV     DPTR,#g_mem+037H
0083 7403              MOV     A,#03H
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1039
0086 900000      R     MOV     DPTR,#i
0089 E4                CLR     A
008A F0                MOVX    @DPTR,A
008B         ?C0204:
008B 900000      R     MOV     DPTR,#i
008E E0                MOVX    A,@DPTR
008F FF                MOV     R7,A
0090 EF                MOV     A,R7
0091 C3                CLR     C
0092 9402              SUBB    A,#02H
0094 504E              JNC     ?C0205
                                           ; SOURCE LINE # 1040
0096 7F00              MOV     R7,#00H
0098 7E00              MOV     R6,#00H
009A 7D00              MOV     R5,#00H
009C 7C00              MOV     R4,#00H
009E 900000      R     MOV     DPTR,#i
00A1 E0                MOVX    A,@DPTR
00A2 FB                MOV     R3,A
00A3 EB                MOV     A,R3
00A4 25E0              ADD     A,ACC
00A6 25E0              ADD     A,ACC
00A8 2400        E     ADD     A,#LOW g_mem+051H
00AA F582              MOV     DPL,A
00AC E4                CLR     A
00AD 3400        E     ADDC    A,#HIGH g_mem+051H
00AF F583              MOV     DPH,A
00B1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1041
00B4 7F38              MOV     R7,#038H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 111 

00B6 7E4A              MOV     R6,#04AH
00B8 7D00              MOV     R5,#00H
00BA 7C00              MOV     R4,#00H
00BC 900000      E     MOV     DPTR,#g_mem+035H
00BF E0                MOVX    A,@DPTR
00C0 F9                MOV     R1,A
00C1 A801              MOV     R0,AR1
00C3 120000      E     LCALL   ?C?LSHL
00C6 900000      R     MOV     DPTR,#i
00C9 E0                MOVX    A,@DPTR
00CA FB                MOV     R3,A
00CB EB                MOV     A,R3
00CC 25E0              ADD     A,ACC
00CE 25E0              ADD     A,ACC
00D0 2400        E     ADD     A,#LOW g_mem+059H
00D2 F582              MOV     DPL,A
00D4 E4                CLR     A
00D5 3400        E     ADDC    A,#HIGH g_mem+059H
00D7 F583              MOV     DPH,A
00D9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1042
00DC 900000      R     MOV     DPTR,#i
00DF E0                MOVX    A,@DPTR
00E0 04                INC     A
00E1 F0                MOVX    @DPTR,A
00E2 80A7              SJMP    ?C0204
00E4         ?C0205:
                                           ; SOURCE LINE # 1044
00E4 900000      R     MOV     DPTR,#i
00E7 E4                CLR     A
00E8 F0                MOVX    @DPTR,A
00E9         ?C0207:
00E9 900000      R     MOV     DPTR,#i
00EC E0                MOVX    A,@DPTR
00ED FF                MOV     R7,A
00EE EF                MOV     A,R7
00EF C3                CLR     C
00F0 9403              SUBB    A,#03H
00F2 505A              JNC     ?C0208
                                           ; SOURCE LINE # 1045
                                           ; SOURCE LINE # 1046
00F4 7F00              MOV     R7,#00H
00F6 7E00              MOV     R6,#00H
00F8 7D80              MOV     R5,#080H
00FA 7C3F              MOV     R4,#03FH
00FC 900000      R     MOV     DPTR,#i
00FF E0                MOVX    A,@DPTR
0100 FB                MOV     R3,A
0101 EB                MOV     A,R3
0102 25E0              ADD     A,ACC
0104 25E0              ADD     A,ACC
0106 2400        E     ADD     A,#LOW g_mem+044H
0108 F582              MOV     DPL,A
010A E4                CLR     A
010B 3400        E     ADDC    A,#HIGH g_mem+044H
010D F583              MOV     DPH,A
010F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1047
0112 7F00              MOV     R7,#00H
0114 7E00              MOV     R6,#00H
0116 7D00              MOV     R5,#00H
0118 7C00              MOV     R4,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 112 

011A 900000      R     MOV     DPTR,#i
011D E0                MOVX    A,@DPTR
011E FB                MOV     R3,A
011F 7400        E     MOV     A,#LOW g_mem+035H
0121 2B                ADD     A,R3
0122 F582              MOV     DPL,A
0124 E4                CLR     A
0125 3400        E     ADDC    A,#HIGH g_mem+035H
0127 F583              MOV     DPH,A
0129 E0                MOVX    A,@DPTR
012A F9                MOV     R1,A
012B A801              MOV     R0,AR1
012D 120000      E     LCALL   ?C?LSHL
0130 900000      R     MOV     DPTR,#i
0133 E0                MOVX    A,@DPTR
0134 FB                MOV     R3,A
0135 EB                MOV     A,R3
0136 25E0              ADD     A,ACC
0138 25E0              ADD     A,ACC
013A 2400        E     ADD     A,#LOW g_mem+038H
013C F582              MOV     DPL,A
013E E4                CLR     A
013F 3400        E     ADDC    A,#HIGH g_mem+038H
0141 F583              MOV     DPH,A
0143 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1048
0146 900000      R     MOV     DPTR,#i
0149 E0                MOVX    A,@DPTR
014A 04                INC     A
014B F0                MOVX    @DPTR,A
014C 809B              SJMP    ?C0207
014E         ?C0208:
                                           ; SOURCE LINE # 1050
014E 7F00              MOV     R7,#00H
0150 7E00              MOV     R6,#00H
0152 7D00              MOV     R5,#00H
0154 7C00              MOV     R4,#00H
0156 900000      E     MOV     DPTR,#g_mem+061H
0159 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1051
015C 7F00              MOV     R7,#00H
015E 7E00              MOV     R6,#00H
0160 7D00              MOV     R5,#00H
0162 7C00              MOV     R4,#00H
0164 900000      E     MOV     DPTR,#g_mem+065H
0167 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1053
016A 900000      E     MOV     DPTR,#g_mem+069H
016D 7403              MOV     A,#03H
016F F0                MOVX    @DPTR,A
0170 A3                INC     DPTR
0171 74E8              MOV     A,#0E8H
0173 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1056
0174 900000      E     MOV     DPTR,#g_mem+06FH
0177 E4                CLR     A
0178 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1058
0179 7F00              MOV     R7,#00H
017B 7E00              MOV     R6,#00H
017D 7D00              MOV     R5,#00H
017F 7C00              MOV     R4,#00H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 113 

0181 900000      E     MOV     DPTR,#g_mem+070H
0184 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1059
0187 7F00              MOV     R7,#00H
0189 7E00              MOV     R6,#00H
018B 7D00              MOV     R5,#00H
018D 7C00              MOV     R4,#00H
018F 900000      E     MOV     DPTR,#g_mem+074H
0192 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1061
0195 900000      E     MOV     DPTR,#g_mem+06BH
0198 E4                CLR     A
0199 F0                MOVX    @DPTR,A
019A A3                INC     DPTR
019B 7464              MOV     A,#064H
019D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1062
019E 900000      E     MOV     DPTR,#g_mem+06DH
01A1 E4                CLR     A
01A2 F0                MOVX    @DPTR,A
01A3 A3                INC     DPTR
01A4 7464              MOV     A,#064H
01A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1064
01A7 900000      E     MOV     DPTR,#g_mem+078H
01AA 7464              MOV     A,#064H
01AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1066
01AD 900000      E     MOV     DPTR,#g_mem+079H
01B0 7401              MOV     A,#01H
01B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1067
01B3 900000      E     MOV     DPTR,#g_mem+07AH
01B6 7416              MOV     A,#016H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1070
01B9 900000      E     MOV     DPTR,#g_mem
01BC 7401              MOV     A,#01H
01BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1073
01BF 7F00              MOV     R7,#00H
01C1 7E00              MOV     R6,#00H
01C3 120000      R     LCALL   _memStore
01C6 EF                MOV     A,R7
01C7 600E              JZ      ?C0210
01C9 7F08              MOV     R7,#08H
01CB 7E00              MOV     R6,#00H
01CD 120000      R     LCALL   _memStore
01D0 EF                MOV     A,R7
01D1 6004              JZ      ?C0210
01D3 7F01              MOV     R7,#01H
01D5 8002              SJMP    ?C0211
01D7         ?C0210:
01D7 7F00              MOV     R7,#00H
01D9         ?C0211:
                                           ; SOURCE LINE # 1074
01D9         ?C0212:
01D9 22                RET     
             ; FUNCTION memInit (END)

             ; FUNCTION cmd_get_measurements (BEGIN)
                                           ; SOURCE LINE # 1083
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 114 

                                           ; SOURCE LINE # 1092
0000 900000      R     MOV     DPTR,#packet_data
0003 7484              MOV     A,#084H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1094
0006 750003      R     MOV     index,#03H
0009         ?C0213:
0009 AF00        R     MOV     R7,index
000B 1500        R     DEC     index
000D EF                MOV     A,R7
000E 603C              JZ      ?C0214
                                           ; SOURCE LINE # 1095
0010 AF00        R     MOV     R7,index
0012 EF                MOV     A,R7
0013 25E0              ADD     A,ACC
0015 25E0              ADD     A,ACC
0017 2400        E     ADD     A,#LOW g_measOld
0019 F582              MOV     DPL,A
001B E4                CLR     A
001C 3400        E     ADDC    A,#HIGH g_measOld
001E F583              MOV     DPH,A
0020 120000      E     LCALL   ?C?LLDXDATA
0023 AB00        R     MOV     R3,index
0025 7400        E     MOV     A,#LOW g_mem+035H
0027 2B                ADD     A,R3
0028 F582              MOV     DPL,A
002A E4                CLR     A
002B 3400        E     ADDC    A,#HIGH g_mem+035H
002D F583              MOV     DPH,A
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 A801              MOV     R0,AR1
0033 120000      E     LCALL   ?C?SLSHR
0036 E500        R     MOV     A,index
0038 25E0              ADD     A,ACC
003A FD                MOV     R5,A
003B 7400        R     MOV     A,#LOW packet_data+01H
003D 2D                ADD     A,R5
003E F582              MOV     DPL,A
0040 E4                CLR     A
0041 3400        R     ADDC    A,#HIGH packet_data+01H
0043 F583              MOV     DPH,A
0045 EE                MOV     A,R6
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
004A 80BD              SJMP    ?C0213
004C         ?C0214:
                                           ; SOURCE LINE # 1099
004C 7B01              MOV     R3,#01H
004E 7A00        R     MOV     R2,#HIGH packet_data
0050 7900        R     MOV     R1,#LOW packet_data
0052 7D07              MOV     R5,#07H
0054 120000      R     LCALL   _LCRChecksum
0057 900000      R     MOV     DPTR,#packet_data+07H
005A EF                MOV     A,R7
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1101
005C 7B01              MOV     R3,#01H
005E 7A00        R     MOV     R2,#HIGH packet_data
0060 7900        R     MOV     R1,#LOW packet_data
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 115 

0062 7D08              MOV     R5,#08H
0064 7C00              MOV     R4,#00H
0066 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1103
0069 22                RET     
             ; FUNCTION cmd_get_measurements (END)

             ; FUNCTION cmd_set_inputs (BEGIN)
                                           ; SOURCE LINE # 1105
                                           ; SOURCE LINE # 1109
0000 900000      E     MOV     DPTR,#g_mem+034H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 B4022B            CJNE    A,#02H,?C0216
                                           ; SOURCE LINE # 1110
0009 900000      E     MOV     DPTR,#g_rx+01H
000C E0                MOVX    A,@DPTR
000D FE                MOV     R6,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FF                MOV     R7,A
0011 EE                MOV     A,R6
0012 33                RLC     A
0013 95E0              SUBB    A,ACC
0015 FD                MOV     R5,A
0016 FC                MOV     R4,A
0017 900000      E     MOV     DPTR,#g_refNew+08H
001A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1111
001D 900000      E     MOV     DPTR,#g_rx+03H
0020 E0                MOVX    A,@DPTR
0021 FE                MOV     R6,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 EE                MOV     A,R6
0026 33                RLC     A
0027 95E0              SUBB    A,ACC
0029 FD                MOV     R5,A
002A FC                MOV     R4,A
002B 900000      E     MOV     DPTR,#g_refNew+0CH
002E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1112
0031 020000      R     LJMP    ?C0217
0034         ?C0216:
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1114
0034 900000      E     MOV     DPTR,#g_mem+034H
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A B4012A            CJNE    A,#01H,?C0218
                                           ; SOURCE LINE # 1115
003D 900000      E     MOV     DPTR,#g_rx+01H
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 EE                MOV     A,R6
0046 33                RLC     A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 116 

0047 95E0              SUBB    A,ACC
0049 FD                MOV     R5,A
004A FC                MOV     R4,A
004B 900000      E     MOV     DPTR,#g_refNew+010H
004E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1116
0051 900000      E     MOV     DPTR,#g_rx+03H
0054 E0                MOVX    A,@DPTR
0055 FE                MOV     R6,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 EE                MOV     A,R6
005A 33                RLC     A
005B 95E0              SUBB    A,ACC
005D FD                MOV     R5,A
005E FC                MOV     R4,A
005F 900000      E     MOV     DPTR,#g_refNew+014H
0062 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1117
0065 8054              SJMP    ?C0217
0067         ?C0218:
                                           ; SOURCE LINE # 1118
                                           ; SOURCE LINE # 1119
0067 900000      E     MOV     DPTR,#g_rx+01H
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EE                MOV     A,R6
0070 33                RLC     A
0071 95E0              SUBB    A,ACC
0073 FD                MOV     R5,A
0074 FC                MOV     R4,A
0075 900000      E     MOV     DPTR,#g_refNew
0078 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1120
007B 900000      E     MOV     DPTR,#g_refNew
007E 120000      E     LCALL   ?C?LLDXDATA
0081 900000      E     MOV     DPTR,#g_mem+035H
0084 E0                MOVX    A,@DPTR
0085 F9                MOV     R1,A
0086 A801              MOV     R0,AR1
0088 120000      E     LCALL   ?C?LSHL
008B 900000      E     MOV     DPTR,#g_refNew
008E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1122
0091 900000      E     MOV     DPTR,#g_rx+03H
0094 E0                MOVX    A,@DPTR
0095 FE                MOV     R6,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 EE                MOV     A,R6
009A 33                RLC     A
009B 95E0              SUBB    A,ACC
009D FD                MOV     R5,A
009E FC                MOV     R4,A
009F 900000      E     MOV     DPTR,#g_refNew+04H
00A2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1123
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 117 

00A5 900000      E     MOV     DPTR,#g_refNew+04H
00A8 120000      E     LCALL   ?C?LLDXDATA
00AB 900000      E     MOV     DPTR,#g_mem+036H
00AE E0                MOVX    A,@DPTR
00AF F9                MOV     R1,A
00B0 A801              MOV     R0,AR1
00B2 120000      E     LCALL   ?C?LSHL
00B5 900000      E     MOV     DPTR,#g_refNew+04H
00B8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1125
00BB         ?C0217:
                                           ; SOURCE LINE # 1129
00BB 900000      E     MOV     DPTR,#c_mem+050H
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 7003              JNZ     $ + 5H
00C3 020000      R     LJMP    ?C0226
00C6 900000      E     MOV     DPTR,#g_mem+034H
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB EF                MOV     A,R7
00CC 6403              XRL     A,#03H
00CE 6008              JZ      ?C0221
00D0 900000      E     MOV     DPTR,#g_mem+034H
00D3 E0                MOVX    A,@DPTR
00D4 FF                MOV     R7,A
00D5 EF                MOV     A,R7
00D6 7078              JNZ     ?C0226
00D8         ?C0221:
                                           ; SOURCE LINE # 1131
                                           ; SOURCE LINE # 1133
00D8 900000      E     MOV     DPTR,#c_mem+051H
00DB 120000      E     LCALL   ?C?LLDXDATA
00DE 900000      E     MOV     DPTR,#g_refNew
00E1 120000      E     LCALL   ?C?LLDXDATA0
00E4 C3                CLR     C
00E5 120000      E     LCALL   ?C?SLCMP
00E8 500C              JNC     ?C0222
                                           ; SOURCE LINE # 1134
00EA 900000      E     MOV     DPTR,#c_mem+051H
00ED 120000      E     LCALL   ?C?LLDXDATA
00F0 900000      E     MOV     DPTR,#g_refNew
00F3 120000      E     LCALL   ?C?LSTXDATA
00F6         ?C0222:
                                           ; SOURCE LINE # 1135
00F6 900000      E     MOV     DPTR,#c_mem+055H
00F9 120000      E     LCALL   ?C?LLDXDATA
00FC 900000      E     MOV     DPTR,#g_refNew+04H
00FF 120000      E     LCALL   ?C?LLDXDATA0
0102 C3                CLR     C
0103 120000      E     LCALL   ?C?SLCMP
0106 500C              JNC     ?C0223
                                           ; SOURCE LINE # 1136
0108 900000      E     MOV     DPTR,#c_mem+055H
010B 120000      E     LCALL   ?C?LLDXDATA
010E 900000      E     MOV     DPTR,#g_refNew+04H
0111 120000      E     LCALL   ?C?LSTXDATA
0114         ?C0223:
                                           ; SOURCE LINE # 1138
0114 900000      E     MOV     DPTR,#c_mem+059H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 118 

0117 120000      E     LCALL   ?C?LLDXDATA
011A 900000      E     MOV     DPTR,#g_refNew
011D 120000      E     LCALL   ?C?LLDXDATA0
0120 D3                SETB    C
0121 120000      E     LCALL   ?C?SLCMP
0124 400C              JC      ?C0224
                                           ; SOURCE LINE # 1139
0126 900000      E     MOV     DPTR,#c_mem+059H
0129 120000      E     LCALL   ?C?LLDXDATA
012C 900000      E     MOV     DPTR,#g_refNew
012F 120000      E     LCALL   ?C?LSTXDATA
0132         ?C0224:
                                           ; SOURCE LINE # 1140
0132 900000      E     MOV     DPTR,#c_mem+05DH
0135 120000      E     LCALL   ?C?LLDXDATA
0138 900000      E     MOV     DPTR,#g_refNew+04H
013B 120000      E     LCALL   ?C?LLDXDATA0
013E D3                SETB    C
013F 120000      E     LCALL   ?C?SLCMP
0142 400C              JC      ?C0226
                                           ; SOURCE LINE # 1141
0144 900000      E     MOV     DPTR,#c_mem+05DH
0147 120000      E     LCALL   ?C?LLDXDATA
014A 900000      E     MOV     DPTR,#g_refNew+04H
014D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1142
                                           ; SOURCE LINE # 1143
0150         ?C0226:
0150 22                RET     
             ; FUNCTION cmd_set_inputs (END)

             ; FUNCTION cmd_activate (BEGIN)
                                           ; SOURCE LINE # 1145
                                           ; SOURCE LINE # 1148
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      E     MOV     DPTR,#g_refNew+018H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1151
000A 900000      E     MOV     DPTR,#g_mem+034H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 6009              JZ      ?C0228
0012 900000      E     MOV     DPTR,#g_mem+034H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 B40318            CJNE    A,#03H,?C0227
001B         ?C0228:
                                           ; SOURCE LINE # 1152
001B 900000      E     MOV     DPTR,#g_meas
001E 120000      E     LCALL   ?C?LLDXDATA
0021 900000      E     MOV     DPTR,#g_refNew
0024 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1153
0027 900000      E     MOV     DPTR,#g_meas+04H
002A 120000      E     LCALL   ?C?LLDXDATA
002D 900000      E     MOV     DPTR,#g_refNew+04H
0030 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 119 

                                           ; SOURCE LINE # 1154
0033         ?C0227:
                                           ; SOURCE LINE # 1157
0033 900000      E     MOV     DPTR,#g_refNew+018H
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1158
003B 22                RET     
             ; FUNCTION cmd_activate (END)

             ; FUNCTION cmd_get_activate (BEGIN)
                                           ; SOURCE LINE # 1160
                                           ; SOURCE LINE # 1165
0000 900000      R     MOV     DPTR,#packet_data
0003 7481              MOV     A,#081H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1168
0006 900000      E     MOV     DPTR,#g_ref+018H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#packet_data+01H
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1171
0010 7B01              MOV     R3,#01H
0012 7A00        R     MOV     R2,#HIGH packet_data
0014 7900        R     MOV     R1,#LOW packet_data
0016 7D02              MOV     R5,#02H
0018 120000      R     LCALL   _LCRChecksum
001B 900000      R     MOV     DPTR,#packet_data+02H
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1174
0020 7B01              MOV     R3,#01H
0022 7A00        R     MOV     R2,#HIGH packet_data
0024 7900        R     MOV     R1,#LOW packet_data
0026 7D03              MOV     R5,#03H
0028 7C00              MOV     R4,#00H
002A 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1176
002D 22                RET     
             ; FUNCTION cmd_get_activate (END)

             ; FUNCTION cmd_get_curr_and_meas (BEGIN)
                                           ; SOURCE LINE # 1178
                                           ; SOURCE LINE # 1187
0000 900000      R     MOV     DPTR,#packet_data
0003 7486              MOV     A,#086H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1190
0006 900000      E     MOV     DPTR,#g_measOld+0CH
0009 120000      E     LCALL   ?C?LLDXDATA
000C 900000      R     MOV     DPTR,#packet_data+01H
000F EE                MOV     A,R6
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1191
0014 900000      E     MOV     DPTR,#g_measOld+010H
0017 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 120 

001A 900000      R     MOV     DPTR,#packet_data+03H
001D EE                MOV     A,R6
001E F0                MOVX    @DPTR,A
001F A3                INC     DPTR
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1194
0022 750003      R     MOV     index,#03H
0025         ?C0231:
0025 AF00        R     MOV     R7,index
0027 1500        R     DEC     index
0029 EF                MOV     A,R7
002A 603E              JZ      ?C0232
                                           ; SOURCE LINE # 1195
002C AF00        R     MOV     R7,index
002E EF                MOV     A,R7
002F 25E0              ADD     A,ACC
0031 25E0              ADD     A,ACC
0033 2400        E     ADD     A,#LOW g_measOld
0035 F582              MOV     DPL,A
0037 E4                CLR     A
0038 3400        E     ADDC    A,#HIGH g_measOld
003A F583              MOV     DPH,A
003C 120000      E     LCALL   ?C?LLDXDATA
003F AB00        R     MOV     R3,index
0041 7400        E     MOV     A,#LOW g_mem+035H
0043 2B                ADD     A,R3
0044 F582              MOV     DPL,A
0046 E4                CLR     A
0047 3400        E     ADDC    A,#HIGH g_mem+035H
0049 F583              MOV     DPH,A
004B E0                MOVX    A,@DPTR
004C F9                MOV     R1,A
004D A801              MOV     R0,AR1
004F 120000      E     LCALL   ?C?SLSHR
0052 E500        R     MOV     A,index
0054 25E0              ADD     A,ACC
0056 25E0              ADD     A,ACC
0058 FD                MOV     R5,A
0059 7400        R     MOV     A,#LOW packet_data+05H
005B 2D                ADD     A,R5
005C F582              MOV     DPL,A
005E E4                CLR     A
005F 3400        R     ADDC    A,#HIGH packet_data+05H
0061 F583              MOV     DPH,A
0063 EE                MOV     A,R6
0064 F0                MOVX    @DPTR,A
0065 A3                INC     DPTR
0066 EF                MOV     A,R7
0067 F0                MOVX    @DPTR,A
0068 80BB              SJMP    ?C0231
006A         ?C0232:
                                           ; SOURCE LINE # 1199
006A 7B01              MOV     R3,#01H
006C 7A00        R     MOV     R2,#HIGH packet_data
006E 7900        R     MOV     R1,#LOW packet_data
0070 7D0B              MOV     R5,#0BH
0072 120000      R     LCALL   _LCRChecksum
0075 900000      R     MOV     DPTR,#packet_data+0BH
0078 EF                MOV     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1200
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 121 

007A 7B01              MOV     R3,#01H
007C 7A00        R     MOV     R2,#HIGH packet_data
007E 7900        R     MOV     R1,#LOW packet_data
0080 7D0C              MOV     R5,#0CH
0082 7C00              MOV     R4,#00H
0084 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1202
0087 22                RET     
             ; FUNCTION cmd_get_curr_and_meas (END)

             ; FUNCTION cmd_get_currents (BEGIN)
                                           ; SOURCE LINE # 1204
                                           ; SOURCE LINE # 1212
0000 900000      R     MOV     DPTR,#packet_data
0003 7485              MOV     A,#085H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1214
0006 900000      E     MOV     DPTR,#g_measOld+0CH
0009 120000      E     LCALL   ?C?LLDXDATA
000C 900000      R     MOV     DPTR,#packet_data+01H
000F EE                MOV     A,R6
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1215
0014 900000      E     MOV     DPTR,#g_measOld+010H
0017 120000      E     LCALL   ?C?LLDXDATA
001A 900000      R     MOV     DPTR,#packet_data+03H
001D EE                MOV     A,R6
001E F0                MOVX    @DPTR,A
001F A3                INC     DPTR
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1219
0022 7B01              MOV     R3,#01H
0024 7A00        R     MOV     R2,#HIGH packet_data
0026 7900        R     MOV     R1,#LOW packet_data
0028 7D05              MOV     R5,#05H
002A 120000      R     LCALL   _LCRChecksum
002D 900000      R     MOV     DPTR,#packet_data+05H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1221
0032 7B01              MOV     R3,#01H
0034 7A00        R     MOV     R2,#HIGH packet_data
0036 7900        R     MOV     R1,#LOW packet_data
0038 7D06              MOV     R5,#06H
003A 7C00              MOV     R4,#00H
003C 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1222
003F 22                RET     
             ; FUNCTION cmd_get_currents (END)

             ; FUNCTION cmd_set_baudrate (BEGIN)
                                           ; SOURCE LINE # 1224
                                           ; SOURCE LINE # 1227
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      E     MOV     DPTR,#c_mem+07CH
0008 EF                MOV     A,R7
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 122 

0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1229
000A 900000      E     MOV     DPTR,#g_rx+01H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 120000      E     LCALL   ?C?CCASE
0013 0000        R     DW      ?C0236
0015 0D                DB      0DH
0016 0000              DW      00H
0018 0000        R     DW      ?C0237
                                           ; SOURCE LINE # 1230
001A         ?C0236:
                                           ; SOURCE LINE # 1231
001A 7D01              MOV     R5,#01H
001C 7F0C              MOV     R7,#0CH
001E 7E00              MOV     R6,#00H
0020 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 1232
0023 22                RET     
                                           ; SOURCE LINE # 1233
0024         ?C0237:
                                           ; SOURCE LINE # 1234
0024 7D01              MOV     R5,#01H
0026 7F02              MOV     R7,#02H
0028 7E00              MOV     R6,#00H
002A 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 1235
                                           ; SOURCE LINE # 1236
002D         ?C0238:
002D 22                RET     
             ; FUNCTION cmd_set_baudrate (END)

             ; FUNCTION cmd_ping (BEGIN)
                                           ; SOURCE LINE # 1238
                                           ; SOURCE LINE # 1243
0000 900000      R     MOV     DPTR,#packet_data
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1246
0005 900000      R     MOV     DPTR,#packet_data+01H
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1249
000A 7B01              MOV     R3,#01H
000C 7A00        R     MOV     R2,#HIGH packet_data
000E 7900        R     MOV     R1,#LOW packet_data
0010 7D02              MOV     R5,#02H
0012 7C00              MOV     R4,#00H
0014 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1250
0017 22                RET     
             ; FUNCTION cmd_ping (END)

             ; FUNCTION cmd_set_watchdog (BEGIN)
                                           ; SOURCE LINE # 1252
                                           ; SOURCE LINE # 1254
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 D3                SETB    C
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 123 

0007 9400              SUBB    A,#00H
0009 500B              JNC     ?C0240
                                           ; SOURCE LINE # 1256
000B 7F01              MOV     R7,#01H
000D 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 1257
0010 900000      E     MOV     DPTR,#g_mem+07DH
0013 E4                CLR     A
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1258
0015 22                RET     
0016         ?C0240:
                                           ; SOURCE LINE # 1259
                                           ; SOURCE LINE # 1261
0016 900000      E     MOV     DPTR,#g_rx+01H
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C D3                SETB    C
001D 94FA              SUBB    A,#0FAH
001F 4006              JC      ?C0242
                                           ; SOURCE LINE # 1262
0021 900000      E     MOV     DPTR,#g_rx+01H
0024 74FA              MOV     A,#0FAH
0026 F0                MOVX    @DPTR,A
0027         ?C0242:
                                           ; SOURCE LINE # 1267
0027 900000      E     MOV     DPTR,#g_rx+01H
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E 7C01              MOV     R4,#01H
0030 7DF4              MOV     R5,#0F4H
0032 120000      E     LCALL   ?C?LIMUL
0035 780A              MOV     R0,#0AH
0037 120000      E     LCALL   ?C?ULSHR
003A 900000      E     MOV     DPTR,#g_mem+07DH
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1268
003F 900000      E     MOV     DPTR,#g_mem+07DH
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 120000      E     LCALL   _WATCHDOG_COUNTER_WritePeriod
                                           ; SOURCE LINE # 1269
0047 7F00              MOV     R7,#00H
0049 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 1270
                                           ; SOURCE LINE # 1271
004C         ?C0243:
004C 22                RET     
             ; FUNCTION cmd_set_watchdog (END)

             ; FUNCTION cmd_get_inputs (BEGIN)
                                           ; SOURCE LINE # 1273
                                           ; SOURCE LINE # 1281
0000 900000      R     MOV     DPTR,#packet_data
0003 7483              MOV     A,#083H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1283
0006 900000      E     MOV     DPTR,#g_refOld
0009 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 124 

000C 900000      E     MOV     DPTR,#g_mem+035H
000F E0                MOVX    A,@DPTR
0010 F9                MOV     R1,A
0011 A801              MOV     R0,AR1
0013 120000      E     LCALL   ?C?SLSHR
0016 900000      R     MOV     DPTR,#packet_data+01H
0019 EE                MOV     A,R6
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1284
001E 900000      E     MOV     DPTR,#g_refOld+04H
0021 120000      E     LCALL   ?C?LLDXDATA
0024 900000      E     MOV     DPTR,#g_mem+036H
0027 E0                MOVX    A,@DPTR
0028 F9                MOV     R1,A
0029 A801              MOV     R0,AR1
002B 120000      E     LCALL   ?C?SLSHR
002E 900000      R     MOV     DPTR,#packet_data+03H
0031 EE                MOV     A,R6
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1288
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH packet_data
003A 7900        R     MOV     R1,#LOW packet_data
003C 7D05              MOV     R5,#05H
003E 120000      R     LCALL   _LCRChecksum
0041 900000      R     MOV     DPTR,#packet_data+05H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1290
0046 7B01              MOV     R3,#01H
0048 7A00        R     MOV     R2,#HIGH packet_data
004A 7900        R     MOV     R1,#LOW packet_data
004C 7D06              MOV     R5,#06H
004E 7C00              MOV     R4,#00H
0050 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1291
0053 22                RET     
             ; FUNCTION cmd_get_inputs (END)

             ; FUNCTION cmd_store_params (BEGIN)
                                           ; SOURCE LINE # 1293
                                           ; SOURCE LINE # 1299
0000 900000      E     MOV     DPTR,#c_mem+033H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 6003              JZ      $ + 5H
0008 020000      R     LJMP    ?C0245
                                           ; SOURCE LINE # 1300
000B 900000      E     MOV     DPTR,#c_mem+038H
000E 120000      E     LCALL   ?C?LLDXDATA
0011 900000      R     MOV     DPTR,#off_1
0014 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1301
0017 900000      E     MOV     DPTR,#c_mem+03CH
001A 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 125 

001D 900000      R     MOV     DPTR,#off_2
0020 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1302
0023 900000      E     MOV     DPTR,#c_mem+044H
0026 120000      E     LCALL   ?C?LLDXDATA
0029 900000      R     MOV     DPTR,#mult_1
002C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1303
002F 900000      E     MOV     DPTR,#c_mem+048H
0032 120000      E     LCALL   ?C?LLDXDATA
0035 900000      R     MOV     DPTR,#mult_2
0038 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1305
003B 900000      E     MOV     DPTR,#g_refNew
003E 120000      E     LCALL   ?C?LLDXDATA
0041 EC                MOV     A,R4
0042 120000      E     LCALL   ?C?FCASTL
0045 900000      R     MOV     DPTR,#mult_1
0048 120000      E     LCALL   ?C?LLDXDATA0
004B 120000      E     LCALL   ?C?FPDIV
004E 120000      E     LCALL   ?C?CASTF
0051 900000      E     MOV     DPTR,#g_refNew
0054 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1306
0057 900000      E     MOV     DPTR,#g_refNew+04H
005A 120000      E     LCALL   ?C?LLDXDATA
005D EC                MOV     A,R4
005E 120000      E     LCALL   ?C?FCASTL
0061 900000      R     MOV     DPTR,#mult_2
0064 120000      E     LCALL   ?C?LLDXDATA0
0067 120000      E     LCALL   ?C?FPDIV
006A 120000      E     LCALL   ?C?CASTF
006D 900000      E     MOV     DPTR,#g_refNew+04H
0070 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1308
0073 900000      E     MOV     DPTR,#g_refNew
0076 120000      E     LCALL   ?C?LLDXDATA
0079 EC                MOV     A,R4
007A 120000      E     LCALL   ?C?FCASTL
007D 900000      E     MOV     DPTR,#g_mem+044H
0080 120000      E     LCALL   ?C?LLDXDATA0
0083 120000      E     LCALL   ?C?FPMUL
0086 120000      E     LCALL   ?C?CASTF
0089 900000      E     MOV     DPTR,#g_refNew
008C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1309
008F 900000      E     MOV     DPTR,#g_refNew+04H
0092 120000      E     LCALL   ?C?LLDXDATA
0095 EC                MOV     A,R4
0096 120000      E     LCALL   ?C?FCASTL
0099 900000      E     MOV     DPTR,#g_mem+048H
009C 120000      E     LCALL   ?C?LLDXDATA0
009F 120000      E     LCALL   ?C?FPMUL
00A2 120000      E     LCALL   ?C?CASTF
00A5 900000      E     MOV     DPTR,#g_refNew+04H
00A8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1311
00AB 900000      E     MOV     DPTR,#g_refNew
00AE 120000      E     LCALL   ?C?LLDXDATA
00B1 C004              PUSH    AR4
00B3 C005              PUSH    AR5
00B5 C006              PUSH    AR6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 126 

00B7 C007              PUSH    AR7
00B9 900000      R     MOV     DPTR,#off_1
00BC 120000      E     LCALL   ?C?LLDXDATA
00BF AB07              MOV     R3,AR7
00C1 AA06              MOV     R2,AR6
00C3 A905              MOV     R1,AR5
00C5 A804              MOV     R0,AR4
00C7 A804              MOV     R0,AR4
00C9 A905              MOV     R1,AR5
00CB AA06              MOV     R2,AR6
00CD AB07              MOV     R3,AR7
00CF 900000      E     MOV     DPTR,#g_mem+038H
00D2 120000      E     LCALL   ?C?LLDXDATA
00D5 120000      E     LCALL   ?C?LSUB
00D8 A804              MOV     R0,AR4
00DA A905              MOV     R1,AR5
00DC AA06              MOV     R2,AR6
00DE AB07              MOV     R3,AR7
00E0 D007              POP     AR7
00E2 D006              POP     AR6
00E4 D005              POP     AR5
00E6 D004              POP     AR4
00E8 120000      E     LCALL   ?C?LADD
00EB 900000      E     MOV     DPTR,#g_refNew
00EE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1312
00F1 900000      E     MOV     DPTR,#g_refNew+04H
00F4 120000      E     LCALL   ?C?LLDXDATA
00F7 C004              PUSH    AR4
00F9 C005              PUSH    AR5
00FB C006              PUSH    AR6
00FD C007              PUSH    AR7
00FF 900000      R     MOV     DPTR,#off_2
0102 120000      E     LCALL   ?C?LLDXDATA
0105 AB07              MOV     R3,AR7
0107 AA06              MOV     R2,AR6
0109 A905              MOV     R1,AR5
010B A804              MOV     R0,AR4
010D A804              MOV     R0,AR4
010F A905              MOV     R1,AR5
0111 AA06              MOV     R2,AR6
0113 AB07              MOV     R3,AR7
0115 900000      E     MOV     DPTR,#g_mem+03CH
0118 120000      E     LCALL   ?C?LLDXDATA
011B 120000      E     LCALL   ?C?LSUB
011E A804              MOV     R0,AR4
0120 A905              MOV     R1,AR5
0122 AA06              MOV     R2,AR6
0124 AB07              MOV     R3,AR7
0126 D007              POP     AR7
0128 D006              POP     AR6
012A D005              POP     AR5
012C D004              POP     AR4
012E 120000      E     LCALL   ?C?LADD
0131 900000      E     MOV     DPTR,#g_refNew+04H
0134 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1316
0137 900000      E     MOV     DPTR,#c_mem+050H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 6078              JZ      ?C0245
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 127 

                                           ; SOURCE LINE # 1317
013F 900000      E     MOV     DPTR,#c_mem+051H
0142 120000      E     LCALL   ?C?LLDXDATA
0145 900000      E     MOV     DPTR,#g_refNew
0148 120000      E     LCALL   ?C?LLDXDATA0
014B C3                CLR     C
014C 120000      E     LCALL   ?C?SLCMP
014F 500C              JNC     ?C0247
                                           ; SOURCE LINE # 1318
0151 900000      E     MOV     DPTR,#c_mem+051H
0154 120000      E     LCALL   ?C?LLDXDATA
0157 900000      E     MOV     DPTR,#g_refNew
015A 120000      E     LCALL   ?C?LSTXDATA
015D         ?C0247:
                                           ; SOURCE LINE # 1319
015D 900000      E     MOV     DPTR,#c_mem+055H
0160 120000      E     LCALL   ?C?LLDXDATA
0163 900000      E     MOV     DPTR,#g_refNew+04H
0166 120000      E     LCALL   ?C?LLDXDATA0
0169 C3                CLR     C
016A 120000      E     LCALL   ?C?SLCMP
016D 500C              JNC     ?C0248
                                           ; SOURCE LINE # 1320
016F 900000      E     MOV     DPTR,#c_mem+055H
0172 120000      E     LCALL   ?C?LLDXDATA
0175 900000      E     MOV     DPTR,#g_refNew+04H
0178 120000      E     LCALL   ?C?LSTXDATA
017B         ?C0248:
                                           ; SOURCE LINE # 1322
017B 900000      E     MOV     DPTR,#c_mem+059H
017E 120000      E     LCALL   ?C?LLDXDATA
0181 900000      E     MOV     DPTR,#g_refNew
0184 120000      E     LCALL   ?C?LLDXDATA0
0187 D3                SETB    C
0188 120000      E     LCALL   ?C?SLCMP
018B 400C              JC      ?C0249
                                           ; SOURCE LINE # 1323
018D 900000      E     MOV     DPTR,#c_mem+059H
0190 120000      E     LCALL   ?C?LLDXDATA
0193 900000      E     MOV     DPTR,#g_refNew
0196 120000      E     LCALL   ?C?LSTXDATA
0199         ?C0249:
                                           ; SOURCE LINE # 1324
0199 900000      E     MOV     DPTR,#c_mem+05DH
019C 120000      E     LCALL   ?C?LLDXDATA
019F 900000      E     MOV     DPTR,#g_refNew+04H
01A2 120000      E     LCALL   ?C?LLDXDATA0
01A5 D3                SETB    C
01A6 120000      E     LCALL   ?C?SLCMP
01A9 400C              JC      ?C0245
                                           ; SOURCE LINE # 1325
01AB 900000      E     MOV     DPTR,#c_mem+05DH
01AE 120000      E     LCALL   ?C?LLDXDATA
01B1 900000      E     MOV     DPTR,#g_refNew+04H
01B4 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1326
                                           ; SOURCE LINE # 1327
01B7         ?C0245:
                                           ; SOURCE LINE # 1330
01B7 7F00              MOV     R7,#00H
01B9 7E00              MOV     R6,#00H
01BB 120000      R     LCALL   _memStore
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 128 

01BE EF                MOV     A,R7
01BF 6006              JZ      ?C0251
                                           ; SOURCE LINE # 1331
01C1 7F01              MOV     R7,#01H
01C3 120000      R     LCALL   _sendAcknowledgment
01C6 22                RET     
01C7         ?C0251:
                                           ; SOURCE LINE # 1333
01C7 7F00              MOV     R7,#00H
01C9 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 1334
01CC         ?C0253:
01CC 22                RET     
             ; FUNCTION cmd_store_params (END)

             ; FUNCTION cmd_get_emg (BEGIN)
                                           ; SOURCE LINE # 1336
                                           ; SOURCE LINE # 1341
0000 900000      R     MOV     DPTR,#packet_data
0003 7488              MOV     A,#088H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1343
0006 900000      E     MOV     DPTR,#g_measOld+017H
0009 120000      E     LCALL   ?C?LLDXDATA
000C 900000      R     MOV     DPTR,#packet_data+01H
000F EE                MOV     A,R6
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1344
0014 900000      E     MOV     DPTR,#g_measOld+01BH
0017 120000      E     LCALL   ?C?LLDXDATA
001A 900000      R     MOV     DPTR,#packet_data+03H
001D EE                MOV     A,R6
001E F0                MOVX    @DPTR,A
001F A3                INC     DPTR
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1346
0022 7B01              MOV     R3,#01H
0024 7A00        R     MOV     R2,#HIGH packet_data
0026 7900        R     MOV     R1,#LOW packet_data
0028 7D05              MOV     R5,#05H
002A 120000      R     LCALL   _LCRChecksum
002D 900000      R     MOV     DPTR,#packet_data+05H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1348
0032 7B01              MOV     R3,#01H
0034 7A00        R     MOV     R2,#HIGH packet_data
0036 7900        R     MOV     R1,#LOW packet_data
0038 7D06              MOV     R5,#06H
003A 7C00              MOV     R4,#00H
003C 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1350
003F 22                RET     
             ; FUNCTION cmd_get_emg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    05/16/2016 15:21:37 PAGE 129 

   CODE SIZE        =  10941    ----
   CONSTANT SIZE    =   1151    ----
   XDATA SIZE       =   1104    1325
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
